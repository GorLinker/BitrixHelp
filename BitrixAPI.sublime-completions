{
	"scope": "source.php - variable.other.php",

	"completions":
	[
		{"trigger": "CAdvBanner::Add", "contents": "${1:CAdvBanner}::Add(${2:\\$arFields})$0"},
		{"trigger": "CAdvBanner::BeforeRestartBuffer", "contents": "${1:CAdvBanner}::BeforeRestartBuffer()$0"},
		{"trigger": "CAdvBanner::CalculateRotationProgress", "contents": "${1:CAdvBanner}::CalculateRotationProgress(${2:\\$arBanner})$0"},
		{"trigger": "CAdvBanner::CalculateTimeDiff", "contents": "${1:CAdvBanner}::CalculateTimeDiff(${2:\\$arBanner})$0"},
		{"trigger": "CAdvBanner::CalculateTimeProgress", "contents": "${1:CAdvBanner}::CalculateTimeProgress(${2:\\$arBanner})$0"},
		{"trigger": "CAdvBanner::CheckDynamicFilter", "contents": "${1:CAdvBanner}::CheckDynamicFilter(${2:\\$arFilter})$0"},
		{"trigger": "CAdvBanner::CheckFields", "contents": "${1:CAdvBanner}::CheckFields(${2:\\$arFields}, ${2:\\$BANNER_ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvBanner::CheckFilter", "contents": "${1:CAdvBanner}::CheckFilter(${2:\\$arFilter})$0"},
		{"trigger": "CAdvBanner::CleanUpDynamics", "contents": "${1:CAdvBanner}::CleanUpDynamics()$0"},
		{"trigger": "CAdvBanner::Click", "contents": "${1:CAdvBanner}::Click(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::Copy", "contents": "${1:CAdvBanner}::Copy(${2:\\$BANNER_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvBanner::Delete", "contents": "${1:CAdvBanner}::Delete(${2:\\$BANNER_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvBanner::DeleteCountryLink", "contents": "${1:CAdvBanner}::DeleteCountryLink(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::DeleteGroupLink", "contents": "${1:CAdvBanner}::DeleteGroupLink(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::DeletePageLink", "contents": "${1:CAdvBanner}::DeletePageLink(${2:\\$BANNER_ID}, ${2:\\$where=''})$0"},
		{"trigger": "CAdvBanner::DeleteSiteLink", "contents": "${1:CAdvBanner}::DeleteSiteLink(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::DeleteStatAdvLink", "contents": "${1:CAdvBanner}::DeleteStatAdvLink(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::DeleteWeekdayLink", "contents": "${1:CAdvBanner}::DeleteWeekdayLink(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::FixShow", "contents": "${1:CAdvBanner}::FixShow(${2:\\$arBanner})$0"},
		{"trigger": "CAdvBanner::FixShowAll", "contents": "${1:CAdvBanner}::FixShowAll()$0"},
		{"trigger": "CAdvBanner::GetByID", "contents": "${1:CAdvBanner}::GetByID(${2:\\$BANNER_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvBanner::GetCountryarray", "contents": "${1:CAdvBanner}::GetCountryarray(${2:\\$BANNER_ID}, ${2:\\$WHAT = 'COUNTRY'})$0"},
		{"trigger": "CAdvBanner::GetCurUri", "contents": "${1:CAdvBanner}::GetCurUri()$0"},
		{"trigger": "CAdvBanner::GetDesiredKeywords", "contents": "${1:CAdvBanner}::GetDesiredKeywords(${2:\\$TYPE_SID=''}, ${2:\\$EXACT_MATCH=''})$0"},
		{"trigger": "CAdvBanner::GetDynamicList", "contents": "${1:CAdvBanner}::GetDynamicList(${2:\\$arFilter}, ${2:&\\$arrLegend}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CAdvBanner::GetDynamicList_SQL", "contents": "${1:CAdvBanner}::GetDynamicList_SQL(${2:\\$strSqlSearch})$0"},
		{"trigger": "CAdvBanner::GetEditIcons", "contents": "${1:CAdvBanner}::GetEditIcons(${2:\\$arBanner}, ${2:\\$TYPE_SID=''})$0"},
		{"trigger": "CAdvBanner::GetGrouparray", "contents": "${1:CAdvBanner}::GetGrouparray(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::GetHTML", "contents": "${1:CAdvBanner}::GetHTML(${2:\\$arBanner}, ${2:\\$bNoIndex=false})$0"},
		{"trigger": "CAdvBanner::GetKeywords", "contents": "${1:CAdvBanner}::GetKeywords(${2:\\$TYPE_SID=''}, ${2:\\$LOGIC=''}, ${4:\\$EXACT_MATCH=''})$0"},
		{"trigger": "CAdvBanner::GetList", "contents": "${1:CAdvBanner}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvBanner::GetPagearray", "contents": "${1:CAdvBanner}::GetPagearray(${2:\\$BANNER_ID}, ${2:\\$SHOW='SHOW'})$0"},
		{"trigger": "CAdvBanner::GetPageWeights_RS", "contents": "${1:CAdvBanner}::GetPageWeights_RS()$0"},
		{"trigger": "CAdvBanner::GetRandom", "contents": "${1:CAdvBanner}::GetRandom(${2:\\$TYPE_SID})$0"},
		{"trigger": "CAdvBanner::GetRedirectURL", "contents": "${1:CAdvBanner}::GetRedirectURL(${2:\\$url}, ${2:\\$arBanner})$0"},
		{"trigger": "CAdvBanner::GetRequiredKeywords", "contents": "${1:CAdvBanner}::GetRequiredKeywords(${2:\\$TYPE_SID=''}, ${2:\\$EXACT_MATCH=''})$0"},
		{"trigger": "CAdvBanner::GetSitearray", "contents": "${1:CAdvBanner}::GetSitearray(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::GetStatAdvarray", "contents": "${1:CAdvBanner}::GetStatAdvarray(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::GetStatList", "contents": "${1:CAdvBanner}::GetStatList(${2:\\$by}, ${2:\\$order}, ${4:\\$arFilter})$0"},
		{"trigger": "CAdvBanner::GetStatusList", "contents": "${1:CAdvBanner}::GetStatusList()$0"},
		{"trigger": "CAdvBanner::GetUniformityCoef", "contents": "${1:CAdvBanner}::GetUniformityCoef(${2:\\$arBanner})$0"},
		{"trigger": "CAdvBanner::GetWeekdayarray", "contents": "${1:CAdvBanner}::GetWeekdayarray(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::PrepareHTML", "contents": "${1:CAdvBanner}::PrepareHTML(${2:\\$text}, ${2:\\$arBanner})$0"},
		{"trigger": "CAdvBanner::ReplaceURL", "contents": "${1:CAdvBanner}::ReplaceURL(${2:\\$text}, ${2:\\$arBanner})$0"},
		{"trigger": "CAdvBanner::ResetKeywords", "contents": "${1:CAdvBanner}::ResetKeywords(${2:\\$TYPE_SID=''}, ${2:\\$LOGIC=''}, ${4:\\$EXACT_MATCH=''})$0"},
		{"trigger": "CAdvBanner::Set", "contents": "${1:CAdvBanner}::Set(${2:\\$arFields}, ${2:\\$BANNER_ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvBanner::SetCookie", "contents": "${1:CAdvBanner}::SetCookie(${2:\\$arBanner}, ${2:&\\$inc_banner_counter}, ${4:&\\$inc_contract_counter})$0"},
		{"trigger": "CAdvBanner::SetCurUri", "contents": "${1:CAdvBanner}::SetCurUri(${2:\\$uri=false})$0"},
		{"trigger": "CAdvBanner::SetDesiredKeywords", "contents": "${1:CAdvBanner}::SetDesiredKeywords(${2:\\$keywords}, ${2:\\$TYPE_SID=''})$0"},
		{"trigger": "CAdvBanner::SetKeywords", "contents": "${1:CAdvBanner}::SetKeywords(${2:\\$keywords}, ${2:\\$TYPE_SID=''}, ${4:\\$LOGIC='DESIRED'})$0"},
		{"trigger": "CAdvBanner::SetRequiredKeywords", "contents": "${1:CAdvBanner}::SetRequiredKeywords(${2:\\$keywords}, ${2:\\$TYPE_SID=''})$0"},
		{"trigger": "CAdvBanner::Show", "contents": "${1:CAdvBanner}::Show(${2:\\$TYPE_SID}, ${2:\\$HTML_BEFORE=''}, ${4:\\$HTML_AFTER=''})$0"},
		{"trigger": "CAdvBanner::Update", "contents": "${1:CAdvBanner}::Update(${2:\\$arFields}, ${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvBanner::err_mess", "contents": "${1:CAdvBanner}::err_mess()$0"},
		{"trigger": "CAdvBanner::getCTRSQL", "contents": "${1:CAdvBanner}::getCTRSQL()$0"},
		{"trigger": "CAdvContract::CheckFields", "contents": "${1:CAdvContract}::CheckFields(${2:\\$arFields}, ${2:\\$CONTRACT_ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvContract::CheckFilter", "contents": "${1:CAdvContract}::CheckFilter(${2:\\$arFilter})$0"},
		{"trigger": "CAdvContract::Delete", "contents": "${1:CAdvContract}::Delete(${2:\\$CONTRACT_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvContract::DeletePageLink", "contents": "${1:CAdvContract}::DeletePageLink(${2:\\$CONTRACT_ID}, ${2:\\$where=''})$0"},
		{"trigger": "CAdvContract::DeleteSiteLink", "contents": "${1:CAdvContract}::DeleteSiteLink(${2:\\$CONTRACT_ID})$0"},
		{"trigger": "CAdvContract::DeleteTypeLink", "contents": "${1:CAdvContract}::DeleteTypeLink(${2:\\$CONTRACT_ID})$0"},
		{"trigger": "CAdvContract::DeleteUserLink", "contents": "${1:CAdvContract}::DeleteUserLink(${2:\\$CONTRACT_ID}, ${2:\\$where=''})$0"},
		{"trigger": "CAdvContract::DeleteWeekdayLink", "contents": "${1:CAdvContract}::DeleteWeekdayLink(${2:\\$CONTRACT_ID})$0"},
		{"trigger": "CAdvContract::GetAdminEmails", "contents": "${1:CAdvContract}::GetAdminEmails()$0"},
		{"trigger": "CAdvContract::GetAdminRoleID", "contents": "${1:CAdvContract}::GetAdminRoleID()$0"},
		{"trigger": "CAdvContract::GetAdvertiserRoleID", "contents": "${1:CAdvContract}::GetAdvertiserRoleID()$0"},
		{"trigger": "CAdvContract::GetAdvertisersarray", "contents": "${1:CAdvContract}::GetAdvertisersarray()$0"},
		{"trigger": "CAdvContract::GetByID", "contents": "${1:CAdvContract}::GetByID(${2:\\$CONTRACT_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvContract::GetContractPermissions", "contents": "${1:CAdvContract}::GetContractPermissions(${2:\\$CONTRACT_ID})$0"},
		{"trigger": "CAdvContract::GetDemoRoleID", "contents": "${1:CAdvContract}::GetDemoRoleID()$0"},
		{"trigger": "CAdvContract::GetDeniedRoleID", "contents": "${1:CAdvContract}::GetDeniedRoleID()$0"},
		{"trigger": "CAdvContract::GetEmailarrayByRole", "contents": "${1:CAdvContract}::GetEmailarrayByRole(${2:\\$role})$0"},
		{"trigger": "CAdvContract::GetGroupsByRole", "contents": "${1:CAdvContract}::GetGroupsByRole(${2:\\$role})$0"},
		{"trigger": "CAdvContract::GetList", "contents": "${1:CAdvContract}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvContract::GetManagerEmails", "contents": "${1:CAdvContract}::GetManagerEmails()$0"},
		{"trigger": "CAdvContract::GetManagerRoleID", "contents": "${1:CAdvContract}::GetManagerRoleID()$0"},
		{"trigger": "CAdvContract::GetMaxPermissionsarray", "contents": "${1:CAdvContract}::GetMaxPermissionsarray()$0"},
		{"trigger": "CAdvContract::GetNextSort", "contents": "${1:CAdvContract}::GetNextSort()$0"},
		{"trigger": "CAdvContract::GetOwnerEmails", "contents": "${1:CAdvContract}::GetOwnerEmails(${2:\\$CONTRACT_ID}, ${2:&\\$OWNER_EMAIL}, ${4:&\\$ADD_EMAIL}, ${4:&\\$VIEW_EMAIL}, ${6:&\\$EDIT_EMAIL})$0"},
		{"trigger": "CAdvContract::GetPagearray", "contents": "${1:CAdvContract}::GetPagearray(${2:\\$CONTRACT_ID}, ${2:\\$SHOW='SHOW'})$0"},
		{"trigger": "CAdvContract::GetSitearray", "contents": "${1:CAdvContract}::GetSitearray(${2:\\$CONTRACT_ID})$0"},
		{"trigger": "CAdvContract::GetStatList", "contents": "${1:CAdvContract}::GetStatList(${2:\\$by}, ${2:\\$order}, ${4:\\$arFilter})$0"},
		{"trigger": "CAdvContract::GetTypearray", "contents": "${1:CAdvContract}::GetTypearray(${2:\\$CONTRACT_ID})$0"},
		{"trigger": "CAdvContract::GetUserPermissions", "contents": "${1:CAdvContract}::GetUserPermissions(${2:\\$CONTRACT_ID=0}, ${2:\\$USER_ID=false})$0"},
		{"trigger": "CAdvContract::GetWeekdayarray", "contents": "${1:CAdvContract}::GetWeekdayarray(${2:\\$CONTRACT_ID})$0"},
		{"trigger": "CAdvContract::HaveRole", "contents": "${1:CAdvContract}::HaveRole(${2:\\$role}, ${2:\\$USER_ID=false})$0"},
		{"trigger": "CAdvContract::IsAdmin", "contents": "${1:CAdvContract}::IsAdmin(${2:\\$USER_ID=false})$0"},
		{"trigger": "CAdvContract::IsAdvertiser", "contents": "${1:CAdvContract}::IsAdvertiser(${2:\\$USER_ID=false})$0"},
		{"trigger": "CAdvContract::IsDemo", "contents": "${1:CAdvContract}::IsDemo(${2:\\$USER_ID=false})$0"},
		{"trigger": "CAdvContract::IsManager", "contents": "${1:CAdvContract}::IsManager(${2:\\$USER_ID=false})$0"},
		{"trigger": "CAdvContract::IsOwner", "contents": "${1:CAdvContract}::IsOwner(${2:\\$CONTRACT_ID}, ${2:\\$USER_ID=false})$0"},
		{"trigger": "CAdvContract::SendEMail", "contents": "${1:CAdvContract}::SendEMail(${2:\\$arContract}, ${2:\\$mess=''})$0"},
		{"trigger": "CAdvContract::SendInfo", "contents": "${1:CAdvContract}::SendInfo()$0"},
		{"trigger": "CAdvContract::Set", "contents": "${1:CAdvContract}::Set(${2:\\$arFields}, ${2:\\$CONTRACT_ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvContract::err_mess", "contents": "${1:CAdvContract}::err_mess()$0"},
		{"trigger": "CAdvType::CheckFields", "contents": "${1:CAdvType}::CheckFields(${2:\\$arFields}, ${2:\\$OLD_SID}, ${4:\\$CHECK_RIGHTS})$0"},
		{"trigger": "CAdvType::CheckFilter", "contents": "${1:CAdvType}::CheckFilter(${2:\\$arFilter})$0"},
		{"trigger": "CAdvType::Delete", "contents": "${1:CAdvType}::Delete(${2:\\$TYPE_SID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvType::DeleteContractLink", "contents": "${1:CAdvType}::DeleteContractLink(${2:\\$TYPE_SID})$0"},
		{"trigger": "CAdvType::GetByID", "contents": "${1:CAdvType}::GetByID(${2:\\$TYPE_SID})$0"},
		{"trigger": "CAdvType::GetList", "contents": "${1:CAdvType}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvType::GetNextSort", "contents": "${1:CAdvType}::GetNextSort()$0"},
		{"trigger": "CAdvType::Set", "contents": "${1:CAdvType}::Set(${2:\\$arFields}, ${2:\\$OLD_SID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CAdvType::err_mess", "contents": "${1:CAdvType}::err_mess()$0"},
		{"trigger": "CAdvertising::ClickAdv", "contents": "${1:CAdvertising}::ClickAdv(${2:\\$BANNER_ID})$0"},
		{"trigger": "CAdvertising::GetAdv", "contents": "${1:CAdvertising}::GetAdv(${2:\\$TYPE_SID})$0"},
		{"trigger": "CBitrixLiveapi::OnAdminPageLoad", "contents": "${1:CBitrixLiveapi}::OnAdminPageLoad()$0"},
		{"trigger": "CSiteCorporate::ShowPanel", "contents": "${1:CSiteCorporate}::ShowPanel()$0"},
		{"trigger": "CSiteStore::ShowPanel", "contents": "${1:CSiteStore}::ShowPanel()$0"},
		{"trigger": "CBPActivity::AddStatusChangeHandler", "contents": "${1:CBPActivity}::AddStatusChangeHandler(${2:\\$event}, ${2:\\$eventHandler})$0"},
		{"trigger": "CBPActivity::AddStatusTitle", "contents": "${1:CBPActivity}::AddStatusTitle(${2:\\$title = ''})$0"},
		{"trigger": "CBPActivity::CallStaticMethod", "contents": "${1:CBPActivity}::CallStaticMethod(${2:\\$code}, ${2:\\$method}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CBPActivity::Cancel", "contents": "${1:CBPActivity}::Cancel()$0"},
		{"trigger": "CBPActivity::ClearProperties", "contents": "${1:CBPActivity}::ClearProperties()$0"},
		{"trigger": "CBPActivity::ClearVariables", "contents": "${1:CBPActivity}::ClearVariables()$0"},
		{"trigger": "CBPActivity::CollectNestedActivities", "contents": "${1:CBPActivity}::CollectNestedActivities()$0"},
		{"trigger": "CBPActivity::CreateInstance", "contents": "${1:CBPActivity}::CreateInstance(${2:\\$code}, ${2:\\$data})$0"},
		{"trigger": "CBPActivity::DeleteStatusTitle", "contents": "${1:CBPActivity}::DeleteStatusTitle(${2:\\$title = ''})$0"},
		{"trigger": "CBPActivity::Dump", "contents": "${1:CBPActivity}::Dump(${2:\\$level = 3})$0"},
		{"trigger": "CBPActivity::Execute", "contents": "${1:CBPActivity}::Execute()$0"},
		{"trigger": "CBPActivity::FireStatusChangedEvents", "contents": "${1:CBPActivity}::FireStatusChangedEvents(${2:\\$event}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPActivity::FixUpParentChildRelationship", "contents": "${1:CBPActivity}::FixUpParentChildRelationship(${2:CBPActivity \\$nestedActivity})$0"},
		{"trigger": "CBPActivity::GetACNames", "contents": "${1:CBPActivity}::GetACNames()$0"},
		{"trigger": "CBPActivity::GetDocumentId", "contents": "${1:CBPActivity}::GetDocumentId()$0"},
		{"trigger": "CBPActivity::GetDocumentType", "contents": "${1:CBPActivity}::GetDocumentType()$0"},
		{"trigger": "CBPActivity::GetName", "contents": "${1:CBPActivity}::GetName()$0"},
		{"trigger": "CBPActivity::GetPropertyBaseType", "contents": "${1:CBPActivity}::GetPropertyBaseType(${2:\\$propertyName})$0"},
		{"trigger": "CBPActivity::GetPropertyValueRecursive", "contents": "${1:CBPActivity}::GetPropertyValueRecursive(${2:\\$val})$0"},
		{"trigger": "CBPActivity::GetRealParameterValue", "contents": "${1:CBPActivity}::GetRealParameterValue(${2:\\$objectName}, ${2:\\$fieldName}, ${4:&\\$result})$0"},
		{"trigger": "CBPActivity::GetRootActivity", "contents": "${1:CBPActivity}::GetRootActivity()$0"},
		{"trigger": "CBPActivity::GetVariable", "contents": "${1:CBPActivity}::GetVariable(${2:\\$name})$0"},
		{"trigger": "CBPActivity::GetVariableBaseType", "contents": "${1:CBPActivity}::GetVariableBaseType(${2:\\$variableName})$0"},
		{"trigger": "CBPActivity::GetWorkflowInstanceId", "contents": "${1:CBPActivity}::GetWorkflowInstanceId()$0"},
		{"trigger": "CBPActivity::GetWorkflowStatus", "contents": "${1:CBPActivity}::GetWorkflowStatus()$0"},
		{"trigger": "CBPActivity::HandleFault", "contents": "${1:CBPActivity}::HandleFault(${2:Exception \\$exception})$0"},
		{"trigger": "CBPActivity::IncludeActivityFile", "contents": "${1:CBPActivity}::IncludeActivityFile(${2:\\$code})$0"},
		{"trigger": "CBPActivity::Initialize", "contents": "${1:CBPActivity}::Initialize()$0"},
		{"trigger": "CBPActivity::InitializeFromarray", "contents": "${1:CBPActivity}::InitializeFromarray(${2:\\$arParams})$0"},
		{"trigger": "CBPActivity::IsPropertyExists", "contents": "${1:CBPActivity}::IsPropertyExists(${2:\\$name})$0"},
		{"trigger": "CBPActivity::IsVariableExists", "contents": "${1:CBPActivity}::IsVariableExists(${2:\\$name})$0"},
		{"trigger": "CBPActivity::Load", "contents": "${1:CBPActivity}::Load(${2:\\$stream})$0"},
		{"trigger": "CBPActivity::MarkCanceled", "contents": "${1:CBPActivity}::MarkCanceled(${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPActivity::MarkClosed", "contents": "${1:CBPActivity}::MarkClosed(${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPActivity::MarkCompleted", "contents": "${1:CBPActivity}::MarkCompleted(${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPActivity::MarkFaulted", "contents": "${1:CBPActivity}::MarkFaulted(${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPActivity::ParseStringParameter", "contents": "${1:CBPActivity}::ParseStringParameter(${2:\\$matches})$0"},
		{"trigger": "CBPActivity::ParseValue", "contents": "${1:CBPActivity}::ParseValue(${2:\\$value})$0"},
		{"trigger": "CBPActivity::ReInitialize", "contents": "${1:CBPActivity}::ReInitialize()$0"},
		{"trigger": "CBPActivity::RemoveStatusChangeHandler", "contents": "${1:CBPActivity}::RemoveStatusChangeHandler(${2:\\$event}, ${2:\\$eventHandler})$0"},
		{"trigger": "CBPActivity::Save", "contents": "${1:CBPActivity}::Save()$0"},
		{"trigger": "CBPActivity::SearchUsedActivities", "contents": "${1:CBPActivity}::SearchUsedActivities(${2:CBPActivity \\$activity}, ${2:&\\$arUsedActivities})$0"},
		{"trigger": "CBPActivity::SetDocumentId", "contents": "${1:CBPActivity}::SetDocumentId(${2:\\$documentId})$0"},
		{"trigger": "CBPActivity::SetDocumentType", "contents": "${1:CBPActivity}::SetDocumentType(${2:\\$documentType})$0"},
		{"trigger": "CBPActivity::SetFieldTypes", "contents": "${1:CBPActivity}::SetFieldTypes(${2:\\$arFieldTypes = array()})$0"},
		{"trigger": "CBPActivity::SetProperties", "contents": "${1:CBPActivity}::SetProperties(${2:\\$arProperties = array()})$0"},
		{"trigger": "CBPActivity::SetPropertiesTypes", "contents": "${1:CBPActivity}::SetPropertiesTypes(${2:\\$arPropertiesTypes = array()})$0"},
		{"trigger": "CBPActivity::SetStatus", "contents": "${1:CBPActivity}::SetStatus(${2:\\$newStatus}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPActivity::SetStatusTitle", "contents": "${1:CBPActivity}::SetStatusTitle(${2:\\$title = ''})$0"},
		{"trigger": "CBPActivity::SetVariable", "contents": "${1:CBPActivity}::SetVariable(${2:\\$name}, ${2:\\$value})$0"},
		{"trigger": "CBPActivity::SetVariables", "contents": "${1:CBPActivity}::SetVariables(${2:\\$arVariables = array()})$0"},
		{"trigger": "CBPActivity::SetVariablesTypes", "contents": "${1:CBPActivity}::SetVariablesTypes(${2:\\$arVariablesTypes = array()})$0"},
		{"trigger": "CBPActivity::SetWorkflow", "contents": "${1:CBPActivity}::SetWorkflow(${2:CBPWorkflow \\$workflow})$0"},
		{"trigger": "CBPActivity::SetWorkflowStatus", "contents": "${1:CBPActivity}::SetWorkflowStatus(${2:\\$status})$0"},
		{"trigger": "CBPActivity::ToString", "contents": "${1:CBPActivity}::ToString()$0"},
		{"trigger": "CBPActivity::ValidateChild", "contents": "${1:CBPActivity}::ValidateChild(${2:\\$childActivity}, ${2:\\$bFirstChild = false})$0"},
		{"trigger": "CBPActivity::ValidateProperties", "contents": "${1:CBPActivity}::ValidateProperties(${2:\\$arTestProperties = array()}, ${2:CBPWorkflowTemplateUser \\$user = null})$0"},
		{"trigger": "CBPActivity::WriteToTrackingService", "contents": "${1:CBPActivity}::WriteToTrackingService(${2:\\$message = ''}, ${2:\\$modifiedBy = 0}, ${4:\\$trackingType = -1})$0"},
		{"trigger": "CBPActivity::__construct", "contents": "${1:CBPActivity}::__construct(${2:\\$name})$0"},
		{"trigger": "CBPActivity::__get", "contents": "${1:CBPActivity}::__get(${2:\\$name})$0"},
		{"trigger": "CBPActivity::__set", "contents": "${1:CBPActivity}::__set(${2:\\$name}, ${2:\\$val})$0"},
		{"trigger": "CBPActivityCondition::CallStaticMethod", "contents": "${1:CBPActivityCondition}::CallStaticMethod(${2:\\$code}, ${2:\\$method}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CBPActivityCondition::CreateInstance", "contents": "${1:CBPActivityCondition}::CreateInstance(${2:\\$code}, ${2:\\$data})$0"},
		{"trigger": "CBPActivityCondition::Evaluate", "contents": "${1:CBPActivityCondition}::Evaluate(${2:CBPActivity \\$ownerActivity})$0"},
		{"trigger": "CBPActivityCondition::ValidateProperties", "contents": "${1:CBPActivityCondition}::ValidateProperties(${2:\\$value = null}, ${2:CBPWorkflowTemplateUser \\$user = null})$0"},
		{"trigger": "CBPActivityExecutionResult::Out", "contents": "${1:CBPActivityExecutionResult}::Out(${2:\\$v})$0"},
		{"trigger": "CBPActivityExecutionStatus::Out", "contents": "${1:CBPActivityExecutionStatus}::Out(${2:\\$v})$0"},
		{"trigger": "CBPActivityExecutorOperationType::Out", "contents": "${1:CBPActivityExecutorOperationType}::Out(${2:\\$v})$0"},
		{"trigger": "CBPAllHistoryService::Add", "contents": "${1:CBPAllHistoryService}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBPAllHistoryService::Delete", "contents": "${1:CBPAllHistoryService}::Delete(${2:\\$id}, ${2:\\$documentId = null})$0"},
		{"trigger": "CBPAllHistoryService::DeleteByDocument", "contents": "${1:CBPAllHistoryService}::DeleteByDocument(${2:\\$documentId})$0"},
		{"trigger": "CBPAllHistoryService::DeleteHistory", "contents": "${1:CBPAllHistoryService}::DeleteHistory(${2:\\$id}, ${2:\\$documentId = null})$0"},
		{"trigger": "CBPAllHistoryService::DeleteHistoryByDocument", "contents": "${1:CBPAllHistoryService}::DeleteHistoryByDocument(${2:\\$documentId})$0"},
		{"trigger": "CBPAllHistoryService::GenerateFilePath", "contents": "${1:CBPAllHistoryService}::GenerateFilePath(${2:\\$documentId})$0"},
		{"trigger": "CBPAllHistoryService::GetById", "contents": "${1:CBPAllHistoryService}::GetById(${2:\\$id})$0"},
		{"trigger": "CBPAllHistoryService::GetList", "contents": "${1:CBPAllHistoryService}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBPAllHistoryService::GetSerializedForm", "contents": "${1:CBPAllHistoryService}::GetSerializedForm(${2:\\$arTemplate})$0"},
		{"trigger": "CBPAllHistoryService::MergeHistory", "contents": "${1:CBPAllHistoryService}::MergeHistory(${2:\\$firstDocumentId}, ${2:\\$secondDocumentId})$0"},
		{"trigger": "CBPAllHistoryService::ParseFields", "contents": "${1:CBPAllHistoryService}::ParseFields(${2:&\\$arFields}, ${2:\\$id = 0})$0"},
		{"trigger": "CBPAllHistoryService::PrepareFileForHistory", "contents": "${1:CBPAllHistoryService}::PrepareFileForHistory(${2:\\$documentId}, ${2:\\$arFileId}, ${4:\\$historyIndex})$0"},
		{"trigger": "CBPAllHistoryService::RecoverDocumentFromHistory", "contents": "${1:CBPAllHistoryService}::RecoverDocumentFromHistory(${2:\\$id})$0"},
		{"trigger": "CBPAllHistoryService::Update", "contents": "${1:CBPAllHistoryService}::Update(${2:\\$id}, ${2:\\$arFields})$0"},
		{"trigger": "CBPAllHistoryService::__construct", "contents": "${1:CBPAllHistoryService}::__construct()$0"},
		{"trigger": "CBPAllStateService::DeleteAllDocumentWorkflows", "contents": "${1:CBPAllStateService}::DeleteAllDocumentWorkflows(${2:\\$documentId})$0"},
		{"trigger": "CBPAllStateService::DeleteByDocument", "contents": "${1:CBPAllStateService}::DeleteByDocument(${2:\\$documentId})$0"},
		{"trigger": "CBPAllStateService::DeleteWorkflow", "contents": "${1:CBPAllStateService}::DeleteWorkflow(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllStateService::GetDocumentStates", "contents": "${1:CBPAllStateService}::GetDocumentStates(${2:\\$documentId}, ${2:\\$workflowId = ''})$0"},
		{"trigger": "CBPAllStateService::GetStateTitle", "contents": "${1:CBPAllStateService}::GetStateTitle(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllStateService::GetWorkflowState", "contents": "${1:CBPAllStateService}::GetWorkflowState(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllStateService::MergeStates", "contents": "${1:CBPAllStateService}::MergeStates(${2:\\$firstDocumentId}, ${2:\\$secondDocumentId})$0"},
		{"trigger": "CBPAllStateService::SetStatePermissions", "contents": "${1:CBPAllStateService}::SetStatePermissions(${2:\\$workflowId}, ${2:\\$arStatePermissions = array()}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "CBPAllStateService::SetStateTitle", "contents": "${1:CBPAllStateService}::SetStateTitle(${2:\\$workflowId}, ${2:\\$stateTitle})$0"},
		{"trigger": "CBPAllStateService::__ExtractState", "contents": "${1:CBPAllStateService}::__ExtractState(${2:&\\$arStates}, ${2:\\$arResult})$0"},
		{"trigger": "CBPAllTaskService::Delete", "contents": "${1:CBPAllTaskService}::Delete(${2:\\$id})$0"},
		{"trigger": "CBPAllTaskService::DeleteAllWorkflowTasks", "contents": "${1:CBPAllTaskService}::DeleteAllWorkflowTasks(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllTaskService::DeleteByWorkflow", "contents": "${1:CBPAllTaskService}::DeleteByWorkflow(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllTaskService::DeleteTask", "contents": "${1:CBPAllTaskService}::DeleteTask(${2:\\$id})$0"},
		{"trigger": "CBPAllTaskService::MarkCompleted", "contents": "${1:CBPAllTaskService}::MarkCompleted(${2:\\$id}, ${2:\\$userId})$0"},
		{"trigger": "CBPAllTaskService::ParseFields", "contents": "${1:CBPAllTaskService}::ParseFields(${2:&\\$arFields}, ${2:\\$id = 0})$0"},
		{"trigger": "CBPAllTrackingService::ClearOldAgent", "contents": "${1:CBPAllTrackingService}::ClearOldAgent()$0"},
		{"trigger": "CBPAllTrackingService::DeleteAllWorkflowTracking", "contents": "${1:CBPAllTrackingService}::DeleteAllWorkflowTracking(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllTrackingService::DeleteByWorkflow", "contents": "${1:CBPAllTrackingService}::DeleteByWorkflow(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllTrackingService::DumpWorkflow", "contents": "${1:CBPAllTrackingService}::DumpWorkflow(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllTrackingService::LoadReport", "contents": "${1:CBPAllTrackingService}::LoadReport(${2:\\$workflowId})$0"},
		{"trigger": "CBPAllWorkflowPersister::GetOwnershipTimeout", "contents": "${1:CBPAllWorkflowPersister}::GetOwnershipTimeout()$0"},
		{"trigger": "CBPAllWorkflowPersister::GetSerializedForm", "contents": "${1:CBPAllWorkflowPersister}::GetSerializedForm(${2:CBPActivity \\$rootActivity})$0"},
		{"trigger": "CBPAllWorkflowPersister::LoadWorkflow", "contents": "${1:CBPAllWorkflowPersister}::LoadWorkflow(${2:\\$instanceId})$0"},
		{"trigger": "CBPAllWorkflowPersister::RestoreFromSerializedForm", "contents": "${1:CBPAllWorkflowPersister}::RestoreFromSerializedForm(${2:\\$buffer})$0"},
		{"trigger": "CBPAllWorkflowPersister::SaveWorkflow", "contents": "${1:CBPAllWorkflowPersister}::SaveWorkflow(${2:CBPActivity \\$rootActivity}, ${2:\\$bUnlocked})$0"},
		{"trigger": "CBPAllWorkflowPersister::UnlockWorkflow", "contents": "${1:CBPAllWorkflowPersister}::UnlockWorkflow(${2:CBPActivity \\$rootActivity})$0"},
		{"trigger": "CBPAllWorkflowPersister::__InsertWorkflowHack", "contents": "${1:CBPAllWorkflowPersister}::__InsertWorkflowHack(${2:\\$id}, ${2:\\$buffer})$0"},
		{"trigger": "CBPAllWorkflowPersister::__clone", "contents": "${1:CBPAllWorkflowPersister}::__clone()$0"},
		{"trigger": "CBPArgumentException::GetParamName", "contents": "${1:CBPArgumentException}::GetParamName()$0"},
		{"trigger": "CBPArgumentException::__construct", "contents": "${1:CBPArgumentException}::__construct(${2:\\$message}, ${2:\\$paramName = ''})$0"},
		{"trigger": "CBPArgumentNullException::__construct", "contents": "${1:CBPArgumentNullException}::__construct(${2:\\$paramName}, ${2:\\$message = ''})$0"},
		{"trigger": "CBPArgumentOutOfRangeException::GetActualValue", "contents": "${1:CBPArgumentOutOfRangeException}::GetActualValue()$0"},
		{"trigger": "CBPArgumentOutOfRangeException::__construct", "contents": "${1:CBPArgumentOutOfRangeException}::__construct(${2:\\$paramName}, ${2:\\$actualValue = null}, ${4:\\$message = ''})$0"},
		{"trigger": "CBPArgumentTypeException::GetCorrectType", "contents": "${1:CBPArgumentTypeException}::GetCorrectType()$0"},
		{"trigger": "CBPArgumentTypeException::__construct", "contents": "${1:CBPArgumentTypeException}::__construct(${2:\\$paramName}, ${2:\\$correctType = null}, ${4:\\$message = ''})$0"},
		{"trigger": "CBPCalc::ArrgsToarray", "contents": "${1:CBPCalc}::ArrgsToarray(${2:\\$args})$0"},
		{"trigger": "CBPCalc::Calculate", "contents": "${1:CBPCalc}::Calculate(${2:\\$text})$0"},
		{"trigger": "CBPCalc::FunctionAbs", "contents": "${1:CBPCalc}::FunctionAbs(${2:\\$num})$0"},
		{"trigger": "CBPCalc::FunctionAnd", "contents": "${1:CBPCalc}::FunctionAnd(${2:\\$args})$0"},
		{"trigger": "CBPCalc::FunctionDateAdd", "contents": "${1:CBPCalc}::FunctionDateAdd(${2:\\$args})$0"},
		{"trigger": "CBPCalc::FunctionFalse", "contents": "${1:CBPCalc}::FunctionFalse()$0"},
		{"trigger": "CBPCalc::FunctionIf", "contents": "${1:CBPCalc}::FunctionIf(${2:\\$args})$0"},
		{"trigger": "CBPCalc::FunctionIntval", "contents": "${1:CBPCalc}::FunctionIntval(${2:\\$num})$0"},
		{"trigger": "CBPCalc::FunctionMin", "contents": "${1:CBPCalc}::FunctionMin(${2:\\$args})$0"},
		{"trigger": "CBPCalc::FunctionNot", "contents": "${1:CBPCalc}::FunctionNot(${2:\\$arg})$0"},
		{"trigger": "CBPCalc::FunctionOr", "contents": "${1:CBPCalc}::FunctionOr(${2:\\$args})$0"},
		{"trigger": "CBPCalc::FunctionSubstr", "contents": "${1:CBPCalc}::FunctionSubstr(${2:\\$args})$0"},
		{"trigger": "CBPCalc::FunctionTrue", "contents": "${1:CBPCalc}::FunctionTrue()$0"},
		{"trigger": "CBPCalc::GetErrors", "contents": "${1:CBPCalc}::GetErrors()$0"},
		{"trigger": "CBPCalc::GetPolishNotation", "contents": "${1:CBPCalc}::GetPolishNotation(${2:\\$text})$0"},
		{"trigger": "CBPCalc::GetVariableValue", "contents": "${1:CBPCalc}::GetVariableValue(${2:\\$variable})$0"},
		{"trigger": "CBPCalc::SetError", "contents": "${1:CBPCalc}::SetError(${2:\\$errnum}, ${2:\\$errstr = ''})$0"},
		{"trigger": "CBPCalc::__construct", "contents": "${1:CBPCalc}::__construct(${2:\\$activity})$0"},
		{"trigger": "CBPCompositeActivity::ClearNestedActivities", "contents": "${1:CBPCompositeActivity}::ClearNestedActivities()$0"},
		{"trigger": "CBPCompositeActivity::CollectNestedActivities", "contents": "${1:CBPCompositeActivity}::CollectNestedActivities()$0"},
		{"trigger": "CBPCompositeActivity::FixUpParentChildRelationship", "contents": "${1:CBPCompositeActivity}::FixUpParentChildRelationship(${2:CBPActivity \\$nestedActivity})$0"},
		{"trigger": "CBPCompositeActivity::HandleFault", "contents": "${1:CBPCompositeActivity}::HandleFault(${2:Exception \\$exception})$0"},
		{"trigger": "CBPCompositeActivity::Initialize", "contents": "${1:CBPCompositeActivity}::Initialize()$0"},
		{"trigger": "CBPCompositeActivity::ReInitialize", "contents": "${1:CBPCompositeActivity}::ReInitialize()$0"},
		{"trigger": "CBPCompositeActivity::SetWorkflow", "contents": "${1:CBPCompositeActivity}::SetWorkflow(${2:CBPWorkflow \\$workflow})$0"},
		{"trigger": "CBPCompositeActivity::ValidateProperties", "contents": "${1:CBPCompositeActivity}::ValidateProperties(${2:\\$arTestProperties = array()}, ${2:CBPWorkflowTemplateUser \\$user = null})$0"},
		{"trigger": "CBPDocument::AddDefaultWorkflowTemplates", "contents": "${1:CBPDocument}::AddDefaultWorkflowTemplates(${2:\\$documentType}, ${2:\\$additionalModuleId = null})$0"},
		{"trigger": "CBPDocument::AddDocumentToHistory", "contents": "${1:CBPDocument}::AddDocumentToHistory(${2:\\$parameterDocumentId}, ${2:\\$name}, ${4:\\$userId})$0"},
		{"trigger": "CBPDocument::AddShowParameterInit", "contents": "${1:CBPDocument}::AddShowParameterInit(${2:\\$module}, ${2:\\$type}, ${4:\\$document_type}, ${4:\\$entity = ''})$0"},
		{"trigger": "CBPDocument::AutoStartWorkflows", "contents": "${1:CBPDocument}::AutoStartWorkflows(${2:\\$documentType}, ${2:\\$autoExecute}, ${4:\\$documentId}, ${4:\\$arParameters}, ${6:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::CanOperate", "contents": "${1:CBPDocument}::CanOperate(${2:\\$operation}, ${2:\\$userId}, ${4:\\$arGroups}, ${4:\\$arStates})$0"},
		{"trigger": "CBPDocument::CanUserOperateDocument", "contents": "${1:CBPDocument}::CanUserOperateDocument(${2:\\$operation}, ${2:\\$userId}, ${4:\\$parameterDocumentId}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CBPDocument::CanUserOperateDocumentType", "contents": "${1:CBPDocument}::CanUserOperateDocumentType(${2:\\$operation}, ${2:\\$userId}, ${4:\\$parameterDocumentType}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CBPDocument::DeleteWorkflowTemplate", "contents": "${1:CBPDocument}::DeleteWorkflowTemplate(${2:\\$id}, ${2:\\$documentType}, ${4:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::GetAllowableEvents", "contents": "${1:CBPDocument}::GetAllowableEvents(${2:\\$userId}, ${2:\\$arGroups}, ${4:\\$arState})$0"},
		{"trigger": "CBPDocument::GetAllowableOperations", "contents": "${1:CBPDocument}::GetAllowableOperations(${2:\\$userId}, ${2:\\$arGroups}, ${4:\\$arStates})$0"},
		{"trigger": "CBPDocument::GetAllowableUserGroups", "contents": "${1:CBPDocument}::GetAllowableUserGroups(${2:\\$parameterDocumentType})$0"},
		{"trigger": "CBPDocument::GetDocumentAdminPage", "contents": "${1:CBPDocument}::GetDocumentAdminPage(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocument::GetDocumentFromHistory", "contents": "${1:CBPDocument}::GetDocumentFromHistory(${2:\\$historyId}, ${2:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::GetDocumentState", "contents": "${1:CBPDocument}::GetDocumentState(${2:\\$documentId}, ${2:\\$workflowId})$0"},
		{"trigger": "CBPDocument::GetDocumentStates", "contents": "${1:CBPDocument}::GetDocumentStates(${2:\\$documentType}, ${2:\\$documentId = null})$0"},
		{"trigger": "CBPDocument::GetNumberOfWorkflowTemplatesForDocumentType", "contents": "${1:CBPDocument}::GetNumberOfWorkflowTemplatesForDocumentType(${2:\\$documentType})$0"},
		{"trigger": "CBPDocument::GetUserTasksForWorkflow", "contents": "${1:CBPDocument}::GetUserTasksForWorkflow(${2:\\$userId}, ${2:\\$workflowId})$0"},
		{"trigger": "CBPDocument::GetWorkflowTemplatesForDocumentType", "contents": "${1:CBPDocument}::GetWorkflowTemplatesForDocumentType(${2:\\$documentType})$0"},
		{"trigger": "CBPDocument::IsAdmin", "contents": "${1:CBPDocument}::IsAdmin()$0"},
		{"trigger": "CBPDocument::MergeDocuments", "contents": "${1:CBPDocument}::MergeDocuments(${2:\\$firstDocumentId}, ${2:\\$secondDocumentId})$0"},
		{"trigger": "CBPDocument::OnDocumentDelete", "contents": "${1:CBPDocument}::OnDocumentDelete(${2:\\$documentId}, ${2:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::PostTaskForm", "contents": "${1:CBPDocument}::PostTaskForm(${2:\\$arTask}, ${2:\\$userId}, ${4:\\$arRequest}, ${4:&\\$arErrors}, ${6:\\$userName = ''})$0"},
		{"trigger": "CBPDocument::PrepareFileForHistory", "contents": "${1:CBPDocument}::PrepareFileForHistory(${2:\\$documentId}, ${2:\\$fileId}, ${4:\\$historyIndex})$0"},
		{"trigger": "CBPDocument::SendExternalEvent", "contents": "${1:CBPDocument}::SendExternalEvent(${2:\\$workflowId}, ${2:\\$workflowEvent}, ${4:\\$arParameters}, ${4:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::ShowParameterField", "contents": "${1:CBPDocument}::ShowParameterField(${2:\\$type}, ${2:\\$name}, ${4:\\$values}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CBPDocument::ShowTaskForm", "contents": "${1:CBPDocument}::ShowTaskForm(${2:\\$arTask}, ${2:\\$userId}, ${4:\\$userName = ''}, ${4:\\$arRequest = null})$0"},
		{"trigger": "CBPDocument::StartWorkflow", "contents": "${1:CBPDocument}::StartWorkflow(${2:\\$workflowTemplateId}, ${2:\\$documentId}, ${4:\\$arParameters}, ${4:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::StartWorkflowParametersShow", "contents": "${1:CBPDocument}::StartWorkflowParametersShow(${2:\\$templateId}, ${2:\\$arWorkflowParameters}, ${4:\\$formName}, ${4:\\$bVarsFromForm}, ${6:\\$documentType = null})$0"},
		{"trigger": "CBPDocument::StartWorkflowParametersValidate", "contents": "${1:CBPDocument}::StartWorkflowParametersValidate(${2:\\$templateId}, ${2:\\$arWorkflowParameters}, ${4:\\$documentType}, ${4:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::TerminateWorkflow", "contents": "${1:CBPDocument}::TerminateWorkflow(${2:\\$workflowId}, ${2:\\$documentId}, ${4:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::UpdateWorkflowTemplate", "contents": "${1:CBPDocument}::UpdateWorkflowTemplate(${2:\\$id}, ${2:\\$documentType}, ${4:\\$arFields}, ${4:&\\$arErrors})$0"},
		{"trigger": "CBPDocument::_ReplaceTaskURL", "contents": "${1:CBPDocument}::_ReplaceTaskURL(${2:\\$str}, ${2:\\$documentType})$0"},
		{"trigger": "CBPDocumentEventType::Out", "contents": "${1:CBPDocumentEventType}::Out(${2:\\$v})$0"},
		{"trigger": "CBPDocumentService::AddDocumentField", "contents": "${1:CBPDocumentService}::AddDocumentField(${2:\\$parameterDocumentType}, ${2:\\$arFields})$0"},
		{"trigger": "CBPDocumentService::CreateDocument", "contents": "${1:CBPDocumentService}::CreateDocument(${2:\\$parameterDocumentId}, ${2:\\$arFields})$0"},
		{"trigger": "CBPDocumentService::DeleteDocument", "contents": "${1:CBPDocumentService}::DeleteDocument(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocumentService::GetAllowableOperations", "contents": "${1:CBPDocumentService}::GetAllowableOperations(${2:\\$parameterDocumentType})$0"},
		{"trigger": "CBPDocumentService::GetAllowableUserGroups", "contents": "${1:CBPDocumentService}::GetAllowableUserGroups(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocumentService::GetDocument", "contents": "${1:CBPDocumentService}::GetDocument(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocumentService::GetDocumentAdminPage", "contents": "${1:CBPDocumentService}::GetDocumentAdminPage(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocumentService::GetDocumentFieldTypes", "contents": "${1:CBPDocumentService}::GetDocumentFieldTypes(${2:\\$parameterDocumentType})$0"},
		{"trigger": "CBPDocumentService::GetDocumentFields", "contents": "${1:CBPDocumentService}::GetDocumentFields(${2:\\$parameterDocumentType})$0"},
		{"trigger": "CBPDocumentService::GetDocumentForHistory", "contents": "${1:CBPDocumentService}::GetDocumentForHistory(${2:\\$parameterDocumentId}, ${2:\\$historyIndex})$0"},
		{"trigger": "CBPDocumentService::GetDocumentType", "contents": "${1:CBPDocumentService}::GetDocumentType(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocumentService::GetFieldInputControl", "contents": "${1:CBPDocumentService}::GetFieldInputControl(${2:\\$parameterDocumentType}, ${2:\\$fieldType}, ${4:\\$fieldName}, ${4:\\$fieldValue}, ${6:\\$bAllowSelection = false}, ${6:\\$publicMode = false})$0"},
		{"trigger": "CBPDocumentService::GetFieldInputControlOptions", "contents": "${1:CBPDocumentService}::GetFieldInputControlOptions(${2:\\$parameterDocumentType}, ${2:&\\$fieldType}, ${4:\\$jsFunctionName}, ${4:&\\$value})$0"},
		{"trigger": "CBPDocumentService::GetFieldInputValue", "contents": "${1:CBPDocumentService}::GetFieldInputValue(${2:\\$parameterDocumentType}, ${2:\\$fieldType}, ${4:\\$fieldName}, ${4:\\$arRequest}, ${6:&\\$arErrors})$0"},
		{"trigger": "CBPDocumentService::GetFieldInputValuePrintable", "contents": "${1:CBPDocumentService}::GetFieldInputValuePrintable(${2:\\$parameterDocumentType}, ${2:\\$fieldType}, ${4:\\$fieldValue})$0"},
		{"trigger": "CBPDocumentService::GetFieldValuePrintable", "contents": "${1:CBPDocumentService}::GetFieldValuePrintable(${2:\\$parameterDocumentId}, ${2:\\$fieldName}, ${4:\\$fieldType}, ${4:\\$fieldValue}, ${6:\\$arFieldType = null})$0"},
		{"trigger": "CBPDocumentService::GetGUIFieldEdit", "contents": "${1:CBPDocumentService}::GetGUIFieldEdit(${2:\\$parameterDocumentType}, ${2:\\$formName}, ${4:\\$fieldName}, ${4:\\$fieldValue}, ${6:\\$arDocumentField = array()}, ${6:\\$bAllowSelection = false})$0"},
		{"trigger": "CBPDocumentService::GetJSFunctionsForFields", "contents": "${1:CBPDocumentService}::GetJSFunctionsForFields(${2:\\$parameterDocumentType}, ${2:\\$objectName}, ${4:\\$arDocumentFields = array()}, ${4:\\$arDocumentFieldTypes = array()})$0"},
		{"trigger": "CBPDocumentService::GetUsersFromUserGroup", "contents": "${1:CBPDocumentService}::GetUsersFromUserGroup(${2:\\$group}, ${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocumentService::IsDocumentLocked", "contents": "${1:CBPDocumentService}::IsDocumentLocked(${2:\\$parameterDocumentId}, ${2:\\$workflowId})$0"},
		{"trigger": "CBPDocumentService::LockDocument", "contents": "${1:CBPDocumentService}::LockDocument(${2:\\$parameterDocumentId}, ${2:\\$workflowId})$0"},
		{"trigger": "CBPDocumentService::OnUnlockDocument", "contents": "${1:CBPDocumentService}::OnUnlockDocument(${2:\\$workflowId}, ${2:\\$eventName}, ${4:\\$documentId = array()})$0"},
		{"trigger": "CBPDocumentService::PublishDocument", "contents": "${1:CBPDocumentService}::PublishDocument(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocumentService::RecoverDocumentFromHistory", "contents": "${1:CBPDocumentService}::RecoverDocumentFromHistory(${2:\\$parameterDocumentId}, ${2:\\$arDocument})$0"},
		{"trigger": "CBPDocumentService::SetGUIFieldEdit", "contents": "${1:CBPDocumentService}::SetGUIFieldEdit(${2:\\$parameterDocumentType}, ${2:\\$fieldName}, ${4:\\$arRequest}, ${4:&\\$arErrors}, ${6:\\$arDocumentField = array()})$0"},
		{"trigger": "CBPDocumentService::SetPermissions", "contents": "${1:CBPDocumentService}::SetPermissions(${2:\\$parameterDocumentId}, ${2:\\$workflowId}, ${4:\\$arPermissions}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "CBPDocumentService::SubscribeOnUnlockDocument", "contents": "${1:CBPDocumentService}::SubscribeOnUnlockDocument(${2:\\$parameterDocumentId}, ${2:\\$workflowId}, ${4: \\$eventName})$0"},
		{"trigger": "CBPDocumentService::UnlockDocument", "contents": "${1:CBPDocumentService}::UnlockDocument(${2:\\$parameterDocumentId}, ${2:\\$workflowId})$0"},
		{"trigger": "CBPDocumentService::UnpublishDocument", "contents": "${1:CBPDocumentService}::UnpublishDocument(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPDocumentService::UnsubscribeOnUnlockDocument", "contents": "${1:CBPDocumentService}::UnsubscribeOnUnlockDocument(${2:\\$parameterDocumentId}, ${2:\\$workflowId}, ${4:\\$eventName})$0"},
		{"trigger": "CBPDocumentService::UpdateDocument", "contents": "${1:CBPDocumentService}::UpdateDocument(${2:\\$parameterDocumentId}, ${2:\\$arFields})$0"},
		{"trigger": "CBPHelper::ConvertParameterValues", "contents": "${1:CBPHelper}::ConvertParameterValues(${2:\\$val})$0"},
		{"trigger": "CBPHelper::ConvertTextForMail", "contents": "${1:CBPHelper}::ConvertTextForMail(${2:\\$text}, ${2:\\$siteId = false})$0"},
		{"trigger": "CBPHelper::ConvertUserToPrintableForm", "contents": "${1:CBPHelper}::ConvertUserToPrintableForm(${2:\\$userId})$0"},
		{"trigger": "CBPHelper::ExtractUsers", "contents": "${1:CBPHelper}::ExtractUsers(${2:\\$arUsersDraft}, ${2:\\$documentId}, ${4:\\$bFirst = false})$0"},
		{"trigger": "CBPHelper::ExtractUsersFromUserGroups", "contents": "${1:CBPHelper}::ExtractUsersFromUserGroups(${2:\\$value}, ${2:\\$activity})$0"},
		{"trigger": "CBPHelper::FormatTimePeriod", "contents": "${1:CBPHelper}::FormatTimePeriod(${2:\\$period})$0"},
		{"trigger": "CBPHelper::GetDocumentFieldTypes", "contents": "${1:CBPHelper}::GetDocumentFieldTypes()$0"},
		{"trigger": "CBPHelper::GetFieldInputControl", "contents": "${1:CBPHelper}::GetFieldInputControl(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$arFieldName}, ${4:\\$fieldValue}, ${6:\\$bAllowSelection = false})$0"},
		{"trigger": "CBPHelper::GetFieldInputValue", "contents": "${1:CBPHelper}::GetFieldInputValue(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$arFieldName}, ${4:\\$arRequest}, ${6:&\\$arErrors})$0"},
		{"trigger": "CBPHelper::GetFieldInputValuePrintable", "contents": "${1:CBPHelper}::GetFieldInputValuePrintable(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$fieldValue})$0"},
		{"trigger": "CBPHelper::GetFieldValuePrintable", "contents": "${1:CBPHelper}::GetFieldValuePrintable(${2:\\$fieldName}, ${2:\\$fieldType}, ${4:\\$result})$0"},
		{"trigger": "CBPHelper::GetFilterOperation", "contents": "${1:CBPHelper}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CBPHelper::GetGUIFieldEdit", "contents": "${1:CBPHelper}::GetGUIFieldEdit(${2:\\$documentType}, ${2:\\$formName}, ${4:\\$fieldName}, ${4:\\$fieldValue}, ${6:\\$arDocumentField}, ${6:\\$bAllowSelection})$0"},
		{"trigger": "CBPHelper::GetJSFunctionsForFields", "contents": "${1:CBPHelper}::GetJSFunctionsForFields(${2:\\$objectName}, ${2:\\$arDocumentFields}, ${4:\\$arDocumentFieldTypes})$0"},
		{"trigger": "CBPHelper::IsAssociativearray", "contents": "${1:CBPHelper}::IsAssociativearray(${2:\\$ar})$0"},
		{"trigger": "CBPHelper::MakearrayFlat", "contents": "${1:CBPHelper}::MakearrayFlat(${2:\\$ar})$0"},
		{"trigger": "CBPHelper::MakeWord", "contents": "${1:CBPHelper}::MakeWord(${2:\\$val}, ${2:\\$arWords})$0"},
		{"trigger": "CBPHelper::ParseDocumentId", "contents": "${1:CBPHelper}::ParseDocumentId(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPHelper::ParseDocumentIdarray", "contents": "${1:CBPHelper}::ParseDocumentIdarray(${2:\\$parameterDocumentId})$0"},
		{"trigger": "CBPHelper::PrepareSql", "contents": "${1:CBPHelper}::PrepareSql(${2:&\\$arFields}, ${2:\\$arOrder}, ${4:\\$arFilter}, ${4:\\$arGroupBy}, ${6:\\$arSelectFields})$0"},
		{"trigger": "CBPHelper::SearchUserByName", "contents": "${1:CBPHelper}::SearchUserByName(${2:\\$user})$0"},
		{"trigger": "CBPHelper::SetGUIFieldEdit", "contents": "${1:CBPHelper}::SetGUIFieldEdit(${2:\\$documentType}, ${2:\\$fieldName}, ${4:\\$arRequest}, ${4:&\\$arErrors}, ${6:\\$arDocumentField = null})$0"},
		{"trigger": "CBPHelper::UsersarrayToString", "contents": "${1:CBPHelper}::UsersarrayToString(${2:\\$arUsers}, ${2:\\$arWorkflowTemplate}, ${4:\\$documentType})$0"},
		{"trigger": "CBPHelper::UsersarrayToStringInternal", "contents": "${1:CBPHelper}::UsersarrayToStringInternal(${2:\\$arUsers}, ${2:\\$arWorkflowTemplate}, ${4:\\$arAllowableUserGroups})$0"},
		{"trigger": "CBPHelper::UsersStringToarray", "contents": "${1:CBPHelper}::UsersStringToarray(${2:\\$strUsers}, ${2:\\$documentType}, ${4:&\\$arErrors}, ${4:\\$callbackFunction = null})$0"},
		{"trigger": "CBPHelper::__ConvertAnchorTag", "contents": "${1:CBPHelper}::__ConvertAnchorTag(${2:\\$url}, ${2:\\$text}, ${4:\\$serverName})$0"},
		{"trigger": "CBPHistoryResult::Fetch", "contents": "${1:CBPHistoryResult}::Fetch()$0"},
		{"trigger": "CBPHistoryResult::GetFromSerializedForm", "contents": "${1:CBPHistoryResult}::GetFromSerializedForm(${2:\\$value})$0"},
		{"trigger": "CBPHistoryResult::__construct", "contents": "${1:CBPHistoryResult}::__construct(${2:\\$res}, ${2:\\$useGZipCompression})$0"},
		{"trigger": "CBPHistoryService::AddHistory", "contents": "${1:CBPHistoryService}::AddHistory(${2:\\$arFields})$0"},
		{"trigger": "CBPHistoryService::GetHistoryList", "contents": "${1:CBPHistoryService}::GetHistoryList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBPHistoryService::UpdateHistory", "contents": "${1:CBPHistoryService}::UpdateHistory(${2:\\$id}, ${2:\\$arFields})$0"},
		{"trigger": "CBPHistoryService::__construct", "contents": "${1:CBPHistoryService}::__construct()$0"},
		{"trigger": "CBPInvalidOperationException::__construct", "contents": "${1:CBPInvalidOperationException}::__construct(${2:\\$message = ''})$0"},
		{"trigger": "CBPNotSupportedException::__construct", "contents": "${1:CBPNotSupportedException}::__construct(${2:\\$message = ''})$0"},
		{"trigger": "CBPRuntime::AddService", "contents": "${1:CBPRuntime}::AddService(${2:\\$name}, ${2:CBPRuntimeService \\$service})$0"},
		{"trigger": "CBPRuntime::CreateWorkflow", "contents": "${1:CBPRuntime}::CreateWorkflow(${2:\\$workflowTemplateId}, ${2:\\$documentId}, ${4:\\$workflowParameters = array()})$0"},
		{"trigger": "CBPRuntime::ExecuteResourceFile", "contents": "${1:CBPRuntime}::ExecuteResourceFile(${2:\\$activityPath}, ${2:\\$filePath}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CBPRuntime::GetActivityDescription", "contents": "${1:CBPRuntime}::GetActivityDescription(${2:\\$code})$0"},
		{"trigger": "CBPRuntime::GetResourceFilePath", "contents": "${1:CBPRuntime}::GetResourceFilePath(${2:\\$activityPath}, ${2:\\$filePath})$0"},
		{"trigger": "CBPRuntime::GetRuntime", "contents": "${1:CBPRuntime}::GetRuntime()$0"},
		{"trigger": "CBPRuntime::GetService", "contents": "${1:CBPRuntime}::GetService(${2:\\$name})$0"},
		{"trigger": "CBPRuntime::GetWorkflow", "contents": "${1:CBPRuntime}::GetWorkflow(${2:\\$workflowId})$0"},
		{"trigger": "CBPRuntime::IncludeActivityFile", "contents": "${1:CBPRuntime}::IncludeActivityFile(${2:\\$code})$0"},
		{"trigger": "CBPRuntime::LoadActivityLocalization", "contents": "${1:CBPRuntime}::LoadActivityLocalization(${2:\\$path}, ${2:\\$file}, ${4:\\$lang = false})$0"},
		{"trigger": "CBPRuntime::SearchActivitiesByType", "contents": "${1:CBPRuntime}::SearchActivitiesByType(${2:\\$type})$0"},
		{"trigger": "CBPRuntime::SendExternalEvent", "contents": "${1:CBPRuntime}::SendExternalEvent(${2:\\$workflowId}, ${2:\\$eventName}, ${4:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPRuntime::StartRuntime", "contents": "${1:CBPRuntime}::StartRuntime()$0"},
		{"trigger": "CBPRuntime::StopRuntime", "contents": "${1:CBPRuntime}::StopRuntime()$0"},
		{"trigger": "CBPRuntime::__clone", "contents": "${1:CBPRuntime}::__clone()$0"},
		{"trigger": "CBPRuntime::__construct", "contents": "${1:CBPRuntime}::__construct()$0"},
		{"trigger": "CBPRuntimeService::SetRuntime", "contents": "${1:CBPRuntimeService}::SetRuntime(${2:CBPRuntime \\$runtime})$0"},
		{"trigger": "CBPRuntimeService::Start", "contents": "${1:CBPRuntimeService}::Start(${2:CBPRuntime \\$runtime = null})$0"},
		{"trigger": "CBPRuntimeService::Stop", "contents": "${1:CBPRuntimeService}::Stop()$0"},
		{"trigger": "CBPSchedulerService::OnAgent", "contents": "${1:CBPSchedulerService}::OnAgent(${2:\\$workflowId}, ${2:\\$eventName}, ${4:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPSchedulerService::OnEvent", "contents": "${1:CBPSchedulerService}::OnEvent(${2:\\$workflowId}, ${2:\\$eventName}, ${4:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPSchedulerService::SubscribeOnEvent", "contents": "${1:CBPSchedulerService}::SubscribeOnEvent(${2:\\$workflowId}, ${2:\\$eventHandlerName}, ${4:\\$eventModule}, ${4:\\$eventName}, ${6:\\$entityId = null})$0"},
		{"trigger": "CBPSchedulerService::SubscribeOnTime", "contents": "${1:CBPSchedulerService}::SubscribeOnTime(${2:\\$workflowId}, ${2:\\$eventName}, ${4:\\$expiresAt})$0"},
		{"trigger": "CBPSchedulerService::UnSubscribeOnEvent", "contents": "${1:CBPSchedulerService}::UnSubscribeOnEvent(${2:\\$workflowId}, ${2:\\$eventHandlerName}, ${4:\\$eventModule}, ${4:\\$eventName}, ${6:\\$entityId = null})$0"},
		{"trigger": "CBPSchedulerService::UnSubscribeOnTime", "contents": "${1:CBPSchedulerService}::UnSubscribeOnTime(${2:\\$id})$0"},
		{"trigger": "CBPStateService::AddStateParameter", "contents": "${1:CBPStateService}::AddStateParameter(${2:\\$workflowId}, ${2:\\$arStateParameter})$0"},
		{"trigger": "CBPStateService::DeleteStateParameter", "contents": "${1:CBPStateService}::DeleteStateParameter(${2:\\$workflowId}, ${2:\\$name})$0"},
		{"trigger": "CBPStateService::SetState", "contents": "${1:CBPStateService}::SetState(${2:\\$workflowId}, ${2:\\$arState}, ${4:\\$arStatePermissions = array()})$0"},
		{"trigger": "CBPStateService::SetStateParameters", "contents": "${1:CBPStateService}::SetStateParameters(${2:\\$workflowId}, ${2:\\$arStateParameters = array()})$0"},
		{"trigger": "CBPStateService::__InsertStateHack", "contents": "${1:CBPStateService}::__InsertStateHack(${2:\\$id}, ${2:\\$moduleId}, ${4:\\$entity}, ${4:\\$documentId}, ${6:\\$templateId}, ${6:\\$state}, ${8:\\$stateTitle}, ${8:\\$stateParameters}, ${10:\\$arStatePermissions})$0"},
		{"trigger": "CBPTaskResult::ConvertBBCode", "contents": "${1:CBPTaskResult}::ConvertBBCode(${2:\\$text})$0"},
		{"trigger": "CBPTaskResult::ConvertBCodeAnchorTag", "contents": "${1:CBPTaskResult}::ConvertBCodeAnchorTag(${2:\\$url}, ${2:\\$text})$0"},
		{"trigger": "CBPTaskResult::ConvertBCodeImageTag", "contents": "${1:CBPTaskResult}::ConvertBCodeImageTag(${2:\\$url = ''})$0"},
		{"trigger": "CBPTaskResult::Fetch", "contents": "${1:CBPTaskResult}::Fetch()$0"},
		{"trigger": "CBPTaskResult::GetNext", "contents": "${1:CBPTaskResult}::GetNext()$0"},
		{"trigger": "CBPTaskResult::__construct", "contents": "${1:CBPTaskResult}::__construct(${2:\\$res})$0"},
		{"trigger": "CBPTaskService::Add", "contents": "${1:CBPTaskService}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBPTaskService::CreateTask", "contents": "${1:CBPTaskService}::CreateTask(${2:\\$arFields})$0"},
		{"trigger": "CBPTaskService::GetList", "contents": "${1:CBPTaskService}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBPTaskService::Update", "contents": "${1:CBPTaskService}::Update(${2:\\$id}, ${2:\\$arFields})$0"},
		{"trigger": "CBPTrackingService::ClearOld", "contents": "${1:CBPTrackingService}::ClearOld(${2:\\$days = 0})$0"},
		{"trigger": "CBPTrackingService::GetList", "contents": "${1:CBPTrackingService}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBPTrackingService::Write", "contents": "${1:CBPTrackingService}::Write(${2:\\$workflowId}, ${2:\\$type}, ${4:\\$actionName}, ${4:\\$executionStatus}, ${6:\\$executionResult}, ${6:\\$actionTitle = ''}, ${8:\\$actionNote = ''}, ${8:\\$modifiedBy = 0})$0"},
		{"trigger": "CBPVirtualDocument::AddDocumentField", "contents": "${1:CBPVirtualDocument}::AddDocumentField(${2:\\$documentType}, ${2:\\$arFields})$0"},
		{"trigger": "CBPVirtualDocument::CanUserOperateDocument", "contents": "${1:CBPVirtualDocument}::CanUserOperateDocument(${2:\\$operation}, ${2:\\$userId}, ${4:\\$documentId}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CBPVirtualDocument::CanUserOperateDocumentType", "contents": "${1:CBPVirtualDocument}::CanUserOperateDocumentType(${2:\\$operation}, ${2:\\$userId}, ${4:\\$documentType}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CBPVirtualDocument::CreateDocument", "contents": "${1:CBPVirtualDocument}::CreateDocument(${2:\\$parentDocumentId}, ${2:\\$arFields})$0"},
		{"trigger": "CBPVirtualDocument::GetAllowableOperations", "contents": "${1:CBPVirtualDocument}::GetAllowableOperations(${2:\\$documentType})$0"},
		{"trigger": "CBPVirtualDocument::GetAllowableUserGroups", "contents": "${1:CBPVirtualDocument}::GetAllowableUserGroups(${2:\\$documentType})$0"},
		{"trigger": "CBPVirtualDocument::GetDocument", "contents": "${1:CBPVirtualDocument}::GetDocument(${2:\\$documentId})$0"},
		{"trigger": "CBPVirtualDocument::GetDocumentAdminPage", "contents": "${1:CBPVirtualDocument}::GetDocumentAdminPage(${2:\\$documentId})$0"},
		{"trigger": "CBPVirtualDocument::GetDocumentFieldTypes", "contents": "${1:CBPVirtualDocument}::GetDocumentFieldTypes(${2:\\$documentType})$0"},
		{"trigger": "CBPVirtualDocument::GetDocumentFields", "contents": "${1:CBPVirtualDocument}::GetDocumentFields(${2:\\$documentType})$0"},
		{"trigger": "CBPVirtualDocument::GetDocumentType", "contents": "${1:CBPVirtualDocument}::GetDocumentType(${2:\\$documentId})$0"},
		{"trigger": "CBPVirtualDocument::GetFieldInputControl", "contents": "${1:CBPVirtualDocument}::GetFieldInputControl(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$arFieldName}, ${4:\\$fieldValue}, ${6:\\$bAllowSelection = false}, ${6:\\$publicMode = false})$0"},
		{"trigger": "CBPVirtualDocument::GetFieldInputControlOptions", "contents": "${1:CBPVirtualDocument}::GetFieldInputControlOptions(${2:\\$documentType}, ${2:&\\$arFieldType}, ${4:\\$jsFunctionName}, ${4:&\\$value})$0"},
		{"trigger": "CBPVirtualDocument::GetFieldInputValue", "contents": "${1:CBPVirtualDocument}::GetFieldInputValue(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$arFieldName}, ${4:\\$arRequest}, ${6:&\\$arErrors})$0"},
		{"trigger": "CBPVirtualDocument::GetFieldInputValuePrintable", "contents": "${1:CBPVirtualDocument}::GetFieldInputValuePrintable(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$fieldValue})$0"},
		{"trigger": "CBPVirtualDocument::GetFieldValuePrintable", "contents": "${1:CBPVirtualDocument}::GetFieldValuePrintable(${2:\\$documentId}, ${2:\\$fieldName}, ${4:\\$fieldType}, ${4:\\$fieldValue}, ${6:\\$arFieldType})$0"},
		{"trigger": "CBPVirtualDocument::GetGUIFieldEdit", "contents": "${1:CBPVirtualDocument}::GetGUIFieldEdit(${2:\\$documentType}, ${2:\\$formName}, ${4:\\$fieldName}, ${4:\\$fieldValue}, ${6:\\$arDocumentField = null}, ${6:\\$bAllowSelection = false})$0"},
		{"trigger": "CBPVirtualDocument::GetJSFunctionsForFields", "contents": "${1:CBPVirtualDocument}::GetJSFunctionsForFields(${2:\\$documentType}, ${2:\\$objectName}, ${4:\\$arDocumentFields = array()}, ${4:\\$arDocumentFieldTypes = array()})$0"},
		{"trigger": "CBPVirtualDocument::GetList", "contents": "${1:CBPVirtualDocument}::GetList(${2:\\$arOrder = array('SORT' => 'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields=array()})$0"},
		{"trigger": "CBPVirtualDocument::GetUsersFromUserGroup", "contents": "${1:CBPVirtualDocument}::GetUsersFromUserGroup(${2:\\$group}, ${2:\\$documentId})$0"},
		{"trigger": "CBPVirtualDocument::OnAfterIBlockElementDelete", "contents": "${1:CBPVirtualDocument}::OnAfterIBlockElementDelete(${2:\\$arFields})$0"},
		{"trigger": "CBPVirtualDocument::PrepareSectionForPrint", "contents": "${1:CBPVirtualDocument}::PrepareSectionForPrint(${2:\\$value}, ${2:\\$iblockId = 0})$0"},
		{"trigger": "CBPVirtualDocument::PrepareUserForPrint", "contents": "${1:CBPVirtualDocument}::PrepareUserForPrint(${2:\\$value})$0"},
		{"trigger": "CBPVirtualDocument::SetGUIFieldEdit", "contents": "${1:CBPVirtualDocument}::SetGUIFieldEdit(${2:\\$documentType}, ${2:\\$fieldName}, ${4:\\$arRequest}, ${4:&\\$arErrors}, ${6:\\$arDocumentField = null})$0"},
		{"trigger": "CBPVirtualDocument::SetPermissions", "contents": "${1:CBPVirtualDocument}::SetPermissions(${2:\\$documentId}, ${2:\\$workflowId}, ${4:\\$arPermissions}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "CBPVirtualDocument::UpdateDocument", "contents": "${1:CBPVirtualDocument}::UpdateDocument(${2:\\$documentId}, ${2:\\$arFields})$0"},
		{"trigger": "CBPWorkflow::AddEventHandler", "contents": "${1:CBPWorkflow}::AddEventHandler(${2:\\$eventName}, ${2:IBPActivityExternalEventListener \\$eventHandler})$0"},
		{"trigger": "CBPWorkflow::AddEventToQueue", "contents": "${1:CBPWorkflow}::AddEventToQueue(${2:\\$eventName}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPWorkflow::AddItemToQueue", "contents": "${1:CBPWorkflow}::AddItemToQueue(${2:\\$item})$0"},
		{"trigger": "CBPWorkflow::CancelActivity", "contents": "${1:CBPWorkflow}::CancelActivity(${2:CBPActivity \\$activity}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPWorkflow::CloseActivity", "contents": "${1:CBPWorkflow}::CloseActivity(${2:CBPActivity \\$activity}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPWorkflow::ExecuteActivity", "contents": "${1:CBPWorkflow}::ExecuteActivity(${2:CBPActivity \\$activity}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPWorkflow::FaultActivity", "contents": "${1:CBPWorkflow}::FaultActivity(${2:CBPActivity \\$activity}, ${2:Exception \\$e}, ${4:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPWorkflow::FillNameActivityMap", "contents": "${1:CBPWorkflow}::FillNameActivityMap()$0"},
		{"trigger": "CBPWorkflow::FillNameActivityMapInternal", "contents": "${1:CBPWorkflow}::FillNameActivityMapInternal(${2:CBPActivity \\$activity})$0"},
		{"trigger": "CBPWorkflow::GetActivityByName", "contents": "${1:CBPWorkflow}::GetActivityByName(${2:\\$activityName})$0"},
		{"trigger": "CBPWorkflow::GetAvailableStateEvents", "contents": "${1:CBPWorkflow}::GetAvailableStateEvents()$0"},
		{"trigger": "CBPWorkflow::GetDocumentId", "contents": "${1:CBPWorkflow}::GetDocumentId()$0"},
		{"trigger": "CBPWorkflow::GetExecutionResult", "contents": "${1:CBPWorkflow}::GetExecutionResult()$0"},
		{"trigger": "CBPWorkflow::GetExecutionStatus", "contents": "${1:CBPWorkflow}::GetExecutionStatus()$0"},
		{"trigger": "CBPWorkflow::GetInstanceId", "contents": "${1:CBPWorkflow}::GetInstanceId()$0"},
		{"trigger": "CBPWorkflow::GetRuntime", "contents": "${1:CBPWorkflow}::GetRuntime()$0"},
		{"trigger": "CBPWorkflow::GetService", "contents": "${1:CBPWorkflow}::GetService(${2:\\$name})$0"},
		{"trigger": "CBPWorkflow::GetWorkflowStatus", "contents": "${1:CBPWorkflow}::GetWorkflowStatus()$0"},
		{"trigger": "CBPWorkflow::Initialize", "contents": "${1:CBPWorkflow}::Initialize(${2:CBPActivity \\$rootActivity}, ${2:\\$documentId}, ${4:\\$workflowParameters = array()}, ${4:\\$workflowVariablesTypes = array()}, ${6:\\$workflowParametersTypes = array()})$0"},
		{"trigger": "CBPWorkflow::InitializeActivity", "contents": "${1:CBPWorkflow}::InitializeActivity(${2:CBPActivity \\$activity})$0"},
		{"trigger": "CBPWorkflow::OnRuntimeStopped", "contents": "${1:CBPWorkflow}::OnRuntimeStopped()$0"},
		{"trigger": "CBPWorkflow::ProcessQueuedEvent", "contents": "${1:CBPWorkflow}::ProcessQueuedEvent(${2:\\$eventName}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPWorkflow::ProcessQueuedEvents", "contents": "${1:CBPWorkflow}::ProcessQueuedEvents()$0"},
		{"trigger": "CBPWorkflow::Reload", "contents": "${1:CBPWorkflow}::Reload(${2:CBPActivity \\$rootActivity})$0"},
		{"trigger": "CBPWorkflow::RemoveEventHandler", "contents": "${1:CBPWorkflow}::RemoveEventHandler(${2:\\$eventName}, ${2:IBPActivityExternalEventListener \\$eventHandler})$0"},
		{"trigger": "CBPWorkflow::Resume", "contents": "${1:CBPWorkflow}::Resume()$0"},
		{"trigger": "CBPWorkflow::RunQueue", "contents": "${1:CBPWorkflow}::RunQueue()$0"},
		{"trigger": "CBPWorkflow::RunQueuedItem", "contents": "${1:CBPWorkflow}::RunQueuedItem(${2:CBPActivity \\$activity}, ${2:\\$activityOperation}, ${4:Exception \\$exception = null})$0"},
		{"trigger": "CBPWorkflow::SendExternalEvent", "contents": "${1:CBPWorkflow}::SendExternalEvent(${2:\\$eventName}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "CBPWorkflow::SetWorkflowStatus", "contents": "${1:CBPWorkflow}::SetWorkflowStatus(${2:\\$newStatus})$0"},
		{"trigger": "CBPWorkflow::Start", "contents": "${1:CBPWorkflow}::Start()$0"},
		{"trigger": "CBPWorkflow::Terminate", "contents": "${1:CBPWorkflow}::Terminate(${2:Exception \\$e = null})$0"},
		{"trigger": "CBPWorkflow::__construct", "contents": "${1:CBPWorkflow}::__construct(${2:\\$instanceId}, ${2:CBPRuntime \\$runtime})$0"},
		{"trigger": "CBPWorkflowPersister::GetPersister", "contents": "${1:CBPWorkflowPersister}::GetPersister()$0"},
		{"trigger": "CBPWorkflowPersister::InsertWorkflow", "contents": "${1:CBPWorkflowPersister}::InsertWorkflow(${2:\\$id}, ${2:\\$buffer}, ${4:\\$status}, ${4:\\$bUnlocked})$0"},
		{"trigger": "CBPWorkflowPersister::RetrieveWorkflow", "contents": "${1:CBPWorkflowPersister}::RetrieveWorkflow(${2:\\$instanceId})$0"},
		{"trigger": "CBPWorkflowPersister::__construct", "contents": "${1:CBPWorkflowPersister}::__construct()$0"},
		{"trigger": "CBPWorkflowStatus::Out", "contents": "${1:CBPWorkflowStatus}::Out(${2:\\$v})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::Add", "contents": "${1:CBPWorkflowTemplateLoader}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::AddTemplate", "contents": "${1:CBPWorkflowTemplateLoader}::AddTemplate(${2:\\$arFields})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::CheckWorkflowParameters", "contents": "${1:CBPWorkflowTemplateLoader}::CheckWorkflowParameters(${2:\\$arTemplateParameters}, ${2:\\$arPossibleValues}, ${4:\\$documentType}, ${4:&\\$arErrors})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ConvertarrayCharset", "contents": "${1:CBPWorkflowTemplateLoader}::ConvertarrayCharset(${2:\\$value}, ${2:\\$direction = BP_EI_DIRECTION_EXPORT})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ConvertValueCharset", "contents": "${1:CBPWorkflowTemplateLoader}::ConvertValueCharset(${2:\\$s}, ${2:\\$direction})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::CreateActivity", "contents": "${1:CBPWorkflowTemplateLoader}::CreateActivity(${2:\\$activityCode}, ${2:\\$activityName})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::Delete", "contents": "${1:CBPWorkflowTemplateLoader}::Delete(${2:\\$id})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::DeleteTemplate", "contents": "${1:CBPWorkflowTemplateLoader}::DeleteTemplate(${2:\\$id})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ExportTemplate", "contents": "${1:CBPWorkflowTemplateLoader}::ExportTemplate(${2:\\$id}, ${2:\\$bCompress = true})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ExtractValuesFromVariables", "contents": "${1:CBPWorkflowTemplateLoader}::ExtractValuesFromVariables(${2:\\$ar}, ${2:\\$arVars})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::FindSetStateActivities", "contents": "${1:CBPWorkflowTemplateLoader}::FindSetStateActivities(${2:\\$arWorkflowTemplate})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::GetDocumentTypeStates", "contents": "${1:CBPWorkflowTemplateLoader}::GetDocumentTypeStates(${2:\\$documentType}, ${2:\\$autoExecute = -1}, ${4:\\$stateName = ''})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::GetList", "contents": "${1:CBPWorkflowTemplateLoader}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::GetLoader", "contents": "${1:CBPWorkflowTemplateLoader}::GetLoader()$0"},
		{"trigger": "CBPWorkflowTemplateLoader::GetSerializedForm", "contents": "${1:CBPWorkflowTemplateLoader}::GetSerializedForm(${2:\\$arTemplate})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::GetStatesOfTemplate", "contents": "${1:CBPWorkflowTemplateLoader}::GetStatesOfTemplate(${2:\\$arWorkflowTemplate})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::GetTemplateState", "contents": "${1:CBPWorkflowTemplateLoader}::GetTemplateState(${2:\\$workflowTemplateId}, ${2:\\$stateName = ''})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::GetTemplatesList", "contents": "${1:CBPWorkflowTemplateLoader}::GetTemplatesList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::GetTransfersOfState", "contents": "${1:CBPWorkflowTemplateLoader}::GetTransfersOfState(${2:\\$arWorkflowTemplate}, ${2:\\$stateName})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ImportTemplate", "contents": "${1:CBPWorkflowTemplateLoader}::ImportTemplate(${2:\\$id}, ${2:\\$documentType}, ${4:\\$autoExecute}, ${4:\\$name}, ${6:\\$description}, ${6:\\$datum})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ImportTemplateChecker", "contents": "${1:CBPWorkflowTemplateLoader}::ImportTemplateChecker(${2:\\$arActivity}, ${2:\\$user})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::LoadWorkflow", "contents": "${1:CBPWorkflowTemplateLoader}::LoadWorkflow(${2:\\$workflowTemplateId})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ParceWorkflowTemplate", "contents": "${1:CBPWorkflowTemplateLoader}::ParceWorkflowTemplate(${2:\\$arWorkflowTemplate}, ${2:&\\$arActivityNames}, ${4:CBPActivity \\$parentActivity = null})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ParseDocumentTypeStates", "contents": "${1:CBPWorkflowTemplateLoader}::ParseDocumentTypeStates(${2:\\$arTemplatesListItem})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ParseFields", "contents": "${1:CBPWorkflowTemplateLoader}::ParseFields(${2:&\\$arFields}, ${2:\\$id = 0})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::SearchTemplatesByDocumentType", "contents": "${1:CBPWorkflowTemplateLoader}::SearchTemplatesByDocumentType(${2:\\$documentType}, ${2:\\$autoExecute = -1})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::Update", "contents": "${1:CBPWorkflowTemplateLoader}::Update(${2:\\$id}, ${2:\\$arFields})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::UpdateTemplate", "contents": "${1:CBPWorkflowTemplateLoader}::UpdateTemplate(${2:\\$id}, ${2:\\$arFields})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::ValidateTemplate", "contents": "${1:CBPWorkflowTemplateLoader}::ValidateTemplate(${2:\\$arActivity}, ${2:\\$user})$0"},
		{"trigger": "CBPWorkflowTemplateLoader::__clone", "contents": "${1:CBPWorkflowTemplateLoader}::__clone()$0"},
		{"trigger": "CBPWorkflowTemplateLoader::__construct", "contents": "${1:CBPWorkflowTemplateLoader}::__construct()$0"},
		{"trigger": "CBPWorkflowTemplateResult::Fetch", "contents": "${1:CBPWorkflowTemplateResult}::Fetch()$0"},
		{"trigger": "CBPWorkflowTemplateResult::GetFromSerializedForm", "contents": "${1:CBPWorkflowTemplateResult}::GetFromSerializedForm(${2:\\$value})$0"},
		{"trigger": "CBPWorkflowTemplateResult::__construct", "contents": "${1:CBPWorkflowTemplateResult}::__construct(${2:\\$res}, ${2:\\$useGZipCompression})$0"},
		{"trigger": "CBPWorkflowTemplateUser::IsAdmin", "contents": "${1:CBPWorkflowTemplateUser}::IsAdmin()$0"},
		{"trigger": "CBPWorkflowTemplateUser::__construct", "contents": "${1:CBPWorkflowTemplateUser}::__construct(${2:\\$userId = null})$0"},
		{"trigger": "IBPActivityEventListener::OnEvent", "contents": "${1:IBPActivityEventListener}::OnEvent(${2:CBPActivity \\$sender}, ${2:\\$arEventParameters = array()})$0"},
		{"trigger": "IBPActivityExternalEventListener::OnExternalEvent", "contents": "${1:IBPActivityExternalEventListener}::OnExternalEvent(${2:\\$arEventParameters = array()})$0"},
		{"trigger": "IBPEventActivity::Subscribe", "contents": "${1:IBPEventActivity}::Subscribe(${2:IBPActivityExternalEventListener \\$eventHandler})$0"},
		{"trigger": "IBPEventActivity::Unsubscribe", "contents": "${1:IBPEventActivity}::Unsubscribe(${2:IBPActivityExternalEventListener \\$eventHandler})$0"},
		{"trigger": "IBPRootActivity::GetDocumentId", "contents": "${1:IBPRootActivity}::GetDocumentId()$0"},
		{"trigger": "IBPRootActivity::GetVariable", "contents": "${1:IBPRootActivity}::GetVariable(${2:\\$name})$0"},
		{"trigger": "IBPRootActivity::GetWorkflowStatus", "contents": "${1:IBPRootActivity}::GetWorkflowStatus()$0"},
		{"trigger": "IBPRootActivity::IsVariableExists", "contents": "${1:IBPRootActivity}::IsVariableExists(${2:\\$name})$0"},
		{"trigger": "IBPRootActivity::SetCustomStatusMode", "contents": "${1:IBPRootActivity}::SetCustomStatusMode()$0"},
		{"trigger": "IBPRootActivity::SetDocumentId", "contents": "${1:IBPRootActivity}::SetDocumentId(${2:\\$documentId})$0"},
		{"trigger": "IBPRootActivity::SetProperties", "contents": "${1:IBPRootActivity}::SetProperties(${2:\\$arProperties = array()})$0"},
		{"trigger": "IBPRootActivity::SetVariable", "contents": "${1:IBPRootActivity}::SetVariable(${2:\\$name}, ${2:\\$value})$0"},
		{"trigger": "IBPRootActivity::SetVariables", "contents": "${1:IBPRootActivity}::SetVariables(${2:\\$arVariables = array()})$0"},
		{"trigger": "IBPRootActivity::SetWorkflowStatus", "contents": "${1:IBPRootActivity}::SetWorkflowStatus(${2:\\$status})$0"},
		{"trigger": "IBPWorkflowDocument::CanUserOperateDocument", "contents": "${1:IBPWorkflowDocument}::CanUserOperateDocument(${2:\\$operation}, ${2:\\$userId}, ${4:\\$documentId}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "IBPWorkflowDocument::CanUserOperateDocumentType", "contents": "${1:IBPWorkflowDocument}::CanUserOperateDocumentType(${2:\\$operation}, ${2:\\$userId}, ${4:\\$documentType}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "IBPWorkflowDocument::CreateDocument", "contents": "${1:IBPWorkflowDocument}::CreateDocument(${2:\\$parentDocumentId}, ${2:\\$arFields})$0"},
		{"trigger": "IBPWorkflowDocument::DeleteDocument", "contents": "${1:IBPWorkflowDocument}::DeleteDocument(${2:\\$documentId})$0"},
		{"trigger": "IBPWorkflowDocument::GetAllowableOperations", "contents": "${1:IBPWorkflowDocument}::GetAllowableOperations(${2:\\$documentType})$0"},
		{"trigger": "IBPWorkflowDocument::GetAllowableUserGroups", "contents": "${1:IBPWorkflowDocument}::GetAllowableUserGroups(${2:\\$documentType})$0"},
		{"trigger": "IBPWorkflowDocument::GetDocument", "contents": "${1:IBPWorkflowDocument}::GetDocument(${2:\\$documentId})$0"},
		{"trigger": "IBPWorkflowDocument::GetDocumentAdminPage", "contents": "${1:IBPWorkflowDocument}::GetDocumentAdminPage(${2:\\$documentId})$0"},
		{"trigger": "IBPWorkflowDocument::GetDocumentFields", "contents": "${1:IBPWorkflowDocument}::GetDocumentFields(${2:\\$documentType})$0"},
		{"trigger": "IBPWorkflowDocument::GetDocumentForHistory", "contents": "${1:IBPWorkflowDocument}::GetDocumentForHistory(${2:\\$documentId}, ${2:\\$historyIndex})$0"},
		{"trigger": "IBPWorkflowDocument::GetUsersFromUserGroup", "contents": "${1:IBPWorkflowDocument}::GetUsersFromUserGroup(${2:\\$group}, ${2:\\$documentId})$0"},
		{"trigger": "IBPWorkflowDocument::IsDocumentLocked", "contents": "${1:IBPWorkflowDocument}::IsDocumentLocked(${2:\\$documentId}, ${2:\\$workflowId})$0"},
		{"trigger": "IBPWorkflowDocument::LockDocument", "contents": "${1:IBPWorkflowDocument}::LockDocument(${2:\\$documentId}, ${2:\\$workflowId})$0"},
		{"trigger": "IBPWorkflowDocument::PublishDocument", "contents": "${1:IBPWorkflowDocument}::PublishDocument(${2:\\$documentId})$0"},
		{"trigger": "IBPWorkflowDocument::RecoverDocumentFromHistory", "contents": "${1:IBPWorkflowDocument}::RecoverDocumentFromHistory(${2:\\$documentId}, ${2:\\$arDocument})$0"},
		{"trigger": "IBPWorkflowDocument::UnlockDocument", "contents": "${1:IBPWorkflowDocument}::UnlockDocument(${2:\\$documentId}, ${2:\\$workflowId})$0"},
		{"trigger": "IBPWorkflowDocument::UnpublishDocument", "contents": "${1:IBPWorkflowDocument}::UnpublishDocument(${2:\\$documentId})$0"},
		{"trigger": "IBPWorkflowDocument::UpdateDocument", "contents": "${1:IBPWorkflowDocument}::UpdateDocument(${2:\\$documentId}, ${2:\\$arFields})$0"},
		{"trigger": "CBlog::Add", "contents": "${1:CBlog}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlog::CanUserManageBlog", "contents": "${1:CBlog}::CanUserManageBlog(${2:\\$ID}, ${2:\\$userID = 0})$0"},
		{"trigger": "CBlog::CheckFields", "contents": "${1:CBlog}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlog::DeleteSocnetRead", "contents": "${1:CBlog}::DeleteSocnetRead(${2:\\$ID})$0"},
		{"trigger": "CBlog::GetByID", "contents": "${1:CBlog}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlog::GetByOwnerID", "contents": "${1:CBlog}::GetByOwnerID(${2:\\$ID}, ${2:\\$arGroup = array()})$0"},
		{"trigger": "CBlog::GetFilterOperation", "contents": "${1:CBlog}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CBlog::GetList", "contents": "${1:CBlog}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBlog::GetWritableSocnetBlogs", "contents": "${1:CBlog}::GetWritableSocnetBlogs(${2:\\$user_id = 0}, ${2:\\$type = 'U'}, ${4:\\$site_id = SITE_ID})$0"},
		{"trigger": "CBlog::IsFriend", "contents": "${1:CBlog}::IsFriend(${2:\\$ID}, ${2:\\$userID})$0"},
		{"trigger": "CBlog::PreparePath", "contents": "${1:CBlog}::PreparePath(${2:\\$blogUrl}, ${2:\\$siteID = False}, ${4:\\$is404 = True}, ${4:\\$userID = 0}, ${6:\\$groupID = 0})$0"},
		{"trigger": "CBlog::SetBlogPerms", "contents": "${1:CBlog}::SetBlogPerms(${2:\\$ID}, ${2:\\$arPerms = array()}, ${4:\\$permsType = BLOG_PERMS_POST})$0"},
		{"trigger": "CBlog::Update", "contents": "${1:CBlog}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CBlogCandidate::GetByID", "contents": "${1:CBlogCandidate}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogCategory::Add", "contents": "${1:CBlogCategory}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogCategory::CheckFields", "contents": "${1:CBlogCategory}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlogCategory::GetByID", "contents": "${1:CBlogCategory}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogComment::Add", "contents": "${1:CBlogComment}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogComment::BuildRSS", "contents": "${1:CBlogComment}::BuildRSS(${2:\\$postID}, ${2:\\$blogID}, ${4:\\$type = 'RSS2.0'}, ${4:\\$numPosts = 10}, ${6:\\$arPathTemplate = array()})$0"},
		{"trigger": "CBlogComment::Delete", "contents": "${1:CBlogComment}::Delete(${2:\\$ID})$0"},
		{"trigger": "CBlogComment::DeleteLog", "contents": "${1:CBlogComment}::DeleteLog(${2:\\$commentID})$0"},
		{"trigger": "CBlogComment::GetList", "contents": "${1:CBlogComment}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBlogComment::GetSocNetPostsPerms", "contents": "${1:CBlogComment}::GetSocNetPostsPerms(${2:\\$entity_type}, ${2:\\$entity_id})$0"},
		{"trigger": "CBlogComment::UpdateLog", "contents": "${1:CBlogComment}::UpdateLog(${2:\\$commentID}, ${2:\\$arBlogUser}, ${4:\\$arUser}, ${4:\\$arComment}, ${6:\\$arPost}, ${6:\\$arParams})$0"},
		{"trigger": "CBlogGroup::Add", "contents": "${1:CBlogGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogGroup::CheckFields", "contents": "${1:CBlogGroup}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlogGroup::GetByID", "contents": "${1:CBlogGroup}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogImage::Add", "contents": "${1:CBlogImage}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogImage::AddImageResizeHandler", "contents": "${1:CBlogImage}::AddImageResizeHandler(${2:\\$arParams})$0"},
		{"trigger": "CBlogImage::GetByID", "contents": "${1:CBlogImage}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogImage::ImageResizeHandler", "contents": "${1:CBlogImage}::ImageResizeHandler(${2:&\\$arCustomFile}, ${2:\\$arParams = null})$0"},
		{"trigger": "CBlogMetaWeblog::Authorize", "contents": "${1:CBlogMetaWeblog}::Authorize(${2:\\$user}, ${2:\\$password})$0"},
		{"trigger": "CBlogMetaWeblog::DeletePost", "contents": "${1:CBlogMetaWeblog}::DeletePost(${2:\\$params})$0"},
		{"trigger": "CBlogMetaWeblog::EditPost", "contents": "${1:CBlogMetaWeblog}::EditPost(${2:\\$params})$0"},
		{"trigger": "CBlogMetaWeblog::GetCategories", "contents": "${1:CBlogMetaWeblog}::GetCategories(${2:\\$params})$0"},
		{"trigger": "CBlogMetaWeblog::GetUsersBlogs", "contents": "${1:CBlogMetaWeblog}::GetUsersBlogs(${2:\\$params}, ${2:\\$arPath})$0"},
		{"trigger": "CBlogMetaWeblog::NewPost", "contents": "${1:CBlogMetaWeblog}::NewPost(${2:\\$params})$0"},
		{"trigger": "CBlogNotifySchema::OnGetNotifySchema", "contents": "${1:CBlogNotifySchema}::OnGetNotifySchema()$0"},
		{"trigger": "CBlogPost::Add", "contents": "${1:CBlogPost}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogPost::AddSocNetPerms", "contents": "${1:CBlogPost}::AddSocNetPerms(${2:\\$ID}, ${2:\\$perms = false}, ${4:\\$arPost = array()})$0"},
		{"trigger": "CBlogPost::CanUserEditPost", "contents": "${1:CBlogPost}::CanUserEditPost(${2:\\$ID}, ${2:\\$userID})$0"},
		{"trigger": "CBlogPost::ChangeSocNetPermission", "contents": "${1:CBlogPost}::ChangeSocNetPermission(${2:\\$entity_type}, ${2:\\$entity_id}, ${4:\\$operation})$0"},
		{"trigger": "CBlogPost::CounterInc", "contents": "${1:CBlogPost}::CounterInc(${2:\\$ID})$0"},
		{"trigger": "CBlogPost::Delete", "contents": "${1:CBlogPost}::Delete(${2:\\$ID})$0"},
		{"trigger": "CBlogPost::DeleteLog", "contents": "${1:CBlogPost}::DeleteLog(${2:\\$postID}, ${2:\\$bMicroblog = false})$0"},
		{"trigger": "CBlogPost::GetByID", "contents": "${1:CBlogPost}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogPost::GetID", "contents": "${1:CBlogPost}::GetID(${2:\\$code}, ${2:\\$blogID})$0"},
		{"trigger": "CBlogPost::GetPostID", "contents": "${1:CBlogPost}::GetPostID(${2:\\$postID}, ${2:\\$code}, ${4:\\$allowCode = false})$0"},
		{"trigger": "CBlogPost::GetSocNetGroups", "contents": "${1:CBlogPost}::GetSocNetGroups(${2:\\$entity_type}, ${2:\\$entity_id}, ${4:\\$operation = 'view_post'})$0"},
		{"trigger": "CBlogPost::GetSocNetPermsCode", "contents": "${1:CBlogPost}::GetSocNetPermsCode(${2:\\$ID})$0"},
		{"trigger": "CBlogPost::Notify", "contents": "${1:CBlogPost}::Notify(${2:\\$arPost}, ${2:\\$arBlog}, ${4:\\$arParams})$0"},
		{"trigger": "CBlogPost::NotifyIm", "contents": "${1:CBlogPost}::NotifyIm(${2:\\$arParams})$0"},
		{"trigger": "CBlogPost::PreparePath", "contents": "${1:CBlogPost}::PreparePath(${2:\\$blogUrl}, ${2:\\$postID = 0}, ${4:\\$siteID = False}, ${4:\\$is404 = True}, ${6:\\$userID = 0}, ${6:\\$groupID = 0})$0"},
		{"trigger": "CBlogPost::SetPostPerms", "contents": "${1:CBlogPost}::SetPostPerms(${2:\\$ID}, ${2:\\$arPerms = array()}, ${4:\\$permsType = BLOG_PERMS_POST})$0"},
		{"trigger": "CBlogPost::UpdateLog", "contents": "${1:CBlogPost}::UpdateLog(${2:\\$postID}, ${2:\\$arPost}, ${4:\\$arBlog}, ${4:\\$arParams})$0"},
		{"trigger": "CBlogPostCategory::CheckFields", "contents": "${1:CBlogPostCategory}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlogPostCategory::DeleteByPostID", "contents": "${1:CBlogPostCategory}::DeleteByPostID(${2:\\$ID})$0"},
		{"trigger": "CBlogPostCategory::GetList", "contents": "${1:CBlogPostCategory}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBlogSearch::OnSearchReindex", "contents": "${1:CBlogSearch}::OnSearchReindex(${2:\\$NS=array()}, ${2:\\$oCallback=NULL}, ${4:\\$callback_method=''})$0"},
		{"trigger": "CBlogSearch::SetSoNetFeaturePermIndexSearch", "contents": "${1:CBlogSearch}::SetSoNetFeaturePermIndexSearch(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CBlogSitePath::Add", "contents": "${1:CBlogSitePath}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogSitePath::CheckFields", "contents": "${1:CBlogSitePath}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlogSitePath::DeleteBySiteID", "contents": "${1:CBlogSitePath}::DeleteBySiteID(${2:\\$siteID})$0"},
		{"trigger": "CBlogSitePath::GetBySiteID", "contents": "${1:CBlogSitePath}::GetBySiteID(${2:\\$siteID})$0"},
		{"trigger": "CBlogSmile::Add", "contents": "${1:CBlogSmile}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogSmile::CheckFields", "contents": "${1:CBlogSmile}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CBlogSmile::GetByID", "contents": "${1:CBlogSmile}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogSmile::Update", "contents": "${1:CBlogSmile}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CBlogTools::DeleteDoubleBR", "contents": "${1:CBlogTools}::DeleteDoubleBR(${2:\\$text})$0"},
		{"trigger": "CBlogTools::GetDateTimeFormat", "contents": "${1:CBlogTools}::GetDateTimeFormat()$0"},
		{"trigger": "CBlogTools::ResizeImage", "contents": "${1:CBlogTools}::ResizeImage(${2:\\$aFile}, ${2:\\$sizeX}, ${4:\\$sizeY})$0"},
		{"trigger": "CBlogTools::blogUFfileShow", "contents": "${1:CBlogTools}::blogUFfileShow(${2:\\$arResult}, ${2:\\$arParams})$0"},
		{"trigger": "CBlogTrackback::Add", "contents": "${1:CBlogTrackback}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogTrackback::CheckFields", "contents": "${1:CBlogTrackback}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlogTrackback::GetByID", "contents": "${1:CBlogTrackback}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogTrackback::SendPing", "contents": "${1:CBlogTrackback}::SendPing(${2:\\$postID}, ${2:\\$arPingUrls = array()})$0"},
		{"trigger": "CBlogTrackback::SendPingResponce", "contents": "${1:CBlogTrackback}::SendPingResponce(${2:\\$error = 0}, ${2:\\$text = ''})$0"},
		{"trigger": "CBlogUser::Add", "contents": "${1:CBlogUser}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogUser::AddToUserGroup", "contents": "${1:CBlogUser}::AddToUserGroup(${2:\\$ID}, ${2:\\$blogID}, ${4:\\$arGroups = array()}, ${4:\\$joinStatus = 'Y'}, ${6:\\$selectType = BLOG_BY_BLOG_USER_ID}, ${6:\\$action = BLOG_CHANGE})$0"},
		{"trigger": "CBlogUser::CheckFields", "contents": "${1:CBlogUser}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlogUser::Delete", "contents": "${1:CBlogUser}::Delete(${2:\\$ID})$0"},
		{"trigger": "CBlogUser::DeleteFromUserGroup", "contents": "${1:CBlogUser}::DeleteFromUserGroup(${2:\\$ID}, ${2:\\$blogID}, ${4:\\$selectType = BLOG_BY_BLOG_USER_ID})$0"},
		{"trigger": "CBlogUser::GetList", "contents": "${1:CBlogUser}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CBlogUser::GetUserFriendsList", "contents": "${1:CBlogUser}::GetUserFriendsList(${2:\\$ID}, ${2:\\$userID = False}, ${4:\\$bAuth = False}, ${4:\\$limit = 20}, ${6:\\$arGroup = array()})$0"},
		{"trigger": "CBlogUser::GetUserInfo", "contents": "${1:CBlogUser}::GetUserInfo(${2:\\$id}, ${2:\\$path})$0"},
		{"trigger": "CBlogUser::GetUserPerms", "contents": "${1:CBlogUser}::GetUserPerms(${2:\\$arGroups}, ${2:\\$blogID}, ${4:\\$postID = 0}, ${4:\\$permsType = BLOG_PERMS_POST}, ${6:\\$selectType = BLOG_BY_BLOG_USER_ID})$0"},
		{"trigger": "CBlogUser::PreparePath", "contents": "${1:CBlogUser}::PreparePath(${2:\\$userID = 0}, ${2:\\$siteID = False}, ${4:\\$is404 = True})$0"},
		{"trigger": "CBlogUser::SetLastVisit", "contents": "${1:CBlogUser}::SetLastVisit()$0"},
		{"trigger": "CBlogUser::Update", "contents": "${1:CBlogUser}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CBlogUserGroup::CheckFields", "contents": "${1:CBlogUserGroup}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlogUserGroup::GetByID", "contents": "${1:CBlogUserGroup}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogUserGroup::Update", "contents": "${1:CBlogUserGroup}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CBlogUserGroupPerms::Add", "contents": "${1:CBlogUserGroupPerms}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBlogUserGroupPerms::CheckFields", "contents": "${1:CBlogUserGroupPerms}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CBlogUserGroupPerms::GetByID", "contents": "${1:CBlogUserGroupPerms}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CBlogUserGroupPerms::__AutoSetPerms", "contents": "${1:CBlogUserGroupPerms}::__AutoSetPerms(${2:\\$ID})$0"},
		{"trigger": "CRatingsComponentsBlog::CalcActivity", "contents": "${1:CRatingsComponentsBlog}::CalcActivity(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingsComponentsBlog::CalcPost", "contents": "${1:CRatingsComponentsBlog}::CalcPost(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingsComponentsBlog::OnAfterAddRating", "contents": "${1:CRatingsComponentsBlog}::OnAfterAddRating(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingsComponentsBlog::OnGetRatingContentOwner", "contents": "${1:CRatingsComponentsBlog}::OnGetRatingContentOwner(${2:\\$arParams})$0"},
		{"trigger": "CRatingsComponentsBlog::__AssembleConfigDefault", "contents": "${1:CRatingsComponentsBlog}::__AssembleConfigDefault(${2:\\$objectType = null})$0"},
		{"trigger": "blogTextParser::ParserBlogImage", "contents": "${1:blogTextParser}::ParserBlogImage(${2:&\\$text}, ${2:&\\$obj})$0"},
		{"trigger": "blogTextParser::ParserBlogImageBefore", "contents": "${1:blogTextParser}::ParserBlogImageBefore(${2:&\\$text}, ${2:&\\$obj})$0"},
		{"trigger": "blogTextParser::ParserCutAfter", "contents": "${1:blogTextParser}::ParserCutAfter(${2:&\\$text}, ${2:&\\$obj})$0"},
		{"trigger": "blogTextParser::ParserUser", "contents": "${1:blogTextParser}::ParserUser(${2:&\\$text}, ${2:&\\$obj})$0"},
		{"trigger": "blogTextParser::convert_blog_image", "contents": "${1:blogTextParser}::convert_blog_image(${2:\\$p1 = ''}, ${2:\\$imageId = ''}, ${4:\\$p2 = ''}, ${4:\\$type = 'html'}, ${6:\\$serverName=''})$0"},
		{"trigger": "blogTextParser::convert_blog_user", "contents": "${1:blogTextParser}::convert_blog_user(${2:\\$userId = 0}, ${2:\\$name = ''})$0"},
		{"trigger": "blogTextParser::convert_to_rss", "contents": "${1:blogTextParser}::convert_to_rss(${2:\\$text}, ${2:\\$arImages = array()}, ${4:\\$arAllow = array('HTML' => 'N'}, ${4:'ANCHOR' => 'Y'}, ${6:'BIU' => 'Y'}, ${6:'IMG' => 'Y'}, ${8:'QUOTE' => 'Y'}, ${8:'CODE' => 'Y'}, ${10:'FONT' => 'Y'}, ${20:'LIST' => 'Y'}, ${22:'SMILES' => 'Y'}, ${22:'NL2BR' => 'N'}, ${24:'VIDEO' => 'Y'}, ${24:'TABLE' => 'Y'}, ${26:'CUT_ANCHOR' => 'N')}, ${26:\\$bPreview = true}, ${28:\\$arParams = array()})$0"},
		{"trigger": "blogTextParser::sortlen", "contents": "${1:blogTextParser}::sortlen(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CCalendar::CachePath", "contents": "${1:CCalendar}::CachePath()$0"},
		{"trigger": "CCalendar::CacheTime", "contents": "${1:CCalendar}::CacheTime(${2:\\$time = false})$0"},
		{"trigger": "CCalendar::CheckCalDavUrl", "contents": "${1:CCalendar}::CheckCalDavUrl(${2:\\$url}, ${2:\\$username}, ${4:\\$password})$0"},
		{"trigger": "CCalendar::CheckMeetingRoom", "contents": "${1:CCalendar}::CheckMeetingRoom(${2:\\$Params})$0"},
		{"trigger": "CCalendar::CheckUsersAccessibility", "contents": "${1:CCalendar}::CheckUsersAccessibility(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::CheckVideoRoom", "contents": "${1:CCalendar}::CheckVideoRoom(${2:\\$Params})$0"},
		{"trigger": "CCalendar::ClearCache", "contents": "${1:CCalendar}::ClearCache(${2:\\$arPath = false})$0"},
		{"trigger": "CCalendar::ClearSettings", "contents": "${1:CCalendar}::ClearSettings()$0"},
		{"trigger": "CCalendar::CollectCalDAVErros", "contents": "${1:CCalendar}::CollectCalDAVErros(${2:\\$arErrors = array()})$0"},
		{"trigger": "CCalendar::CollectExchangeErrors", "contents": "${1:CCalendar}::CollectExchangeErrors(${2:\\$arErrors = array()})$0"},
		{"trigger": "CCalendar::Color", "contents": "${1:CCalendar}::Color(${2:\\$color = ''}, ${2:\\$bSetDefault = true})$0"},
		{"trigger": "CCalendar::ConvertDayInd", "contents": "${1:CCalendar}::ConvertDayInd(${2:\\$i})$0"},
		{"trigger": "CCalendar::CutZeroTime", "contents": "${1:CCalendar}::CutZeroTime(${2:\\$date})$0"},
		{"trigger": "CCalendar::DFormat", "contents": "${1:CCalendar}::DFormat(${2:\\$bTime = true})$0"},
		{"trigger": "CCalendar::Date", "contents": "${1:CCalendar}::Date(${2:\\$timestamp}, ${2:\\$bTime = true})$0"},
		{"trigger": "CCalendar::DeleteCalendarEvent", "contents": "${1:CCalendar}::DeleteCalendarEvent(${2:\\$calendarId}, ${2:\\$eventId}, ${4:\\$userId}, ${4:\\$oEvent = false})$0"},
		{"trigger": "CCalendar::DeleteEvent", "contents": "${1:CCalendar}::DeleteEvent(${2:\\$ID}, ${2:\\$bSyncDAV = true})$0"},
		{"trigger": "CCalendar::DeleteSection", "contents": "${1:CCalendar}::DeleteSection(${2:\\$ID})$0"},
		{"trigger": "CCalendar::DeleteTrackingUser", "contents": "${1:CCalendar}::DeleteTrackingUser(${2:\\$userId = false})$0"},
		{"trigger": "CCalendar::DoDeleteToDav", "contents": "${1:CCalendar}::DoDeleteToDav(${2:\\$Params}, ${2:\\$oCurEvent})$0"},
		{"trigger": "CCalendar::DoSaveToDav", "contents": "${1:CCalendar}::DoSaveToDav(${2:\\$Params = array()}, ${2:&\\$arFields}, ${4:\\$oCurEvent = false})$0"},
		{"trigger": "CCalendar::FormatTime", "contents": "${1:CCalendar}::FormatTime(${2:\\$h = 0}, ${2:\\$m = 0})$0"},
		{"trigger": "CCalendar::GenEventDynClose", "contents": "${1:CCalendar}::GenEventDynClose(${2:\\$evId})$0"},
		{"trigger": "CCalendar::GetAbsentEvents", "contents": "${1:CCalendar}::GetAbsentEvents(${2:\\$Params})$0"},
		{"trigger": "CCalendar::GetAccessNames", "contents": "${1:CCalendar}::GetAccessNames()$0"},
		{"trigger": "CCalendar::GetAccessTasks", "contents": "${1:CCalendar}::GetAccessTasks(${2:\\$binging = 'calendar_section'})$0"},
		{"trigger": "CCalendar::GetAccessTasksByName", "contents": "${1:CCalendar}::GetAccessTasksByName(${2:\\$binging = 'calendar_section'}, ${2:\\$name = 'calendar_denied'})$0"},
		{"trigger": "CCalendar::GetAccessibilityForMeetingRoom", "contents": "${1:CCalendar}::GetAccessibilityForMeetingRoom(${2:\\$Params})$0"},
		{"trigger": "CCalendar::GetAccessibilityForUsers", "contents": "${1:CCalendar}::GetAccessibilityForUsers(${2:\\$Params})$0"},
		{"trigger": "CCalendar::GetCalendarList", "contents": "${1:CCalendar}::GetCalendarList(${2:\\$calendarId})$0"},
		{"trigger": "CCalendar::GetCurUserMeetingSection", "contents": "${1:CCalendar}::GetCurUserMeetingSection(${2:\\$bCreate = false})$0"},
		{"trigger": "CCalendar::GetDavCalendarEventsList", "contents": "${1:CCalendar}::GetDavCalendarEventsList(${2:\\$calendarId}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CCalendar::GetDisplayedSuperposed", "contents": "${1:CCalendar}::GetDisplayedSuperposed(${2:\\$userId = false})$0"},
		{"trigger": "CCalendar::GetEventList", "contents": "${1:CCalendar}::GetEventList(${2:\\$Params = array()}, ${2:&\\$arAttendees})$0"},
		{"trigger": "CCalendar::GetGroupMembers", "contents": "${1:CCalendar}::GetGroupMembers(${2:\\$groupId})$0"},
		{"trigger": "CCalendar::GetInstance", "contents": "${1:CCalendar}::GetInstance()$0"},
		{"trigger": "CCalendar::GetMeetingRoomById", "contents": "${1:CCalendar}::GetMeetingRoomById(${2:\\$Params})$0"},
		{"trigger": "CCalendar::GetMeetingRoomList", "contents": "${1:CCalendar}::GetMeetingRoomList(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::GetMeetingSection", "contents": "${1:CCalendar}::GetMeetingSection(${2:\\$userId}, ${2:\\$bCreate = false})$0"},
		{"trigger": "CCalendar::GetNearestEventsList", "contents": "${1:CCalendar}::GetNearestEventsList(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::GetOuterUrl", "contents": "${1:CCalendar}::GetOuterUrl()$0"},
		{"trigger": "CCalendar::GetOwnerId", "contents": "${1:CCalendar}::GetOwnerId()$0"},
		{"trigger": "CCalendar::GetOwnerName", "contents": "${1:CCalendar}::GetOwnerName(${2:\\$type = ''}, ${2:\\$ownerId = ''})$0"},
		{"trigger": "CCalendar::GetPath", "contents": "${1:CCalendar}::GetPath()$0"},
		{"trigger": "CCalendar::GetPathes", "contents": "${1:CCalendar}::GetPathes(${2:\\$forSite = false})$0"},
		{"trigger": "CCalendar::GetPathesList", "contents": "${1:CCalendar}::GetPathesList()$0"},
		{"trigger": "CCalendar::GetPermissions", "contents": "${1:CCalendar}::GetPermissions(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::GetSectionList", "contents": "${1:CCalendar}::GetSectionList(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::GetSettings", "contents": "${1:CCalendar}::GetSettings(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::GetStartUpEvent", "contents": "${1:CCalendar}::GetStartUpEvent(${2:\\$eventId = false})$0"},
		{"trigger": "CCalendar::GetSuperposed", "contents": "${1:CCalendar}::GetSuperposed(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::GetSuperposedForUsers", "contents": "${1:CCalendar}::GetSuperposedForUsers(${2:\\$arUsers}, ${2:\\$userId = false})$0"},
		{"trigger": "CCalendar::GetTaskList", "contents": "${1:CCalendar}::GetTaskList(${2:\\$Params = array()}, ${2:&\\$arTaskIds})$0"},
		{"trigger": "CCalendar::GetTextLocation", "contents": "${1:CCalendar}::GetTextLocation(${2:\\$loc = ''})$0"},
		{"trigger": "CCalendar::GetType", "contents": "${1:CCalendar}::GetType()$0"},
		{"trigger": "CCalendar::GetTypeByExternalId", "contents": "${1:CCalendar}::GetTypeByExternalId(${2:\\$externalId = false})$0"},
		{"trigger": "CCalendar::GetUserGroups", "contents": "${1:CCalendar}::GetUserGroups(${2:\\$userId = 0})$0"},
		{"trigger": "CCalendar::GetUserId", "contents": "${1:CCalendar}::GetUserId()$0"},
		{"trigger": "CCalendar::GetUserManagers", "contents": "${1:CCalendar}::GetUserManagers(${2:\\$userId}, ${2:\\$bReturnIds = false})$0"},
		{"trigger": "CCalendar::GetUserName", "contents": "${1:CCalendar}::GetUserName(${2:\\$user})$0"},
		{"trigger": "CCalendar::GetUserPermissionsForCalendar", "contents": "${1:CCalendar}::GetUserPermissionsForCalendar(${2:\\$calendarId}, ${2:\\$userId})$0"},
		{"trigger": "CCalendar::GetUserSettings", "contents": "${1:CCalendar}::GetUserSettings(${2:\\$userId = false})$0"},
		{"trigger": "CCalendar::Init", "contents": "${1:CCalendar}::Init(${2:\\$Params})$0"},
		{"trigger": "CCalendar::InitCalDavParams", "contents": "${1:CCalendar}::InitCalDavParams(${2:&\\$JSConfig})$0"},
		{"trigger": "CCalendar::IsBitrix24", "contents": "${1:CCalendar}::IsBitrix24()$0"},
		{"trigger": "CCalendar::IsCalDAVEnabled", "contents": "${1:CCalendar}::IsCalDAVEnabled()$0"},
		{"trigger": "CCalendar::IsExchangeEnabled", "contents": "${1:CCalendar}::IsExchangeEnabled(${2:\\$userId = false})$0"},
		{"trigger": "CCalendar::IsExtranetEnabled", "contents": "${1:CCalendar}::IsExtranetEnabled()$0"},
		{"trigger": "CCalendar::IsIntranetEnabled", "contents": "${1:CCalendar}::IsIntranetEnabled()$0"},
		{"trigger": "CCalendar::IsSocNet", "contents": "${1:CCalendar}::IsSocNet()$0"},
		{"trigger": "CCalendar::IsWebserviceEnabled", "contents": "${1:CCalendar}::IsWebserviceEnabled()$0"},
		{"trigger": "CCalendar::ManageConnections", "contents": "${1:CCalendar}::ManageConnections(${2:\\$arConnections = array()}, ${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::ModifyEvent", "contents": "${1:CCalendar}::ModifyEvent(${2:\\$calendarId}, ${2:\\$arFields})$0"},
		{"trigger": "CCalendar::OutputJSRes", "contents": "${1:CCalendar}::OutputJSRes(${2:\\$reqId = false}, ${2:\\$Res = false})$0"},
		{"trigger": "CCalendar::ParseHTMLToBB", "contents": "${1:CCalendar}::ParseHTMLToBB(${2:\\$html = ''})$0"},
		{"trigger": "CCalendar::ParseLocation", "contents": "${1:CCalendar}::ParseLocation(${2:\\$str = ''})$0"},
		{"trigger": "CCalendar::PushAccessNames", "contents": "${1:CCalendar}::PushAccessNames(${2:\\$arNames = array()})$0"},
		{"trigger": "CCalendar::ReleaseMeetingRoom", "contents": "${1:CCalendar}::ReleaseMeetingRoom(${2:\\$Params})$0"},
		{"trigger": "CCalendar::ReleaseVideoRoom", "contents": "${1:CCalendar}::ReleaseVideoRoom(${2:\\$Params})$0"},
		{"trigger": "CCalendar::ReminderAgent", "contents": "${1:CCalendar}::ReminderAgent(${2:\\$eventId = 0}, ${2:\\$userId = 0}, ${4:\\$viewPath = ''}, ${4:\\$calendarType = ''}, ${6:\\$ownerId = 0})$0"},
		{"trigger": "CCalendar::RemoveAgent", "contents": "${1:CCalendar}::RemoveAgent(${2:\\$arParams})$0"},
		{"trigger": "CCalendar::Request", "contents": "${1:CCalendar}::Request(${2:\\$action = ''})$0"},
		{"trigger": "CCalendar::ReserveMeetingRoom", "contents": "${1:CCalendar}::ReserveMeetingRoom(${2:\\$Params})$0"},
		{"trigger": "CCalendar::ReserveVideoRoom", "contents": "${1:CCalendar}::ReserveVideoRoom(${2:\\$Params})$0"},
		{"trigger": "CCalendar::SaveEvent", "contents": "${1:CCalendar}::SaveEvent(${2:\\$Params})$0"},
		{"trigger": "CCalendar::SaveSection", "contents": "${1:CCalendar}::SaveSection(${2:\\$Params})$0"},
		{"trigger": "CCalendar::SearchAttendees", "contents": "${1:CCalendar}::SearchAttendees(${2:\\$name = ''}, ${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::SendInvitationMessage", "contents": "${1:CCalendar}::SendInvitationMessage(${2:\\$Params})$0"},
		{"trigger": "CCalendar::SetDisplayedSuperposed", "contents": "${1:CCalendar}::SetDisplayedSuperposed(${2:\\$userId = false}, ${2:\\$arIds = array()})$0"},
		{"trigger": "CCalendar::SetLocation", "contents": "${1:CCalendar}::SetLocation(${2:\\$old = ''}, ${2:\\$new = ''}, ${4:\\$changed = true}, ${4:\\$Params = array()})$0"},
		{"trigger": "CCalendar::SetSettings", "contents": "${1:CCalendar}::SetSettings(${2:\\$arSettings = array()}, ${2:\\$bClear = false})$0"},
		{"trigger": "CCalendar::SetUserSettings", "contents": "${1:CCalendar}::SetUserSettings(${2:\\$Settings = array()}, ${2:\\$userId = false})$0"},
		{"trigger": "CCalendar::Show", "contents": "${1:CCalendar}::Show(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendar::SyncCalendarItems", "contents": "${1:CCalendar}::SyncCalendarItems(${2:\\$connectionType}, ${2:\\$calendarId}, ${4:\\$arCalendarItems})$0"},
		{"trigger": "CCalendar::SyncCalendars", "contents": "${1:CCalendar}::SyncCalendars(${2:\\$connectionType}, ${2:\\$arCalendars}, ${4:\\$entityType}, ${4:\\$entityId}, ${6:\\$connectionId = null})$0"},
		{"trigger": "CCalendar::SyncClearCache", "contents": "${1:CCalendar}::SyncClearCache()$0"},
		{"trigger": "CCalendar::TSFormat", "contents": "${1:CCalendar}::TSFormat()$0"},
		{"trigger": "CCalendar::TempUser", "contents": "${1:CCalendar}::TempUser(${2:\\$TmpUser = false}, ${2:\\$create = true}, ${4:\\$ID = false})$0"},
		{"trigger": "CCalendar::ThrowError", "contents": "${1:CCalendar}::ThrowError(${2:\\$str})$0"},
		{"trigger": "CCalendar::Timestamp", "contents": "${1:CCalendar}::Timestamp(${2:\\$date})$0"},
		{"trigger": "CCalendar::TrackingUsers", "contents": "${1:CCalendar}::TrackingUsers(${2:\\$userId}, ${2:\\$arUserIds = false})$0"},
		{"trigger": "CCalendar::TrimTime", "contents": "${1:CCalendar}::TrimTime(${2:\\$strTime})$0"},
		{"trigger": "CCalendar::UnParseTextLocation", "contents": "${1:CCalendar}::UnParseTextLocation(${2:\\$loc = ''})$0"},
		{"trigger": "CCalendar::WeekDayByInd", "contents": "${1:CCalendar}::WeekDayByInd(${2:\\$i}, ${2:\\$binv = true})$0"},
		{"trigger": "CCalendar::_NearestSort", "contents": "${1:CCalendar}::_NearestSort(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CCalendar::_ParseHack", "contents": "${1:CCalendar}::_ParseHack(${2:\\$text}, ${2:\\$TextParser})$0"},
		{"trigger": "CCalendarEvent::ApplyAccessRestrictions", "contents": "${1:CCalendarEvent}::ApplyAccessRestrictions(${2:\\$event}, ${2:\\$userId = false})$0"},
		{"trigger": "CCalendarEvent::CheckFields", "contents": "${1:CCalendarEvent}::CheckFields(${2:&\\$arFields})$0"},
		{"trigger": "CCalendarEvent::CheckRecurcion", "contents": "${1:CCalendarEvent}::CheckRecurcion(${2:\\$event})$0"},
		{"trigger": "CCalendarEvent::Delete", "contents": "${1:CCalendarEvent}::Delete(${2:\\$Params})$0"},
		{"trigger": "CCalendarEvent::DeleteEmpty", "contents": "${1:CCalendarEvent}::DeleteEmpty()$0"},
		{"trigger": "CCalendarEvent::Edit", "contents": "${1:CCalendarEvent}::Edit(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarEvent::GetAbsent", "contents": "${1:CCalendarEvent}::GetAbsent(${2:\\$users = false}, ${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarEvent::GetAccessibilityForUsers", "contents": "${1:CCalendarEvent}::GetAccessibilityForUsers(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarEvent::GetAttendees", "contents": "${1:CCalendarEvent}::GetAttendees(${2:\\$arEventIds = array()})$0"},
		{"trigger": "CCalendarEvent::GetAttendeesList", "contents": "${1:CCalendarEvent}::GetAttendeesList(${2:\\$Params = array()}, ${2:&\\$strInvIds})$0"},
		{"trigger": "CCalendarEvent::GetById", "contents": "${1:CCalendarEvent}::GetById(${2:\\$ID}, ${2:\\$checkPermissions = true})$0"},
		{"trigger": "CCalendarEvent::GetCurrentSectionIds", "contents": "${1:CCalendarEvent}::GetCurrentSectionIds(${2:\\$ID})$0"},
		{"trigger": "CCalendarEvent::GetFields", "contents": "${1:CCalendarEvent}::GetFields()$0"},
		{"trigger": "CCalendarEvent::GetLastAttendees", "contents": "${1:CCalendarEvent}::GetLastAttendees()$0"},
		{"trigger": "CCalendarEvent::GetList", "contents": "${1:CCalendarEvent}::GetList(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarEvent::HandleEvent", "contents": "${1:CCalendarEvent}::HandleEvent(${2:&\\$res}, ${2:\\$item = array()})$0"},
		{"trigger": "CCalendarEvent::HandleREvent", "contents": "${1:CCalendarEvent}::HandleREvent(${2:&\\$res}, ${2:\\$item = array()}, ${4:\\$Params})$0"},
		{"trigger": "CCalendarEvent::InviteAttendees", "contents": "${1:CCalendarEvent}::InviteAttendees(${2:\\$ID}, ${2:\\$arFields = array()}, ${4:\\$arAttendees = array()}, ${4:\\$arStatuses = array()}, ${6:\\$bSendInvitations = true})$0"},
		{"trigger": "CCalendarEvent::PackRRule", "contents": "${1:CCalendarEvent}::PackRRule(${2:\\$RRule = array()})$0"},
		{"trigger": "CCalendarEvent::ParseRRULE", "contents": "${1:CCalendarEvent}::ParseRRULE(${2:\\$rule = ''})$0"},
		{"trigger": "CCalendarEvent::ParseRecursion", "contents": "${1:CCalendarEvent}::ParseRecursion(${2:&\\$res}, ${2:\\$event}, ${4:\\$Params = array()})$0"},
		{"trigger": "CCalendarEvent::ParseText", "contents": "${1:CCalendarEvent}::ParseText(${2:\\$text = ''})$0"},
		{"trigger": "CCalendarEvent::SetMeetingParams", "contents": "${1:CCalendarEvent}::SetMeetingParams(${2:\\$userId}, ${2:\\$eventId}, ${4:\\$arFields})$0"},
		{"trigger": "CCalendarEvent::SetMeetingStatus", "contents": "${1:CCalendarEvent}::SetMeetingStatus(${2:\\$userId}, ${2:\\$eventId}, ${4:\\$status = 'Q'}, ${4:\\$comment = ''})$0"},
		{"trigger": "CCalendarEvent::UpdateReminders", "contents": "${1:CCalendarEvent}::UpdateReminders(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarEvent::UpdateUserFields", "contents": "${1:CCalendarEvent}::UpdateUserFields(${2:\\$ID}, ${2:\\$arFields = array()})$0"},
		{"trigger": "CCalendarNotifySchema::OnGetNotifySchema", "contents": "${1:CCalendarNotifySchema}::OnGetNotifySchema()$0"},
		{"trigger": "CCalendarNotifySchema::__construct", "contents": "${1:CCalendarNotifySchema}::__construct()$0"},
		{"trigger": "CCalendarPlanner::BuildDialog", "contents": "${1:CCalendarPlanner}::BuildDialog(${2:\\$Params})$0"},
		{"trigger": "CCalendarPlanner::GetUserOptions", "contents": "${1:CCalendarPlanner}::GetUserOptions()$0"},
		{"trigger": "CCalendarPlanner::Localization", "contents": "${1:CCalendarPlanner}::Localization()$0"},
		{"trigger": "CCalendarSceleton::Build", "contents": "${1:CCalendarSceleton}::Build(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::BuildDialogs", "contents": "${1:CCalendarSceleton}::BuildDialogs(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogAddEventSimple", "contents": "${1:CCalendarSceleton}::DialogAddEventSimple(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogEditEvent", "contents": "${1:CCalendarSceleton}::DialogEditEvent(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogEditSection", "contents": "${1:CCalendarSceleton}::DialogEditSection(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogExportCalendar", "contents": "${1:CCalendarSceleton}::DialogExportCalendar(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogExternalCalendars", "contents": "${1:CCalendarSceleton}::DialogExternalCalendars(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogMobileCon", "contents": "${1:CCalendarSceleton}::DialogMobileCon(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogSettings", "contents": "${1:CCalendarSceleton}::DialogSettings(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogSuperpose", "contents": "${1:CCalendarSceleton}::DialogSuperpose(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DialogViewEvent", "contents": "${1:CCalendarSceleton}::DialogViewEvent(${2:\\$Params})$0"},
		{"trigger": "CCalendarSceleton::DisplayColorSelector", "contents": "${1:CCalendarSceleton}::DisplayColorSelector(${2:\\$id}, ${2:\\$key = 'sect'}, ${4:\\$colors})$0"},
		{"trigger": "CCalendarSceleton::GetAccessHTML", "contents": "${1:CCalendarSceleton}::GetAccessHTML(${2:\\$binging = 'calendar_section'}, ${2:\\$id = false})$0"},
		{"trigger": "CCalendarSceleton::GetUserfieldsEditHtml", "contents": "${1:CCalendarSceleton}::GetUserfieldsEditHtml(${2:\\$eventId}, ${2:\\$url = ''})$0"},
		{"trigger": "CCalendarSceleton::GetUserfieldsViewHtml", "contents": "${1:CCalendarSceleton}::GetUserfieldsViewHtml(${2:\\$eventId})$0"},
		{"trigger": "CCalendarSceleton::GetWeekDays", "contents": "${1:CCalendarSceleton}::GetWeekDays()$0"},
		{"trigger": "CCalendarSceleton::GetWeekDaysEx", "contents": "${1:CCalendarSceleton}::GetWeekDaysEx(${2:\\$weekStart = 'MO'})$0"},
		{"trigger": "CCalendarSceleton::InitJS", "contents": "${1:CCalendarSceleton}::InitJS(${2:\\$JSConfig})$0"},
		{"trigger": "CCalendarSceleton::Localization", "contents": "${1:CCalendarSceleton}::Localization()$0"},
		{"trigger": "CCalendarSect::CanDo", "contents": "${1:CCalendarSect}::CanDo(${2:\\$operation}, ${2:\\$sectId = 0}, ${4:\\$userId = false})$0"},
		{"trigger": "CCalendarSect::CheckFields", "contents": "${1:CCalendarSect}::CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CCalendarSect::CheckSign", "contents": "${1:CCalendarSect}::CheckSign(${2:\\$sign}, ${2:\\$userId}, ${4:\\$sectId})$0"},
		{"trigger": "CCalendarSect::CreateDefault", "contents": "${1:CCalendarSect}::CreateDefault(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarSect::Delete", "contents": "${1:CCalendarSect}::Delete(${2:\\$ID})$0"},
		{"trigger": "CCalendarSect::Edit", "contents": "${1:CCalendarSect}::Edit(${2:\\$Params})$0"},
		{"trigger": "CCalendarSect::ExtendExportEventsarray", "contents": "${1:CCalendarSect}::ExtendExportEventsarray(${2:\\$arEvents}, ${2:\\$arCalEx})$0"},
		{"trigger": "CCalendarSect::FormatICal", "contents": "${1:CCalendarSect}::FormatICal(${2:\\$Section}, ${2:\\$Events})$0"},
		{"trigger": "CCalendarSect::GetarrayPermissions", "contents": "${1:CCalendarSect}::GetarrayPermissions(${2:\\$arSections = array()})$0"},
		{"trigger": "CCalendarSect::GetById", "contents": "${1:CCalendarSect}::GetById(${2:\\$ID = 0}, ${2:\\$checkPermissions = true}, ${4:\\$bRerequest = false})$0"},
		{"trigger": "CCalendarSect::GetCalDAVConnectionId", "contents": "${1:CCalendarSect}::GetCalDAVConnectionId(${2:\\$sectionId = 0})$0"},
		{"trigger": "CCalendarSect::GetDefaultAccess", "contents": "${1:CCalendarSect}::GetDefaultAccess(${2:\\$type}, ${2:\\$ownerId})$0"},
		{"trigger": "CCalendarSect::GetExportLink", "contents": "${1:CCalendarSect}::GetExportLink(${2:\\$sectionId}, ${2:\\$type = ''}, ${4:\\$ownerId = false})$0"},
		{"trigger": "CCalendarSect::GetFields", "contents": "${1:CCalendarSect}::GetFields()$0"},
		{"trigger": "CCalendarSect::GetList", "contents": "${1:CCalendarSect}::GetList(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarSect::GetModificationLabel", "contents": "${1:CCalendarSect}::GetModificationLabel(${2:\\$calendarId})$0"},
		{"trigger": "CCalendarSect::GetOperations", "contents": "${1:CCalendarSect}::GetOperations(${2:\\$sectId}, ${2:\\$userId = false})$0"},
		{"trigger": "CCalendarSect::GetOutlookLink", "contents": "${1:CCalendarSect}::GetOutlookLink(${2:\\$Params})$0"},
		{"trigger": "CCalendarSect::GetSPExportLink", "contents": "${1:CCalendarSect}::GetSPExportLink()$0"},
		{"trigger": "CCalendarSect::GetSign", "contents": "${1:CCalendarSect}::GetSign(${2:\\$userId}, ${2:\\$sectId})$0"},
		{"trigger": "CCalendarSect::GetSuperposedList", "contents": "${1:CCalendarSect}::GetSuperposedList(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarSect::GetUniqCalendarId", "contents": "${1:CCalendarSect}::GetUniqCalendarId()$0"},
		{"trigger": "CCalendarSect::Hidden", "contents": "${1:CCalendarSect}::Hidden(${2:\\$userId}, ${2:\\$ar = false})$0"},
		{"trigger": "CCalendarSect::ReturnICal", "contents": "${1:CCalendarSect}::ReturnICal(${2:\\$Params})$0"},
		{"trigger": "CCalendarSect::ReturnICalSuperposed", "contents": "${1:CCalendarSect}::ReturnICalSuperposed(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarSect::SavePermissions", "contents": "${1:CCalendarSect}::SavePermissions(${2:\\$sectId}, ${2:\\$arTaskPerm})$0"},
		{"trigger": "CCalendarSect::ShowICalHeaders", "contents": "${1:CCalendarSect}::ShowICalHeaders()$0"},
		{"trigger": "CCalendarSect::UpdateModificationLabel", "contents": "${1:CCalendarSect}::UpdateModificationLabel(${2:\\$arId = array()})$0"},
		{"trigger": "CCalendarSect::_ICalPaste", "contents": "${1:CCalendarSect}::_ICalPaste(${2:\\$str})$0"},
		{"trigger": "CCalendarType::CanDo", "contents": "${1:CCalendarType}::CanDo(${2:\\$operation}, ${2:\\$xmlId = 0}, ${4:\\$userId = false})$0"},
		{"trigger": "CCalendarType::CheckType", "contents": "${1:CCalendarType}::CheckType(${2:\\$xmlId}, ${2:\\$userId = false})$0"},
		{"trigger": "CCalendarType::Delete", "contents": "${1:CCalendarType}::Delete(${2:\\$XML_ID})$0"},
		{"trigger": "CCalendarType::Edit", "contents": "${1:CCalendarType}::Edit(${2:\\$Params})$0"},
		{"trigger": "CCalendarType::GetarrayPermissions", "contents": "${1:CCalendarType}::GetarrayPermissions(${2:\\$arTypes = array()})$0"},
		{"trigger": "CCalendarType::GetList", "contents": "${1:CCalendarType}::GetList(${2:\\$Params = array()})$0"},
		{"trigger": "CCalendarType::GetOperations", "contents": "${1:CCalendarType}::GetOperations(${2:\\$xmlId}, ${2:\\$userId = false})$0"},
		{"trigger": "CCalendarType::SavePermissions", "contents": "${1:CCalendarType}::SavePermissions(${2:\\$type}, ${2:\\$arTaskPerm})$0"},
		{"trigger": "CCalendarWebService::GetList", "contents": "${1:CCalendarWebService}::GetList(${2:\\$listName})$0"},
		{"trigger": "CCalendarWebService::GetListItemChanges", "contents": "${1:CCalendarWebService}::GetListItemChanges(${2:\\$listName}, ${2:\\$viewFields = ''}, ${4:\\$since = ''}, ${4:\\$contains = ''})$0"},
		{"trigger": "CCalendarWebService::GetListItemChangesSinceToken", "contents": "${1:CCalendarWebService}::GetListItemChangesSinceToken(${2:\\$listName}, ${2:\\$viewFields = ''}, ${4:\\$query = ''}, ${4:\\$rowLimit = 0}, ${6:\\$changeToken = ''})$0"},
		{"trigger": "CCalendarWebService::GetWebServiceDesc", "contents": "${1:CCalendarWebService}::GetWebServiceDesc()$0"},
		{"trigger": "CCalendarWebService::UpdateListItems", "contents": "${1:CCalendarWebService}::UpdateListItems(${2:\\$listName}, ${2:\\$updates})$0"},
		{"trigger": "CCalendarWebService::__getFieldsDefinition", "contents": "${1:CCalendarWebService}::__getFieldsDefinition()$0"},
		{"trigger": "CCalendarWebService::__getRow", "contents": "${1:CCalendarWebService}::__getRow(${2:\\$event}, ${2:\\$listName}, ${4:&\\$last_change})$0"},
		{"trigger": "CCalendarWebService::__makeDateTime", "contents": "${1:CCalendarWebService}::__makeDateTime(${2:\\$ts = null})$0"},
		{"trigger": "CCalendarWebService::__makeTS", "contents": "${1:CCalendarWebService}::__makeTS(${2:\\$datetime = null})$0"},
		{"trigger": "CCatalog::Add", "contents": "${1:CCatalog}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCatalog::GetByID", "contents": "${1:CCatalog}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCatalog::GetSkuInfoByPropID", "contents": "${1:CCatalog}::GetSkuInfoByPropID(${2:\\$ID})$0"},
		{"trigger": "CCatalog::LinkSKUIBlock", "contents": "${1:CCatalog}::LinkSKUIBlock(${2:\\$ID,\\$SKUID})$0"},
		{"trigger": "CCatalog::OnBeforeCatalogDelete", "contents": "${1:CCatalog}::OnBeforeCatalogDelete(${2:\\$ID})$0"},
		{"trigger": "CCatalog::PreGenerateXML", "contents": "${1:CCatalog}::PreGenerateXML(${2:\\$xml_type = 'yandex'})$0"},
		{"trigger": "CCatalog::Update", "contents": "${1:CCatalog}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CCatalogDiscount::CheckFields", "contents": "${1:CCatalogDiscount}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CCatalogDiscount::ClearCouponsByManage", "contents": "${1:CCatalogDiscount}::ClearCouponsByManage(${2:\\$intUserID})$0"},
		{"trigger": "CCatalogDiscount::EraseCoupon", "contents": "${1:CCatalogDiscount}::EraseCoupon(${2:\\$strCoupon})$0"},
		{"trigger": "CCatalogDiscount::GetByID", "contents": "${1:CCatalogDiscount}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCatalogDiscount::GetCoupons", "contents": "${1:CCatalogDiscount}::GetCoupons()$0"},
		{"trigger": "CCatalogDiscount::GetCouponsByManage", "contents": "${1:CCatalogDiscount}::GetCouponsByManage(${2:\\$intUserID})$0"},
		{"trigger": "CCatalogDiscount::GetDiscountByProduct", "contents": "${1:CCatalogDiscount}::GetDiscountByProduct(${2:\\$productID = 0}, ${2:\\$arUserGroups = array()}, ${4:\\$renewal = 'N'}, ${4:\\$arCatalogGroups = array()}, ${6:\\$siteID = false}, ${6:\\$arDiscountCoupons = false})$0"},
		{"trigger": "CCatalogDiscount::GetDiscountGroupsList", "contents": "${1:CCatalogDiscount}::GetDiscountGroupsList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CCatalogDiscount::HaveCoupons", "contents": "${1:CCatalogDiscount}::HaveCoupons(${2:\\$ID}, ${2:\\$excludeID = 0})$0"},
		{"trigger": "CCatalogDiscount::OnClearCouponList", "contents": "${1:CCatalogDiscount}::OnClearCouponList(${2:\\$intUserID}, ${2:\\$arCoupons}, ${4:\\$arModules})$0"},
		{"trigger": "CCatalogDiscount::OnDeleteCouponList", "contents": "${1:CCatalogDiscount}::OnDeleteCouponList(${2:\\$intUserID}, ${2:\\$arModules})$0"},
		{"trigger": "CCatalogDiscount::OnSetCouponList", "contents": "${1:CCatalogDiscount}::OnSetCouponList(${2:\\$intUserID}, ${2:\\$arCoupons}, ${4:\\$arModules})$0"},
		{"trigger": "CCatalogDiscount::SetCoupon", "contents": "${1:CCatalogDiscount}::SetCoupon(${2:\\$coupon})$0"},
		{"trigger": "CCatalogDiscount::SetCouponByManage", "contents": "${1:CCatalogDiscount}::SetCouponByManage(${2:\\$intUserID,\\$strCoupon})$0"},
		{"trigger": "CCatalogDiscount::_Add", "contents": "${1:CCatalogDiscount}::_Add(${2:&\\$arFields})$0"},
		{"trigger": "CCatalogDiscount::_Update", "contents": "${1:CCatalogDiscount}::_Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CCatalogDiscountCoupon::Delete", "contents": "${1:CCatalogDiscountCoupon}::Delete(${2:\\$ID}, ${2:\\$bAffectDataFile = true})$0"},
		{"trigger": "CCatalogDiscountCoupon::DeleteByDiscountID", "contents": "${1:CCatalogDiscountCoupon}::DeleteByDiscountID(${2:\\$ID}, ${2:\\$bAffectDataFile = true})$0"},
		{"trigger": "CCatalogDiscountCoupon::GetList", "contents": "${1:CCatalogDiscountCoupon}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CCatalogDiscountSave::Add", "contents": "${1:CCatalogDiscountSave}::Add(${2:\\$arFields}, ${2:\\$boolCalc = false})$0"},
		{"trigger": "CCatalogDiscountSave::Delete", "contents": "${1:CCatalogDiscountSave}::Delete(${2:\\$intID})$0"},
		{"trigger": "CCatalogDiscountSave::Disable", "contents": "${1:CCatalogDiscountSave}::Disable()$0"},
		{"trigger": "CCatalogDiscountSave::Enable", "contents": "${1:CCatalogDiscountSave}::Enable()$0"},
		{"trigger": "CCatalogDiscountSave::GetarrayByID", "contents": "${1:CCatalogDiscountSave}::GetarrayByID(${2:\\$intID})$0"},
		{"trigger": "CCatalogDiscountSave::GetDiscount", "contents": "${1:CCatalogDiscountSave}::GetDiscount(${2:\\$arParams = array()})$0"},
		{"trigger": "CCatalogDiscountSave::GetGroupByDiscount", "contents": "${1:CCatalogDiscountSave}::GetGroupByDiscount(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CCatalogDiscountSave::GetPeriodTypeList", "contents": "${1:CCatalogDiscountSave}::GetPeriodTypeList(${2:\\$boolFull = true})$0"},
		{"trigger": "CCatalogDiscountSave::GetRangeByDiscount", "contents": "${1:CCatalogDiscountSave}::GetRangeByDiscount(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CCatalogDiscountSave::SetDiscountUserID", "contents": "${1:CCatalogDiscountSave}::SetDiscountUserID(${2:\\$intUserID})$0"},
		{"trigger": "CCatalogDiscountSave::__ClearGroupsCache", "contents": "${1:CCatalogDiscountSave}::__ClearGroupsCache(${2:\\$intID = 0})$0"},
		{"trigger": "CCatalogDiscountSave::__GetDiscountGroups", "contents": "${1:CCatalogDiscountSave}::__GetDiscountGroups(${2:\\$arUserGroups})$0"},
		{"trigger": "CCatalogDiscountSave::__SaleOrderSumm", "contents": "${1:CCatalogDiscountSave}::__SaleOrderSumm(${2:\\$arOrderFilter}, ${2:\\$strCurrency})$0"},
		{"trigger": "CCatalogDiscountSave::__UpdateGroupsCache", "contents": "${1:CCatalogDiscountSave}::__UpdateGroupsCache(${2:\\$intID,\\$arGroups = array()})$0"},
		{"trigger": "CCatalogEvent::GetYandexAgentEvent", "contents": "${1:CCatalogEvent}::GetYandexAgentEvent()$0"},
		{"trigger": "CCatalogExport::CheckFields", "contents": "${1:CCatalogExport}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CCatalogExport::GetByID", "contents": "${1:CCatalogExport}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCatalogExport::Update", "contents": "${1:CCatalogExport}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CCatalogGroup::Add", "contents": "${1:CCatalogGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCatalogGroup::CheckFields", "contents": "${1:CCatalogGroup}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CCatalogGroup::GetBaseGroup", "contents": "${1:CCatalogGroup}::GetBaseGroup()$0"},
		{"trigger": "CCatalogGroup::GetListEx", "contents": "${1:CCatalogGroup}::GetListEx(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CCatalogImport::Add", "contents": "${1:CCatalogImport}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCatalogImport::CheckFields", "contents": "${1:CCatalogImport}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CCatalogImport::GetByID", "contents": "${1:CCatalogImport}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCatalogImport::Update", "contents": "${1:CCatalogImport}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CCatalogLoad::Add", "contents": "${1:CCatalogLoad}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCatalogLoad::Delete", "contents": "${1:CCatalogLoad}::Delete(${2:\\$ID})$0"},
		{"trigger": "CCatalogProduct::Add", "contents": "${1:CCatalogProduct}::Add(${2:\\$arFields}, ${2:\\$boolCheck = true})$0"},
		{"trigger": "CCatalogProduct::GetByID", "contents": "${1:CCatalogProduct}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCatalogProduct::GetNearestQuantityPrice", "contents": "${1:CCatalogProduct}::GetNearestQuantityPrice(${2:\\$productID}, ${2:\\$quantity = 1}, ${4:\\$arUserGroups = array()})$0"},
		{"trigger": "CCatalogProduct::GetQueryBuildarrays", "contents": "${1:CCatalogProduct}::GetQueryBuildarrays(${2:\\$arOrder}, ${2:\\$arFilter}, ${4:\\$arSelect})$0"},
		{"trigger": "CCatalogProduct::OnAfterIBlockElementUpdate", "contents": "${1:CCatalogProduct}::OnAfterIBlockElementUpdate(${2:\\$arFields})$0"},
		{"trigger": "CCatalogProduct::ParseQueryBuildField", "contents": "${1:CCatalogProduct}::ParseQueryBuildField(${2:\\$field})$0"},
		{"trigger": "CCatalogProduct::QuantityTracer", "contents": "${1:CCatalogProduct}::QuantityTracer(${2:\\$ProductID}, ${2:\\$DeltaQuantity})$0"},
		{"trigger": "CCatalogProductGroups::Add", "contents": "${1:CCatalogProductGroups}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCatalogProductGroups::CheckFields", "contents": "${1:CCatalogProductGroups}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CCatalogProductGroups::DeleteByGroup", "contents": "${1:CCatalogProductGroups}::DeleteByGroup(${2:\\$ID})$0"},
		{"trigger": "CCatalogProductGroups::GetList", "contents": "${1:CCatalogProductGroups}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CCatalogProductGroups::Update", "contents": "${1:CCatalogProductGroups}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CCatalogSKU::GetInfoByProductIBlock", "contents": "${1:CCatalogSKU}::GetInfoByProductIBlock(${2:\\$intIBlockID})$0"},
		{"trigger": "CCatalogVat::Delete", "contents": "${1:CCatalogVat}::Delete(${2:\\$ID})$0"},
		{"trigger": "CCatalogVat::GetByID", "contents": "${1:CCatalogVat}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCatalogVat::err_mess", "contents": "${1:CCatalogVat}::err_mess()$0"},
		{"trigger": "CCurrency::GetList", "contents": "${1:CCurrency}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$lang = LANG})$0"},
		{"trigger": "CExtra::CheckFields", "contents": "${1:CExtra}::CheckFields(${2:\\$strAction}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CExtra::GetByID", "contents": "${1:CExtra}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CExtra::SelectBox", "contents": "${1:CExtra}::SelectBox(${2:\\$sFieldName}, ${2:\\$sValue}, ${4:\\$sDefaultValue = ''}, ${4:\\$JavaChangeFunc = ''}, ${6:\\$sAdditionalParams = ''})$0"},
		{"trigger": "CPrice::Add", "contents": "${1:CPrice}::Add(${2:\\$arFields,\\$boolRecalc = false})$0"},
		{"trigger": "CPrice::DeleteByProduct", "contents": "${1:CPrice}::DeleteByProduct(${2:\\$ProductID}, ${2:\\$arExceptionIDs = array()})$0"},
		{"trigger": "CPrice::GetList", "contents": "${1:CPrice}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CPrice::OnIBlockElementDelete", "contents": "${1:CPrice}::OnIBlockElementDelete(${2:\\$ProductID})$0"},
		{"trigger": "CPrice::ReCountFromBase", "contents": "${1:CPrice}::ReCountFromBase(${2:&\\$arFields}, ${2:&\\$boolBase})$0"},
		{"trigger": "CCloudStorage::DeleteDirFilesEx", "contents": "${1:CCloudStorage}::DeleteDirFilesEx(${2:\\$path})$0"},
		{"trigger": "CCloudStorage::FindBucketByFile", "contents": "${1:CCloudStorage}::FindBucketByFile(${2:\\$file_name})$0"},
		{"trigger": "CCloudStorage::FindBucketForFile", "contents": "${1:CCloudStorage}::FindBucketForFile(${2:\\$arFile}, ${2:\\$strFileName})$0"},
		{"trigger": "CCloudStorage::FindFileURIByURN", "contents": "${1:CCloudStorage}::FindFileURIByURN(${2:\\$urn}, ${2:\\$log_descr=''})$0"},
		{"trigger": "CCloudStorage::GetAuditTypes", "contents": "${1:CCloudStorage}::GetAuditTypes()$0"},
		{"trigger": "CCloudStorage::GetServiceByID", "contents": "${1:CCloudStorage}::GetServiceByID(${2:\\$ID})$0"},
		{"trigger": "CCloudStorage::GetServiceDescription", "contents": "${1:CCloudStorage}::GetServiceDescription(${2:\\$ID})$0"},
		{"trigger": "CCloudStorage::GetServiceList", "contents": "${1:CCloudStorage}::GetServiceList()$0"},
		{"trigger": "CCloudStorage::GetServiceLocationList", "contents": "${1:CCloudStorage}::GetServiceLocationList(${2:\\$ID})$0"},
		{"trigger": "CCloudStorage::HasActiveBuckets", "contents": "${1:CCloudStorage}::HasActiveBuckets()$0"},
		{"trigger": "CCloudStorage::MoveFile", "contents": "${1:CCloudStorage}::MoveFile(${2:\\$arFile}, ${2:\\$obTargetBucket})$0"},
		{"trigger": "CCloudStorage::OnAdminListDisplay", "contents": "${1:CCloudStorage}::OnAdminListDisplay(${2:&\\$obList})$0"},
		{"trigger": "CCloudStorage::OnAfterResizeImage", "contents": "${1:CCloudStorage}::OnAfterResizeImage(${2:\\$arFile}, ${2:\\$arResizeParams}, ${4:&\\$callbackData}, ${4:&\\$cacheImageFile}, ${6:&\\$cacheImageFileTmp}, ${6:&\\$arImageSize})$0"},
		{"trigger": "CCloudStorage::OnBeforeProlog", "contents": "${1:CCloudStorage}::OnBeforeProlog()$0"},
		{"trigger": "CCloudStorage::OnBeforeResizeImage", "contents": "${1:CCloudStorage}::OnBeforeResizeImage(${2:\\$arFile}, ${2:\\$arResizeParams}, ${4:&\\$callbackData}, ${4:&\\$bNeedResize}, ${6:&\\$sourceImageFile}, ${6:&\\$cacheImageFileTmp})$0"},
		{"trigger": "CCloudStorage::OnBuildGlobalMenu", "contents": "${1:CCloudStorage}::OnBuildGlobalMenu(${2:&\\$aGlobalMenu}, ${2:&\\$aModuleMenu})$0"},
		{"trigger": "CCloudStorage::OnFileCopy", "contents": "${1:CCloudStorage}::OnFileCopy(${2:&\\$arFile}, ${2:\\$newPath = ''})$0"},
		{"trigger": "CCloudStorage::OnFileDelete", "contents": "${1:CCloudStorage}::OnFileDelete(${2:\\$arFile})$0"},
		{"trigger": "CCloudStorage::OnFileSave", "contents": "${1:CCloudStorage}::OnFileSave(${2:&\\$arFile}, ${2:\\$strFileName}, ${4:\\$strSavePath}, ${4:\\$bForceMD5 = false}, ${6:\\$bSkipExt = false})$0"},
		{"trigger": "CCloudStorage::OnGetFileSRC", "contents": "${1:CCloudStorage}::OnGetFileSRC(${2:\\$arFile})$0"},
		{"trigger": "CCloudStorage::OnMakeFilearray", "contents": "${1:CCloudStorage}::OnMakeFilearray(${2:\\$arSourceFile}, ${2:&\\$arDestination})$0"},
		{"trigger": "CCloudStorage::_init", "contents": "${1:CCloudStorage}::_init()$0"},
		{"trigger": "CCloudStorage::translit", "contents": "${1:CCloudStorage}::translit(${2:\\$file_name})$0"},
		{"trigger": "CCloudStorageBucket::Add", "contents": "${1:CCloudStorageBucket}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCloudStorageBucket::CheckFields", "contents": "${1:CCloudStorageBucket}::CheckFields(${2:&\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CCloudStorageBucket::CheckSettings", "contents": "${1:CCloudStorageBucket}::CheckSettings(${2:&\\$arSettings})$0"},
		{"trigger": "CCloudStorageBucket::CompileExtentionRule", "contents": "${1:CCloudStorageBucket}::CompileExtentionRule(${2:\\$str})$0"},
		{"trigger": "CCloudStorageBucket::CompileModuleRule", "contents": "${1:CCloudStorageBucket}::CompileModuleRule(${2:\\$str})$0"},
		{"trigger": "CCloudStorageBucket::CompileRules", "contents": "${1:CCloudStorageBucket}::CompileRules(${2:\\$arRules})$0"},
		{"trigger": "CCloudStorageBucket::CompileSizeRule", "contents": "${1:CCloudStorageBucket}::CompileSizeRule(${2:\\$str})$0"},
		{"trigger": "CCloudStorageBucket::ConvertPOST", "contents": "${1:CCloudStorageBucket}::ConvertPOST(${2:\\$arPOST})$0"},
		{"trigger": "CCloudStorageBucket::CreateBucket", "contents": "${1:CCloudStorageBucket}::CreateBucket()$0"},
		{"trigger": "CCloudStorageBucket::DecFileCounter", "contents": "${1:CCloudStorageBucket}::DecFileCounter(${2:\\$file_size = 0})$0"},
		{"trigger": "CCloudStorageBucket::Delete", "contents": "${1:CCloudStorageBucket}::Delete()$0"},
		{"trigger": "CCloudStorageBucket::DeleteFile", "contents": "${1:CCloudStorageBucket}::DeleteFile(${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageBucket::DownloadToFile", "contents": "${1:CCloudStorageBucket}::DownloadToFile(${2:\\$arFile}, ${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageBucket::FileCopy", "contents": "${1:CCloudStorageBucket}::FileCopy(${2:\\$arFile}, ${2:\\$filePath}, ${4:\\$bRecursive = false})$0"},
		{"trigger": "CCloudStorageBucket::FileExists", "contents": "${1:CCloudStorageBucket}::FileExists(${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageBucket::GetAllBuckets", "contents": "${1:CCloudStorageBucket}::GetAllBuckets()$0"},
		{"trigger": "CCloudStorageBucket::GetFileSRC", "contents": "${1:CCloudStorageBucket}::GetFileSRC(${2:\\$arFile})$0"},
		{"trigger": "CCloudStorageBucket::GetFileSize", "contents": "${1:CCloudStorageBucket}::GetFileSize(${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageBucket::GetList", "contents": "${1:CCloudStorageBucket}::GetList(${2:\\$arOrder=false}, ${2:\\$arFilter=false}, ${4:\\$arSelect=false})$0"},
		{"trigger": "CCloudStorageBucket::IncFileCounter", "contents": "${1:CCloudStorageBucket}::IncFileCounter(${2:\\$file_size = 0})$0"},
		{"trigger": "CCloudStorageBucket::Init", "contents": "${1:CCloudStorageBucket}::Init()$0"},
		{"trigger": "CCloudStorageBucket::ListFiles", "contents": "${1:CCloudStorageBucket}::ListFiles(${2:\\$filePath = '/'}, ${2:\\$bRecursive = false})$0"},
		{"trigger": "CCloudStorageBucket::ParseSize", "contents": "${1:CCloudStorageBucket}::ParseSize(${2:\\$str})$0"},
		{"trigger": "CCloudStorageBucket::SaveFile", "contents": "${1:CCloudStorageBucket}::SaveFile(${2:\\$filePath}, ${2:\\$arFile})$0"},
		{"trigger": "CCloudStorageBucket::Update", "contents": "${1:CCloudStorageBucket}::Update(${2:\\$arFields})$0"},
		{"trigger": "CCloudStorageBucket::__construct", "contents": "${1:CCloudStorageBucket}::__construct(${2:\\$ID})$0"},
		{"trigger": "CCloudStorageBucket::__get", "contents": "${1:CCloudStorageBucket}::__get(${2:\\$name})$0"},
		{"trigger": "CCloudStorageBucket::_init", "contents": "${1:CCloudStorageBucket}::_init()$0"},
		{"trigger": "CCloudStorageBucket::getBucketarray", "contents": "${1:CCloudStorageBucket}::getBucketarray()$0"},
		{"trigger": "CCloudStorageBucket::getService", "contents": "${1:CCloudStorageBucket}::getService()$0"},
		{"trigger": "CCloudStorageService_AmazonS3::CheckSettings", "contents": "${1:CCloudStorageService_AmazonS3}::CheckSettings(${2:\\$arBucket}, ${2:&\\$arSettings})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::CompleteMultipartUpload", "contents": "${1:CCloudStorageService_AmazonS3}::CompleteMultipartUpload(${2:\\$arBucket}, ${2:&\\$NS})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::CreateBucket", "contents": "${1:CCloudStorageService_AmazonS3}::CreateBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::DeleteBucket", "contents": "${1:CCloudStorageService_AmazonS3}::DeleteBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::DeleteFile", "contents": "${1:CCloudStorageService_AmazonS3}::DeleteFile(${2:\\$arBucket}, ${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::DownloadToFile", "contents": "${1:CCloudStorageService_AmazonS3}::DownloadToFile(${2:\\$arBucket}, ${2:\\$arFile}, ${4:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::FileCopy", "contents": "${1:CCloudStorageService_AmazonS3}::FileCopy(${2:\\$arBucket}, ${2:\\$arFile}, ${4:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::FileExists", "contents": "${1:CCloudStorageService_AmazonS3}::FileExists(${2:\\$arBucket}, ${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::GetFileSRC", "contents": "${1:CCloudStorageService_AmazonS3}::GetFileSRC(${2:\\$arBucket}, ${2:\\$arFile})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::GetID", "contents": "${1:CCloudStorageService_AmazonS3}::GetID()$0"},
		{"trigger": "CCloudStorageService_AmazonS3::GetLastRequestStatus", "contents": "${1:CCloudStorageService_AmazonS3}::GetLastRequestStatus()$0"},
		{"trigger": "CCloudStorageService_AmazonS3::GetLocationList", "contents": "${1:CCloudStorageService_AmazonS3}::GetLocationList()$0"},
		{"trigger": "CCloudStorageService_AmazonS3::GetMinUploadPartSize", "contents": "${1:CCloudStorageService_AmazonS3}::GetMinUploadPartSize()$0"},
		{"trigger": "CCloudStorageService_AmazonS3::GetName", "contents": "${1:CCloudStorageService_AmazonS3}::GetName()$0"},
		{"trigger": "CCloudStorageService_AmazonS3::GetObject", "contents": "${1:CCloudStorageService_AmazonS3}::GetObject()$0"},
		{"trigger": "CCloudStorageService_AmazonS3::GetSettingsHTML", "contents": "${1:CCloudStorageService_AmazonS3}::GetSettingsHTML(${2:\\$arBucket}, ${2:\\$bServiceSet}, ${4:\\$cur_SERVICE_ID}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::InitiateMultipartUpload", "contents": "${1:CCloudStorageService_AmazonS3}::InitiateMultipartUpload(${2:\\$arBucket}, ${2:&\\$NS}, ${4:\\$filePath}, ${4:\\$fileSize}, ${6:\\$ContentType})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::IsEmptyBucket", "contents": "${1:CCloudStorageService_AmazonS3}::IsEmptyBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::ListFiles", "contents": "${1:CCloudStorageService_AmazonS3}::ListFiles(${2:\\$arBucket}, ${2:\\$filePath}, ${4:\\$bRecursive = false})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::SaveFile", "contents": "${1:CCloudStorageService_AmazonS3}::SaveFile(${2:\\$arBucket}, ${2:\\$filePath}, ${4:\\$arFile})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::SendRequest", "contents": "${1:CCloudStorageService_AmazonS3}::SendRequest(${2:\\$access_key}, ${2:\\$secret_key}, ${4:\\$verb}, ${4:\\$bucket}, ${6:\\$file_name='/'}, ${6:\\$params=''}, ${8:\\$content=''}, ${8:\\$additional_headers=array()})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::UploadPart", "contents": "${1:CCloudStorageService_AmazonS3}::UploadPart(${2:\\$arBucket}, ${2:&\\$NS}, ${4:\\$data})$0"},
		{"trigger": "CCloudStorageService_AmazonS3::hmacsha1", "contents": "${1:CCloudStorageService_AmazonS3}::hmacsha1(${2:\\$data}, ${2:\\$key})$0"},
		{"trigger": "CCloudStorageService_ClodoRU::CheckSettings", "contents": "${1:CCloudStorageService_ClodoRU}::CheckSettings(${2:\\$arBucket}, ${2:&\\$arSettings})$0"},
		{"trigger": "CCloudStorageService_ClodoRU::GetID", "contents": "${1:CCloudStorageService_ClodoRU}::GetID()$0"},
		{"trigger": "CCloudStorageService_ClodoRU::GetName", "contents": "${1:CCloudStorageService_ClodoRU}::GetName()$0"},
		{"trigger": "CCloudStorageService_ClodoRU::GetObject", "contents": "${1:CCloudStorageService_ClodoRU}::GetObject()$0"},
		{"trigger": "CCloudStorageService_ClodoRU::GetSettingsHTML", "contents": "${1:CCloudStorageService_ClodoRU}::GetSettingsHTML(${2:\\$arBucket}, ${2:\\$bServiceSet}, ${4:\\$cur_SERVICE_ID}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::CheckSettings", "contents": "${1:CCloudStorageService_GoogleStorage}::CheckSettings(${2:\\$arBucket}, ${2:&\\$arSettings})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::CompleteMultipartUpload", "contents": "${1:CCloudStorageService_GoogleStorage}::CompleteMultipartUpload(${2:\\$arBucket}, ${2:&\\$NS})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::CreateBucket", "contents": "${1:CCloudStorageService_GoogleStorage}::CreateBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::DeleteBucket", "contents": "${1:CCloudStorageService_GoogleStorage}::DeleteBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::DeleteFile", "contents": "${1:CCloudStorageService_GoogleStorage}::DeleteFile(${2:\\$arBucket}, ${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::DownloadToFile", "contents": "${1:CCloudStorageService_GoogleStorage}::DownloadToFile(${2:\\$arBucket}, ${2:\\$arFile}, ${4:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::FileCopy", "contents": "${1:CCloudStorageService_GoogleStorage}::FileCopy(${2:\\$arBucket}, ${2:\\$arFile}, ${4:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::FileExists", "contents": "${1:CCloudStorageService_GoogleStorage}::FileExists(${2:\\$arBucket}, ${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::GetFileSRC", "contents": "${1:CCloudStorageService_GoogleStorage}::GetFileSRC(${2:\\$arBucket}, ${2:\\$arFile})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::GetID", "contents": "${1:CCloudStorageService_GoogleStorage}::GetID()$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::GetLastRequestStatus", "contents": "${1:CCloudStorageService_GoogleStorage}::GetLastRequestStatus()$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::GetLocationList", "contents": "${1:CCloudStorageService_GoogleStorage}::GetLocationList()$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::GetMinUploadPartSize", "contents": "${1:CCloudStorageService_GoogleStorage}::GetMinUploadPartSize()$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::GetName", "contents": "${1:CCloudStorageService_GoogleStorage}::GetName()$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::GetObject", "contents": "${1:CCloudStorageService_GoogleStorage}::GetObject()$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::GetSettingsHTML", "contents": "${1:CCloudStorageService_GoogleStorage}::GetSettingsHTML(${2:\\$arBucket}, ${2:\\$bServiceSet}, ${4:\\$cur_SERVICE_ID}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::InitiateMultipartUpload", "contents": "${1:CCloudStorageService_GoogleStorage}::InitiateMultipartUpload(${2:\\$arBucket}, ${2:&\\$NS}, ${4:\\$filePath}, ${4:\\$fileSize}, ${6:\\$ContentType})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::IsEmptyBucket", "contents": "${1:CCloudStorageService_GoogleStorage}::IsEmptyBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::ListFiles", "contents": "${1:CCloudStorageService_GoogleStorage}::ListFiles(${2:\\$arBucket}, ${2:\\$filePath}, ${4:\\$bRecursive = false})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::SaveFile", "contents": "${1:CCloudStorageService_GoogleStorage}::SaveFile(${2:\\$arBucket}, ${2:\\$filePath}, ${4:\\$arFile})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::SendRequest", "contents": "${1:CCloudStorageService_GoogleStorage}::SendRequest(${2:\\$access_key}, ${2:\\$secret_key}, ${4:\\$verb}, ${4:\\$bucket}, ${6:\\$file_name='/'}, ${6:\\$params=''}, ${8:\\$content=''}, ${8:\\$additional_headers=array()})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::UploadPart", "contents": "${1:CCloudStorageService_GoogleStorage}::UploadPart(${2:\\$arBucket}, ${2:&\\$NS}, ${4:\\$data})$0"},
		{"trigger": "CCloudStorageService_GoogleStorage::hmacsha1", "contents": "${1:CCloudStorageService_GoogleStorage}::hmacsha1(${2:\\$data}, ${2:\\$key})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::CheckSettings", "contents": "${1:CCloudStorageService_OpenStackStorage}::CheckSettings(${2:\\$arBucket}, ${2:&\\$arSettings})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::CompleteMultipartUpload", "contents": "${1:CCloudStorageService_OpenStackStorage}::CompleteMultipartUpload(${2:\\$arBucket}, ${2:&\\$NS})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::CreateBucket", "contents": "${1:CCloudStorageService_OpenStackStorage}::CreateBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::DeleteBucket", "contents": "${1:CCloudStorageService_OpenStackStorage}::DeleteBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::DeleteFile", "contents": "${1:CCloudStorageService_OpenStackStorage}::DeleteFile(${2:\\$arBucket}, ${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::DownloadToFile", "contents": "${1:CCloudStorageService_OpenStackStorage}::DownloadToFile(${2:\\$arBucket}, ${2:\\$arFile}, ${4:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::FileCopy", "contents": "${1:CCloudStorageService_OpenStackStorage}::FileCopy(${2:\\$arBucket}, ${2:\\$arFile}, ${4:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::FileExists", "contents": "${1:CCloudStorageService_OpenStackStorage}::FileExists(${2:\\$arBucket}, ${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::GetFileSRC", "contents": "${1:CCloudStorageService_OpenStackStorage}::GetFileSRC(${2:\\$arBucket}, ${2:\\$arFile})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::GetID", "contents": "${1:CCloudStorageService_OpenStackStorage}::GetID()$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::GetLastRequestStatus", "contents": "${1:CCloudStorageService_OpenStackStorage}::GetLastRequestStatus()$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::GetLocationList", "contents": "${1:CCloudStorageService_OpenStackStorage}::GetLocationList()$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::GetMinUploadPartSize", "contents": "${1:CCloudStorageService_OpenStackStorage}::GetMinUploadPartSize()$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::GetName", "contents": "${1:CCloudStorageService_OpenStackStorage}::GetName()$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::GetObject", "contents": "${1:CCloudStorageService_OpenStackStorage}::GetObject()$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::GetSettingsHTML", "contents": "${1:CCloudStorageService_OpenStackStorage}::GetSettingsHTML(${2:\\$arBucket}, ${2:\\$bServiceSet}, ${4:\\$cur_SERVICE_ID}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::InitiateMultipartUpload", "contents": "${1:CCloudStorageService_OpenStackStorage}::InitiateMultipartUpload(${2:\\$arBucket}, ${2:&\\$NS}, ${4:\\$filePath}, ${4:\\$fileSize}, ${6:\\$ContentType})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::IsEmptyBucket", "contents": "${1:CCloudStorageService_OpenStackStorage}::IsEmptyBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::ListFiles", "contents": "${1:CCloudStorageService_OpenStackStorage}::ListFiles(${2:\\$arBucket}, ${2:\\$filePath}, ${4:\\$bRecursive = false})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::SaveFile", "contents": "${1:CCloudStorageService_OpenStackStorage}::SaveFile(${2:\\$arBucket}, ${2:\\$filePath}, ${4:\\$arFile})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::SendRequest", "contents": "${1:CCloudStorageService_OpenStackStorage}::SendRequest(${2:\\$settings}, ${2:\\$verb}, ${4:\\$bucket}, ${4:\\$file_name=''}, ${6:\\$params=''}, ${6:\\$content=false}, ${8:\\$additional_headers=array()})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::UploadPart", "contents": "${1:CCloudStorageService_OpenStackStorage}::UploadPart(${2:\\$arBucket}, ${2:&\\$NS}, ${4:\\$data})$0"},
		{"trigger": "CCloudStorageService_OpenStackStorage::_GetToken", "contents": "${1:CCloudStorageService_OpenStackStorage}::_GetToken(${2:\\$host}, ${2:\\$user}, ${4:\\$key})$0"},
		{"trigger": "CCloudStorageService_RackSpaceCloudFiles::CreateBucket", "contents": "${1:CCloudStorageService_RackSpaceCloudFiles}::CreateBucket(${2:\\$arBucket})$0"},
		{"trigger": "CCloudStorageService_RackSpaceCloudFiles::GetFileSRC", "contents": "${1:CCloudStorageService_RackSpaceCloudFiles}::GetFileSRC(${2:\\$arBucket}, ${2:\\$arFile})$0"},
		{"trigger": "CCloudStorageService_RackSpaceCloudFiles::GetID", "contents": "${1:CCloudStorageService_RackSpaceCloudFiles}::GetID()$0"},
		{"trigger": "CCloudStorageService_RackSpaceCloudFiles::GetName", "contents": "${1:CCloudStorageService_RackSpaceCloudFiles}::GetName()$0"},
		{"trigger": "CCloudStorageService_RackSpaceCloudFiles::GetObject", "contents": "${1:CCloudStorageService_RackSpaceCloudFiles}::GetObject()$0"},
		{"trigger": "CCloudStorageService_RackSpaceCloudFiles::SendCDNRequest", "contents": "${1:CCloudStorageService_RackSpaceCloudFiles}::SendCDNRequest(${2:\\$settings}, ${2:\\$verb}, ${4:\\$bucket}, ${4:\\$file_name=''}, ${6:\\$params=''}, ${6:\\$content=false}, ${8:\\$additional_headers=array()})$0"},
		{"trigger": "CCloudStorageService_RackSpaceCloudFiles::_GetToken", "contents": "${1:CCloudStorageService_RackSpaceCloudFiles}::_GetToken(${2:\\$host}, ${2:\\$user}, ${4:\\$key})$0"},
		{"trigger": "CCloudStorageUpload::Delete", "contents": "${1:CCloudStorageUpload}::Delete()$0"},
		{"trigger": "CCloudStorageUpload::DeleteOld", "contents": "${1:CCloudStorageUpload}::DeleteOld()$0"},
		{"trigger": "CCloudStorageUpload::Finish", "contents": "${1:CCloudStorageUpload}::Finish()$0"},
		{"trigger": "CCloudStorageUpload::Getarray", "contents": "${1:CCloudStorageUpload}::Getarray()$0"},
		{"trigger": "CCloudStorageUpload::GetPartCount", "contents": "${1:CCloudStorageUpload}::GetPartCount()$0"},
		{"trigger": "CCloudStorageUpload::GetPos", "contents": "${1:CCloudStorageUpload}::GetPos()$0"},
		{"trigger": "CCloudStorageUpload::Next", "contents": "${1:CCloudStorageUpload}::Next(${2:\\$data})$0"},
		{"trigger": "CCloudStorageUpload::Start", "contents": "${1:CCloudStorageUpload}::Start(${2:\\$bucket_id}, ${2:\\$fileSize}, ${4:\\$ContentType = 'binary/octet-stream'})$0"},
		{"trigger": "CCloudStorageUpload::__construct", "contents": "${1:CCloudStorageUpload}::__construct(${2:\\$filePath})$0"},
		{"trigger": "CCloudStorageUpload::getPartSize", "contents": "${1:CCloudStorageUpload}::getPartSize()$0"},
		{"trigger": "CCloudStorageUpload::hasRetries", "contents": "${1:CCloudStorageUpload}::hasRetries()$0"},
		{"trigger": "CCloudStorageUpload::isStarted", "contents": "${1:CCloudStorageUpload}::isStarted()$0"},
		{"trigger": "CCloudUtil::URLEncode", "contents": "${1:CCloudUtil}::URLEncode(${2:\\$str}, ${2:\\$charset})$0"},
		{"trigger": "CClusterDBNode::Add", "contents": "${1:CClusterDBNode}::Add(${2:\\$arFields})$0"},
		{"trigger": "CClusterDBNode::BringOnline", "contents": "${1:CClusterDBNode}::BringOnline()$0"},
		{"trigger": "CClusterDBNode::CheckFields", "contents": "${1:CClusterDBNode}::CheckFields(${2:&\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CClusterDBNode::Delete", "contents": "${1:CClusterDBNode}::Delete(${2:\\$ID})$0"},
		{"trigger": "CClusterDBNode::GetByID", "contents": "${1:CClusterDBNode}::GetByID(${2:\\$node_id}, ${2:\\$arVirtNode=false})$0"},
		{"trigger": "CClusterDBNode::GetList", "contents": "${1:CClusterDBNode}::GetList(${2:\\$arOrder=false}, ${2:\\$arFilter=false}, ${4:\\$arSelect=false})$0"},
		{"trigger": "CClusterDBNode::GetListForModuleInstall", "contents": "${1:CClusterDBNode}::GetListForModuleInstall()$0"},
		{"trigger": "CClusterDBNode::GetModules", "contents": "${1:CClusterDBNode}::GetModules(${2:\\$node_id})$0"},
		{"trigger": "CClusterDBNode::GetUpTime", "contents": "${1:CClusterDBNode}::GetUpTime(${2:\\$node_id})$0"},
		{"trigger": "CClusterDBNode::SetOffline", "contents": "${1:CClusterDBNode}::SetOffline(${2:\\$node_id})$0"},
		{"trigger": "CClusterDBNode::SetOnline", "contents": "${1:CClusterDBNode}::SetOnline(${2:\\$node_id})$0"},
		{"trigger": "CClusterDBNode::Update", "contents": "${1:CClusterDBNode}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CClusterDBNodeCheck::GetServerVariable", "contents": "${1:CClusterDBNodeCheck}::GetServerVariable(${2:$DB}, ${2:\\$var_name})$0"},
		{"trigger": "CClusterDBNodeCheck::GetServerVariables", "contents": "${1:CClusterDBNodeCheck}::GetServerVariables(${2:$DB}, ${2:\\$arVariables}, ${4:$DB_mask})$0"},
		{"trigger": "CClusterDBNodeCheck::MainNode", "contents": "${1:CClusterDBNodeCheck}::MainNode()$0"},
		{"trigger": "CClusterDBNodeCheck::MainNodeCommon", "contents": "${1:CClusterDBNodeCheck}::MainNodeCommon(${2:\\$arMasterNode})$0"},
		{"trigger": "CClusterDBNodeCheck::MainNodeForReplication", "contents": "${1:CClusterDBNodeCheck}::MainNodeForReplication(${2:\\$arMasterNode})$0"},
		{"trigger": "CClusterDBNodeCheck::MainNodeForSlave", "contents": "${1:CClusterDBNodeCheck}::MainNodeForSlave()$0"},
		{"trigger": "CClusterDBNodeCheck::SlaveNodeCommon", "contents": "${1:CClusterDBNodeCheck}::SlaveNodeCommon(${2:\\$nodeDB})$0"},
		{"trigger": "CClusterDBNodeCheck::SlaveNodeConnection", "contents": "${1:CClusterDBNodeCheck}::SlaveNodeConnection(${2:$DB_host}, ${2:$DB_name}, ${4:$DB_login}, ${4:$DB_password}, ${6:\\$master_host=false}, ${6:\\$master_port=false}, ${8:\\$master_id = 1})$0"},
		{"trigger": "CClusterDBNodeCheck::SlaveNodeForMaster", "contents": "${1:CClusterDBNodeCheck}::SlaveNodeForMaster(${2:\\$nodeDB})$0"},
		{"trigger": "CClusterDBNodeCheck::SlaveNodeForReplication", "contents": "${1:CClusterDBNodeCheck}::SlaveNodeForReplication(${2:\\$nodeDB})$0"},
		{"trigger": "CClusterDBNodeCheck::SlaveNodeIsReplicationRunning", "contents": "${1:CClusterDBNodeCheck}::SlaveNodeIsReplicationRunning(${2:$DB_host}, ${2:$DB_name}, ${4:$DB_login}, ${4:$DB_password}, ${6:\\$master_host=false}, ${6:\\$master_port=false})$0"},
		{"trigger": "CClusterGroup::Add", "contents": "${1:CClusterGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CClusterGroup::CheckFields", "contents": "${1:CClusterGroup}::CheckFields(${2:&\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CClusterGroup::Delete", "contents": "${1:CClusterGroup}::Delete(${2:\\$ID})$0"},
		{"trigger": "CClusterGroup::GetarrayByID", "contents": "${1:CClusterGroup}::GetarrayByID(${2:\\$ID})$0"},
		{"trigger": "CClusterGroup::GetList", "contents": "${1:CClusterGroup}::GetList(${2:\\$arOrder=false}, ${2:\\$arFilter=false}, ${4:\\$arSelect=false})$0"},
		{"trigger": "CClusterGroup::Update", "contents": "${1:CClusterGroup}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CClusterMemcache::Add", "contents": "${1:CClusterMemcache}::Add(${2:\\$arFields})$0"},
		{"trigger": "CClusterMemcache::CheckFields", "contents": "${1:CClusterMemcache}::CheckFields(${2:&\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CClusterMemcache::Delete", "contents": "${1:CClusterMemcache}::Delete(${2:\\$ID})$0"},
		{"trigger": "CClusterMemcache::GetByID", "contents": "${1:CClusterMemcache}::GetByID(${2:\\$id})$0"},
		{"trigger": "CClusterMemcache::GetList", "contents": "${1:CClusterMemcache}::GetList()$0"},
		{"trigger": "CClusterMemcache::GetStatus", "contents": "${1:CClusterMemcache}::GetStatus(${2:\\$id})$0"},
		{"trigger": "CClusterMemcache::LoadConfig", "contents": "${1:CClusterMemcache}::LoadConfig()$0"},
		{"trigger": "CClusterMemcache::Pause", "contents": "${1:CClusterMemcache}::Pause(${2:\\$ID})$0"},
		{"trigger": "CClusterMemcache::Resume", "contents": "${1:CClusterMemcache}::Resume(${2:\\$ID})$0"},
		{"trigger": "CClusterMemcache::SaveConfig", "contents": "${1:CClusterMemcache}::SaveConfig(${2:\\$arServerList})$0"},
		{"trigger": "CClusterMemcache::Update", "contents": "${1:CClusterMemcache}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CClusterQueue::Add", "contents": "${1:CClusterQueue}::Add(${2:\\$group_id}, ${2:\\$command}, ${4:\\$param1}, ${4:\\$param2}, ${6:\\$param3})$0"},
		{"trigger": "CClusterQueue::QuoteParam", "contents": "${1:CClusterQueue}::QuoteParam(${2:\\$str})$0"},
		{"trigger": "CClusterQueue::Run", "contents": "${1:CClusterQueue}::Run()$0"},
		{"trigger": "CClusterQueue::UnQuoteParam", "contents": "${1:CClusterQueue}::UnQuoteParam(${2:\\$str})$0"},
		{"trigger": "CClusterSlave::AdjustServerID", "contents": "${1:CClusterSlave}::AdjustServerID(${2:\\$arNode}, ${2:\\$nodeDB})$0"},
		{"trigger": "CClusterSlave::GetList", "contents": "${1:CClusterSlave}::GetList()$0"},
		{"trigger": "CClusterSlave::GetStatus", "contents": "${1:CClusterSlave}::GetStatus(${2:\\$node_id}, ${2:\\$bSlaveStatus = true}, ${4:\\$bGlobalStatus = true}, ${4:\\$bVariables = true})$0"},
		{"trigger": "CClusterSlave::Pause", "contents": "${1:CClusterSlave}::Pause(${2:\\$node_id})$0"},
		{"trigger": "CClusterSlave::Resume", "contents": "${1:CClusterSlave}::Resume(${2:\\$node_id})$0"},
		{"trigger": "CClusterSlave::SetOnLine", "contents": "${1:CClusterSlave}::SetOnLine(${2:\\$node_id}, ${2:\\$master_id})$0"},
		{"trigger": "CClusterSlave::SkipSQLError", "contents": "${1:CClusterSlave}::SkipSQLError(${2:\\$node_id})$0"},
		{"trigger": "CClusterSlave::Stop", "contents": "${1:CClusterSlave}::Stop(${2:\\$node_id})$0"},
		{"trigger": "CClusterWebnode::Add", "contents": "${1:CClusterWebnode}::Add(${2:\\$arFields})$0"},
		{"trigger": "CClusterWebnode::CheckFields", "contents": "${1:CClusterWebnode}::CheckFields(${2:&\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CClusterWebnode::Delete", "contents": "${1:CClusterWebnode}::Delete(${2:\\$ID})$0"},
		{"trigger": "CClusterWebnode::GetList", "contents": "${1:CClusterWebnode}::GetList(${2:\\$arOrder=false}, ${2:\\$arFilter=false}, ${4:\\$arSelect=false})$0"},
		{"trigger": "CClusterWebnode::GetStatus", "contents": "${1:CClusterWebnode}::GetStatus(${2:\\$host}, ${2:\\$port}, ${4:\\$url})$0"},
		{"trigger": "CClusterWebnode::ParseDateTime", "contents": "${1:CClusterWebnode}::ParseDateTime(${2:\\$str})$0"},
		{"trigger": "CClusterWebnode::Update", "contents": "${1:CClusterWebnode}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CPHPCacheMemcacheCluster::CPHPCacheMemcache", "contents": "${1:CPHPCacheMemcacheCluster}::CPHPCacheMemcache()$0"},
		{"trigger": "CPHPCacheMemcacheCluster::IsAvailable", "contents": "${1:CPHPCacheMemcacheCluster}::IsAvailable()$0"},
		{"trigger": "CPHPCacheMemcacheCluster::IsCacheExpired", "contents": "${1:CPHPCacheMemcacheCluster}::IsCacheExpired(${2:\\$path})$0"},
		{"trigger": "CPHPCacheMemcacheCluster::LoadConfig", "contents": "${1:CPHPCacheMemcacheCluster}::LoadConfig()$0"},
		{"trigger": "CPHPCacheMemcacheCluster::QueueRun", "contents": "${1:CPHPCacheMemcacheCluster}::QueueRun(${2:\\$param1}, ${2:\\$param2}, ${4:\\$param3})$0"},
		{"trigger": "CPHPCacheMemcacheCluster::__construct", "contents": "${1:CPHPCacheMemcacheCluster}::__construct()$0"},
		{"trigger": "CPHPCacheMemcacheCluster::clean", "contents": "${1:CPHPCacheMemcacheCluster}::clean(${2:\\$basedir}, ${2:\\$initdir = false}, ${4:\\$filename = false})$0"},
		{"trigger": "CPHPCacheMemcacheCluster::read", "contents": "${1:CPHPCacheMemcacheCluster}::read(${2:&\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPHPCacheMemcacheCluster::write", "contents": "${1:CPHPCacheMemcacheCluster}::write(${2:\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CCompress::CheckCanGzip", "contents": "${1:CCompress}::CheckCanGzip()$0"},
		{"trigger": "CCompress::OnPageStart", "contents": "${1:CCompress}::OnPageStart()$0"},
		{"trigger": "CControllerAgent::CleanUp", "contents": "${1:CControllerAgent}::CleanUp()$0"},
		{"trigger": "CControllerAgent::_Lock", "contents": "${1:CControllerAgent}::_Lock(${2:\\$uniq})$0"},
		{"trigger": "CControllerAgent::_OrderBy", "contents": "${1:CControllerAgent}::_OrderBy(${2:\\$arOrder}, ${2:\\$arFields}, ${4:\\$obUserFieldsSql = null})$0"},
		{"trigger": "CControllerAgent::_UnLock", "contents": "${1:CControllerAgent}::_UnLock(${2:\\$uniq})$0"},
		{"trigger": "CControllerCounter::Add", "contents": "${1:CControllerCounter}::Add(${2:\\$arFields})$0"},
		{"trigger": "CControllerCounter::CheckFields", "contents": "${1:CControllerCounter}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CControllerCounter::Delete", "contents": "${1:CControllerCounter}::Delete(${2:\\$ID})$0"},
		{"trigger": "CControllerCounter::FormatValue", "contents": "${1:CControllerCounter}::FormatValue(${2:\\$value}, ${2:\\$format})$0"},
		{"trigger": "CControllerCounter::GetarrayByID", "contents": "${1:CControllerCounter}::GetarrayByID(${2:\\$ID})$0"},
		{"trigger": "CControllerCounter::GetFormatarray", "contents": "${1:CControllerCounter}::GetFormatarray()$0"},
		{"trigger": "CControllerCounter::GetList", "contents": "${1:CControllerCounter}::GetList(${2:\\$arOrder=false}, ${2:\\$arFilter=false})$0"},
		{"trigger": "CControllerCounter::GetMemberCounters", "contents": "${1:CControllerCounter}::GetMemberCounters(${2:\\$CONTROLLER_MEMBER_ID})$0"},
		{"trigger": "CControllerCounter::GetMemberValues", "contents": "${1:CControllerCounter}::GetMemberValues(${2:\\$CONTROLLER_MEMBER_ID})$0"},
		{"trigger": "CControllerCounter::GetTypearray", "contents": "${1:CControllerCounter}::GetTypearray()$0"},
		{"trigger": "CControllerCounter::GetTypeColumn", "contents": "${1:CControllerCounter}::GetTypeColumn(${2:\\$TYPE})$0"},
		{"trigger": "CControllerCounter::GetTypeUserType", "contents": "${1:CControllerCounter}::GetTypeUserType(${2:\\$TYPE})$0"},
		{"trigger": "CControllerCounter::SetGroupCounters", "contents": "${1:CControllerCounter}::SetGroupCounters(${2:\\$CONTROLLER_GROUP_ID}, ${2:\\$arCounters})$0"},
		{"trigger": "CControllerCounter::Update", "contents": "${1:CControllerCounter}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CControllerCounter::UpdateGroups", "contents": "${1:CControllerCounter}::UpdateGroups(${2:\\$ID}, ${2:\\$arGroups})$0"},
		{"trigger": "CControllerCounter::UpdateMemberValues", "contents": "${1:CControllerCounter}::UpdateMemberValues(${2:\\$CONTROLLER_MEMBER_ID}, ${2:\\$arValues})$0"},
		{"trigger": "CControllerCounterResult::CControllerCounterResult", "contents": "${1:CControllerCounterResult}::CControllerCounterResult(${2:\\$res})$0"},
		{"trigger": "CControllerCounterResult::Fetch", "contents": "${1:CControllerCounterResult}::Fetch()$0"},
		{"trigger": "CControllerGroup::Add", "contents": "${1:CControllerGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CControllerGroup::CheckDefaultUpdate", "contents": "${1:CControllerGroup}::CheckDefaultUpdate()$0"},
		{"trigger": "CControllerGroup::CheckFields", "contents": "${1:CControllerGroup}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CControllerGroup::Delete", "contents": "${1:CControllerGroup}::Delete(${2:\\$ID})$0"},
		{"trigger": "CControllerGroup::GetByID", "contents": "${1:CControllerGroup}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CControllerGroup::GetGroupSettings", "contents": "${1:CControllerGroup}::GetGroupSettings(${2:\\$group_id})$0"},
		{"trigger": "CControllerGroup::GetList", "contents": "${1:CControllerGroup}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CControllerGroup::RunCommand", "contents": "${1:CControllerGroup}::RunCommand(${2:\\$group_id}, ${2:\\$php_script}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CControllerGroup::SetGroupSettings", "contents": "${1:CControllerGroup}::SetGroupSettings(${2:\\$group_id})$0"},
		{"trigger": "CControllerGroup::SiteUpdate", "contents": "${1:CControllerGroup}::SiteUpdate(${2:\\$group_id})$0"},
		{"trigger": "CControllerGroup::Update", "contents": "${1:CControllerGroup}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CControllerGroup::UpdateCounters", "contents": "${1:CControllerGroup}::UpdateCounters(${2:\\$group_id})$0"},
		{"trigger": "CControllerGroup::__CounterUpdateAgentPeriod", "contents": "${1:CControllerGroup}::__CounterUpdateAgentPeriod(${2:\\$group_id}, ${2:\\$time})$0"},
		{"trigger": "CControllerGroup::__UpdateAgentPeriod", "contents": "${1:CControllerGroup}::__UpdateAgentPeriod(${2:\\$group_id}, ${2:\\$time})$0"},
		{"trigger": "CControllerGroup::__UpdateCountersAgent", "contents": "${1:CControllerGroup}::__UpdateCountersAgent(${2:\\$group_id})$0"},
		{"trigger": "CControllerGroup::__UpdateSettingsAgent", "contents": "${1:CControllerGroup}::__UpdateSettingsAgent(${2:\\$group_id})$0"},
		{"trigger": "CControllerGroupSettings::GenerateInput", "contents": "${1:CControllerGroupSettings}::GenerateInput(${2:\\$id}, ${2:\\$arInfo}, ${4:\\$curVal=false}, ${4:\\$context='default'})$0"},
		{"trigger": "CControllerGroupSettings::GeneratePHPInstall", "contents": "${1:CControllerGroupSettings}::GeneratePHPInstall(${2:\\$arValues})$0"},
		{"trigger": "CControllerGroupSettings::Get3rdPartyOptions", "contents": "${1:CControllerGroupSettings}::Get3rdPartyOptions()$0"},
		{"trigger": "CControllerGroupSettings::GetData", "contents": "${1:CControllerGroupSettings}::GetData()$0"},
		{"trigger": "CControllerGroupSettings::GetModules", "contents": "${1:CControllerGroupSettings}::GetModules()$0"},
		{"trigger": "CControllerGroupSettings::SetGroupSettings", "contents": "${1:CControllerGroupSettings}::SetGroupSettings()$0"},
		{"trigger": "CControllerGroupSettings::__PHPToString", "contents": "${1:CControllerGroupSettings}::__PHPToString(${2:\\$arData})$0"},
		{"trigger": "CControllerGroupSettings::_cmp", "contents": "${1:CControllerGroupSettings}::_cmp(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CControllerLog::Add", "contents": "${1:CControllerLog}::Add(${2:\\$arFields})$0"},
		{"trigger": "CControllerLog::CheckFields", "contents": "${1:CControllerLog}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CControllerLog::Delete", "contents": "${1:CControllerLog}::Delete(${2:\\$ID})$0"},
		{"trigger": "CControllerLog::GetByID", "contents": "${1:CControllerLog}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CControllerLog::GetList", "contents": "${1:CControllerLog}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CControllerLog::GetNamearray", "contents": "${1:CControllerLog}::GetNamearray()$0"},
		{"trigger": "CControllerLog::Update", "contents": "${1:CControllerLog}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CControllerMember::Add", "contents": "${1:CControllerMember}::Add(${2:\\$arFields})$0"},
		{"trigger": "CControllerMember::AddCommand", "contents": "${1:CControllerMember}::AddCommand(${2:\\$member_guid}, ${2:\\$command}, ${4:\\$arAddParams = array()}, ${4:\\$task_id = false})$0"},
		{"trigger": "CControllerMember::CheckFields", "contents": "${1:CControllerMember}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CControllerMember::CheckMember", "contents": "${1:CControllerMember}::CheckMember(${2:\\$member_id}, ${2:\\$member_url = false})$0"},
		{"trigger": "CControllerMember::CheckUserAuth", "contents": "${1:CControllerMember}::CheckUserAuth(${2:\\$member_id}, ${2:\\$login}, ${4:\\$password}, ${4:\\$arRemGroups = false})$0"},
		{"trigger": "CControllerMember::CloseMember", "contents": "${1:CControllerMember}::CloseMember(${2:\\$member_id}, ${2:\\$bClose = true}, ${4:\\$task_id = false})$0"},
		{"trigger": "CControllerMember::Delete", "contents": "${1:CControllerMember}::Delete(${2:\\$ID})$0"},
		{"trigger": "CControllerMember::GetByGuid", "contents": "${1:CControllerMember}::GetByGuid(${2:\\$guid})$0"},
		{"trigger": "CControllerMember::GetByID", "contents": "${1:CControllerMember}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CControllerMember::GetList", "contents": "${1:CControllerMember}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arSelect = array()}, ${4:\\$arOptions = array()})$0"},
		{"trigger": "CControllerMember::GetMember", "contents": "${1:CControllerMember}::GetMember(${2:\\$id})$0"},
		{"trigger": "CControllerMember::RegisterMemberByPHP", "contents": "${1:CControllerMember}::RegisterMemberByPHP(${2:\\$ar_member})$0"},
		{"trigger": "CControllerMember::RegisterMemberByPassword", "contents": "${1:CControllerMember}::RegisterMemberByPassword(${2:\\$ar_member}, ${2:\\$admin_login}, ${4:\\$admin_password}, ${4:\\$controller_url = false})$0"},
		{"trigger": "CControllerMember::RegisterMemberByTicket", "contents": "${1:CControllerMember}::RegisterMemberByTicket(${2:\\$ar_member}, ${2:\\$ticket_id}, ${4:\\$session_id})$0"},
		{"trigger": "CControllerMember::RemoveGroupSettings", "contents": "${1:CControllerMember}::RemoveGroupSettings(${2:\\$member_id})$0"},
		{"trigger": "CControllerMember::RunCommand", "contents": "${1:CControllerMember}::RunCommand(${2:\\$member_id}, ${2:\\$command}, ${4:\\$arParameters = array()}, ${4:\\$task_id=false}, ${6:\\$operation = 'run'})$0"},
		{"trigger": "CControllerMember::RunCommandRedirect", "contents": "${1:CControllerMember}::RunCommandRedirect(${2:\\$member_id}, ${2:\\$command}, ${4:\\$arParameters = array()}, ${4:\\$log = true})$0"},
		{"trigger": "CControllerMember::RunCommandWithLog", "contents": "${1:CControllerMember}::RunCommandWithLog(${2:\\$member_id}, ${2:\\$command}, ${4:\\$arParameters = array()}, ${4:\\$task_id=false}, ${6:\\$operation = 'run'})$0"},
		{"trigger": "CControllerMember::SendFile", "contents": "${1:CControllerMember}::SendFile()$0"},
		{"trigger": "CControllerMember::SendFileWithLog", "contents": "${1:CControllerMember}::SendFileWithLog(${2:\\$member_id}, ${2:\\$file})$0"},
		{"trigger": "CControllerMember::SetGroupSettings", "contents": "${1:CControllerMember}::SetGroupSettings(${2:\\$member_id}, ${2:\\$task_id = false})$0"},
		{"trigger": "CControllerMember::SiteUpdate", "contents": "${1:CControllerMember}::SiteUpdate(${2:\\$member_id})$0"},
		{"trigger": "CControllerMember::UnRegister", "contents": "${1:CControllerMember}::UnRegister(${2:\\$member_id})$0"},
		{"trigger": "CControllerMember::UnregisterExpiredAgent", "contents": "${1:CControllerMember}::UnregisterExpiredAgent(${2:\\$id = false})$0"},
		{"trigger": "CControllerMember::Update", "contents": "${1:CControllerMember}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$strNote = ''})$0"},
		{"trigger": "CControllerMember::UpdateCounters", "contents": "${1:CControllerMember}::UpdateCounters(${2:\\$member_id}, ${2:\\$task_id = false})$0"},
		{"trigger": "CControllerMember::_CheckCommandId", "contents": "${1:CControllerMember}::_CheckCommandId(${2:\\$member_guid}, ${2:\\$command_id})$0"},
		{"trigger": "CControllerMember::_GoodURL", "contents": "${1:CControllerMember}::_GoodURL(${2:\\$url})$0"},
		{"trigger": "CControllerMember::getLog", "contents": "${1:CControllerMember}::getLog(${2:\\$arFilter})$0"},
		{"trigger": "CControllerMember::logChanges", "contents": "${1:CControllerMember}::logChanges(${2:\\$CONTROLLER_MEMBER_ID}, ${2:\\$arFieldsOld}, ${4:\\$arFieldsNew}, ${4:\\$strNote})$0"},
		{"trigger": "CControllerServerRequestFrom::CControllerServerRequestFrom", "contents": "${1:CControllerServerRequestFrom}::CControllerServerRequestFrom()$0"},
		{"trigger": "CControllerServerRequestFrom::Check", "contents": "${1:CControllerServerRequestFrom}::Check()$0"},
		{"trigger": "CControllerServerRequestTo::CControllerServerRequestTo", "contents": "${1:CControllerServerRequestTo}::CControllerServerRequestTo(${2:\\$member}, ${2:\\$operation}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CControllerServerRequestTo::Send", "contents": "${1:CControllerServerRequestTo}::Send(${2:\\$page='/bitrix/admin/main_controller.php'})$0"},
		{"trigger": "CControllerServerResponseFrom::CControllerServerResponseFrom", "contents": "${1:CControllerServerResponseFrom}::CControllerServerResponseFrom(${2:\\$oPacket = false})$0"},
		{"trigger": "CControllerServerResponseTo::CControllerServerResponseTo", "contents": "${1:CControllerServerResponseTo}::CControllerServerResponseTo(${2:\\$oPacket = false})$0"},
		{"trigger": "CControllerServerResponseTo::Send", "contents": "${1:CControllerServerResponseTo}::Send()$0"},
		{"trigger": "CControllerServerResponseTo::Sign", "contents": "${1:CControllerServerResponseTo}::Sign()$0"},
		{"trigger": "CControllerTask::Add", "contents": "${1:CControllerTask}::Add(${2:\\$arFields})$0"},
		{"trigger": "CControllerTask::CheckFields", "contents": "${1:CControllerTask}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CControllerTask::Delete", "contents": "${1:CControllerTask}::Delete(${2:\\$ID})$0"},
		{"trigger": "CControllerTask::GetByID", "contents": "${1:CControllerTask}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CControllerTask::GetList", "contents": "${1:CControllerTask}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$bCnt = false})$0"},
		{"trigger": "CControllerTask::GetStatusarray", "contents": "${1:CControllerTask}::GetStatusarray()$0"},
		{"trigger": "CControllerTask::GetTaskarray", "contents": "${1:CControllerTask}::GetTaskarray()$0"},
		{"trigger": "CControllerTask::ProcessAllTask", "contents": "${1:CControllerTask}::ProcessAllTask()$0"},
		{"trigger": "CControllerTask::ProcessTask", "contents": "${1:CControllerTask}::ProcessTask(${2:\\$ID})$0"},
		{"trigger": "CControllerTask::Update", "contents": "${1:CControllerTask}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "IControllerGroupOption::GetIcon", "contents": "${1:IControllerGroupOption}::GetIcon()$0"},
		{"trigger": "IControllerGroupOption::GetName", "contents": "${1:IControllerGroupOption}::GetName()$0"},
		{"trigger": "IControllerGroupOption::GetOptionarray", "contents": "${1:IControllerGroupOption}::GetOptionarray()$0"},
		{"trigger": "IControllerGroupOption::GetOptionPHPCode", "contents": "${1:IControllerGroupOption}::GetOptionPHPCode(${2:\\$arAllValues})$0"},
		{"trigger": "IControllerGroupOption::GetTitle", "contents": "${1:IControllerGroupOption}::GetTitle()$0"},
		{"trigger": "CCurrency::Add", "contents": "${1:CCurrency}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCurrency::GetBaseCurrency", "contents": "${1:CCurrency}::GetBaseCurrency()$0"},
		{"trigger": "CCurrency::__GetList", "contents": "${1:CCurrency}::__GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$lang = LANGUAGE_ID})$0"},
		{"trigger": "CCurrencyLang::Delete", "contents": "${1:CCurrencyLang}::Delete(${2:\\$currency}, ${2:\\$lang})$0"},
		{"trigger": "CCurrencyLang::Update", "contents": "${1:CCurrencyLang}::Update(${2:\\$currency}, ${2:\\$lang}, ${4:\\$arFields})$0"},
		{"trigger": "CCurrencyRates::Add", "contents": "${1:CCurrencyRates}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCurrencyRates::CheckFields", "contents": "${1:CCurrencyRates}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CCurrencyRates::GetByID", "contents": "${1:CCurrencyRates}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCurrencyRates::Update", "contents": "${1:CCurrencyRates}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CCurrencyRates::_get_last_rates", "contents": "${1:CCurrencyRates}::_get_last_rates(${2:\\$valDate}, ${2:\\$cur})$0"},
		{"trigger": "CCodeEditor::Show", "contents": "${1:CCodeEditor}::Show(${2:\\$params})$0"},
		{"trigger": "CEditorUtils::GetCSS", "contents": "${1:CEditorUtils}::GetCSS(${2:\\$startCount})$0"},
		{"trigger": "CEditorUtils::GetCompProperties", "contents": "${1:CEditorUtils}::GetCompProperties(${2:\\$name}, ${2:\\$template = ''}, ${4:\\$siteTemplateId = ''}, ${4:\\$arCurVals = array()})$0"},
		{"trigger": "CEditorUtils::RenderComponents", "contents": "${1:CEditorUtils}::RenderComponents(${2:\\$arParams})$0"},
		{"trigger": "CEditorUtils::StartFetchCSS", "contents": "${1:CEditorUtils}::StartFetchCSS()$0"},
		{"trigger": "CEditorUtils::UnJSEscapearray", "contents": "${1:CEditorUtils}::UnJSEscapearray(${2:\\$ar})$0"},
		{"trigger": "CEditorUtils::_RenderAllComponents", "contents": "${1:CEditorUtils}::_RenderAllComponents(${2:\\$arParams}, ${2:\\$bLPA})$0"},
		{"trigger": "CEditorUtils::_RenderOneComponent", "contents": "${1:CEditorUtils}::_RenderOneComponent(${2:\\$arParams}, ${2:\\$bLPA})$0"},
		{"trigger": "CEventFileman::GetAuditTypes", "contents": "${1:CEventFileman}::GetAuditTypes()$0"},
		{"trigger": "CEventFileman::GetEventInfo", "contents": "${1:CEventFileman}::GetEventInfo(${2:\\$row}, ${2:\\$arParams}, ${4:\\$arUser})$0"},
		{"trigger": "CEventFileman::GetFilter", "contents": "${1:CEventFileman}::GetFilter()$0"},
		{"trigger": "CEventFileman::GetFilterSQL", "contents": "${1:CEventFileman}::GetFilterSQL(${2:\\$var})$0"},
		{"trigger": "CEventFileman::MakeFilemanObject", "contents": "${1:CEventFileman}::MakeFilemanObject()$0"},
		{"trigger": "CFileMan::AddHTMLEditorFrame", "contents": "${1:CFileMan}::AddHTMLEditorFrame(${2:N/A})$0"},
		{"trigger": "CFileMan::CheckFileName", "contents": "${1:CFileMan}::CheckFileName(${2:\\$str})$0"},
		{"trigger": "CFileMan::DeleteDir", "contents": "${1:CFileMan}::DeleteDir(${2:\\$path})$0"},
		{"trigger": "CFileMan::DeleteFile", "contents": "${1:CFileMan}::DeleteFile(${2:\\$path})$0"},
		{"trigger": "CFileMan::FetchFileAccessPerm", "contents": "${1:CFileMan}::FetchFileAccessPerm(${2:\\$path})$0"},
		{"trigger": "CFileMan::GetFileExtension", "contents": "${1:CFileMan}::GetFileExtension(${2:\\$path})$0"},
		{"trigger": "CFileMan::GetFileName", "contents": "${1:CFileMan}::GetFileName(${2:\\$path})$0"},
		{"trigger": "CFileMan::GetFileTemplates", "contents": "${1:CFileMan}::GetFileTemplates(${2:\\$lang = LANG}, ${2:\\$arTemplates=array()})$0"},
		{"trigger": "CFileMan::GetFileTypeEx", "contents": "${1:CFileMan}::GetFileTypeEx(${2:\\$fileName})$0"},
		{"trigger": "CFileMan::GetLastPathesDefault", "contents": "${1:CFileMan}::GetLastPathesDefault()$0"},
		{"trigger": "CFileMan::GetStrFileSize", "contents": "${1:CFileMan}::GetStrFileSize(${2:\\$size})$0"},
		{"trigger": "CFileMan::GetVersion", "contents": "${1:CFileMan}::GetVersion()$0"},
		{"trigger": "CFileMan::IsPHP", "contents": "${1:CFileMan}::IsPHP(${2:\\$src})$0"},
		{"trigger": "CFileMan::NormalizePath", "contents": "${1:CFileMan}::NormalizePath(${2:\\$path})$0"},
		{"trigger": "CFileMan::ParseFileContent", "contents": "${1:CFileMan}::ParseFileContent(${2:\\$filesrc}, ${2:\\$bCheckProlog = false})$0"},
		{"trigger": "CFileMan::SaveMenu", "contents": "${1:CFileMan}::SaveMenu(${2:\\$path}, ${2:\\$aMenuLinksTmp}, ${4:\\$sMenuTemplateTmp})$0"},
		{"trigger": "CFileMan::SetLastPathes", "contents": "${1:CFileMan}::SetLastPathes(${2:\\$arPathes = array()})$0"},
		{"trigger": "CFileMan::ShowHTMLEditControl", "contents": "${1:CFileMan}::ShowHTMLEditControl(${2:\\$name}, ${2:\\$content}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CFileMan::UnEscapePHPString", "contents": "${1:CFileMan}::UnEscapePHPString(${2:\\$str})$0"},
		{"trigger": "CFileMan::UndoEditFile", "contents": "${1:CFileMan}::UndoEditFile(${2:\\$Params}, ${2:\\$type})$0"},
		{"trigger": "CFileMan::UndoNewSection", "contents": "${1:CFileMan}::UndoNewSection(${2:\\$Params}, ${2:\\$type})$0"},
		{"trigger": "CFilemanChmod::CheckBreak", "contents": "${1:CFilemanChmod}::CheckBreak()$0"},
		{"trigger": "CFilemanChmod::Chmod", "contents": "${1:CFilemanChmod}::Chmod(${2:\\$file})$0"},
		{"trigger": "CFilemanChmod::Init", "contents": "${1:CFilemanChmod}::Init(${2:\\$Params})$0"},
		{"trigger": "CFilemanCopy::GetAltFileName", "contents": "${1:CFilemanCopy}::GetAltFileName(${2:\\$absPath}, ${2:\\$name}, ${4:\\$bDir = false})$0"},
		{"trigger": "CFilemanCopy::GetConfig", "contents": "${1:CFilemanCopy}::GetConfig()$0"},
		{"trigger": "CFilemanCopy::Init", "contents": "${1:CFilemanCopy}::Init(${2:\\$Params})$0"},
		{"trigger": "CFilemanCopy::SaveConfig", "contents": "${1:CFilemanCopy}::SaveConfig(${2:\\$arConfig})$0"},
		{"trigger": "CFilemanSearch::CheckBreak", "contents": "${1:CFilemanSearch}::CheckBreak()$0"},
		{"trigger": "CFilemanSearch::CheckSearchSess", "contents": "${1:CFilemanSearch}::CheckSearchSess(${2:\\$searchSess})$0"},
		{"trigger": "CFilemanSearch::CleanOldSearchResult", "contents": "${1:CFilemanSearch}::CleanOldSearchResult()$0"},
		{"trigger": "CFilemanSearch::DelFromSearchResult", "contents": "${1:CFilemanSearch}::DelFromSearchResult(${2:\\$searchSess}, ${2:\\$path})$0"},
		{"trigger": "CFilemanSearch::GetConfig", "contents": "${1:CFilemanSearch}::GetConfig()$0"},
		{"trigger": "CFilemanSearch::GetSearchResult", "contents": "${1:CFilemanSearch}::GetSearchResult(${2:\\$searchSess = ''}, ${2:\\$arOrder = array('date'}, ${4:'desc')})$0"},
		{"trigger": "CFilemanSearch::GetSearchSess", "contents": "${1:CFilemanSearch}::GetSearchSess()$0"},
		{"trigger": "CFilemanSearch::Init", "contents": "${1:CFilemanSearch}::Init(${2:\\$Params})$0"},
		{"trigger": "CFilemanSearch::RenameInSearchResult", "contents": "${1:CFilemanSearch}::RenameInSearchResult(${2:\\$searchSess}, ${2:\\$pathFrom}, ${4:\\$pathTo})$0"},
		{"trigger": "CFilemanSearch::SaveConfig", "contents": "${1:CFilemanSearch}::SaveConfig(${2:\\$arConfig})$0"},
		{"trigger": "CFilemanSearch::Search", "contents": "${1:CFilemanSearch}::Search(${2:\\$file})$0"},
		{"trigger": "CFilemanSearch::SecureSearchSess", "contents": "${1:CFilemanSearch}::SecureSearchSess(${2:\\$ssess = ''})$0"},
		{"trigger": "CFilemanSearch::SetSearchResult", "contents": "${1:CFilemanSearch}::SetSearchResult(${2:\\$searchRes}, ${2:\\$searchSess}, ${4:\\$bClean = true})$0"},
		{"trigger": "CFilemanSearch::trimPath", "contents": "${1:CFilemanSearch}::trimPath(${2:\\$path}, ${2:\\$docRoot = false})$0"},
		{"trigger": "CFilemanTransliterate::Init", "contents": "${1:CFilemanTransliterate}::Init(${2:\\$Params})$0"},
		{"trigger": "CFilemanUtilDir::CFilemanUtilDir", "contents": "${1:CFilemanUtilDir}::CFilemanUtilDir(${2:\\$dir}, ${2:\\$Params})$0"},
		{"trigger": "CFilemanUtilDir::CallMethod", "contents": "${1:CFilemanUtilDir}::CallMethod(${2:\\$method = ''}, ${2:\\$param = false})$0"},
		{"trigger": "CFilemanUtilDir::Recursion", "contents": "${1:CFilemanUtilDir}::Recursion(${2:\\$dir})$0"},
		{"trigger": "CFilemanUtilDir::Start", "contents": "${1:CFilemanUtilDir}::Start(${2:\\$dir = false})$0"},
		{"trigger": "CFilemanUtils::AppendLangMessages", "contents": "${1:CFilemanUtils}::AppendLangMessages(${2:\\$Config})$0"},
		{"trigger": "CFilemanUtils::BuildDialogContent", "contents": "${1:CFilemanUtils}::BuildDialogContent(${2:\\$site})$0"},
		{"trigger": "CFilemanUtils::GetLastPathes", "contents": "${1:CFilemanUtils}::GetLastPathes()$0"},
		{"trigger": "CFilemanUtils::GetTimeout", "contents": "${1:CFilemanUtils}::GetTimeout()$0"},
		{"trigger": "CFilemanUtils::InitScript", "contents": "${1:CFilemanUtils}::InitScript(${2:\\$Params})$0"},
		{"trigger": "CFilemanUtils::NormalizePath", "contents": "${1:CFilemanUtils}::NormalizePath(${2:\\$path})$0"},
		{"trigger": "CFilemanUtils::Request", "contents": "${1:CFilemanUtils}::Request(${2:\\$action}, ${2:\\$site})$0"},
		{"trigger": "CFilemanUtils::TrimPath", "contents": "${1:CFilemanUtils}::TrimPath(${2:\\$path}, ${2:\\$docRoot = false})$0"},
		{"trigger": "CIBlockPropertyMapGoogle::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertyMapGoogle}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyMapGoogle::GetUserTypeDescription", "contents": "${1:CIBlockPropertyMapGoogle}::GetUserTypeDescription()$0"},
		{"trigger": "CIBlockPropertyMapInterface::ConvertFromDB", "contents": "${1:CIBlockPropertyMapInterface}::ConvertFromDB(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyMapInterface::GetAdminListViewHTML", "contents": "${1:CIBlockPropertyMapInterface}::GetAdminListViewHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyMapInterface::GetUserTypeDescription", "contents": "${1:CIBlockPropertyMapInterface}::GetUserTypeDescription()$0"},
		{"trigger": "CIBlockPropertyMapInterface::_GetMapKey", "contents": "${1:CIBlockPropertyMapInterface}::_GetMapKey(${2:\\$map_type}, ${2:&\\$strDomain})$0"},
		{"trigger": "CIBlockPropertyMapYandex::GetUserTypeDescription", "contents": "${1:CIBlockPropertyMapYandex}::GetUserTypeDescription()$0"},
		{"trigger": "CIBlockPropertyMapYandex::_DrawKeyInputControl", "contents": "${1:CIBlockPropertyMapYandex}::_DrawKeyInputControl(${2:\\$MAP_ID}, ${2:\\$strDomain})$0"},
		{"trigger": "CIBlockPropertyVideo::ConvertFromDB", "contents": "${1:CIBlockPropertyVideo}::ConvertFromDB(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyVideo::GetAdminListViewHTML", "contents": "${1:CIBlockPropertyVideo}::GetAdminListViewHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyVideo::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertyVideo}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyVideo::GetSearchContent", "contents": "${1:CIBlockPropertyVideo}::GetSearchContent(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyVideo::GetSettingsHTML", "contents": "${1:CIBlockPropertyVideo}::GetSettingsHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:\\$arPropertyFields})$0"},
		{"trigger": "CIBlockPropertyVideo::PrepareSettings", "contents": "${1:CIBlockPropertyVideo}::PrepareSettings(${2:\\$arProperty})$0"},
		{"trigger": "CLightHTMLEditor::GetActualPath", "contents": "${1:CLightHTMLEditor}::GetActualPath(${2:\\$path})$0"},
		{"trigger": "CLightHTMLEditor::Init", "contents": "${1:CLightHTMLEditor}::Init(${2:&\\$arParams})$0"},
		{"trigger": "CLightHTMLEditor::InitFileDialogs", "contents": "${1:CLightHTMLEditor}::InitFileDialogs()$0"},
		{"trigger": "CLightHTMLEditor::InitLangMess", "contents": "${1:CLightHTMLEditor}::InitLangMess()$0"},
		{"trigger": "CLightHTMLEditor::InitMedialibDialogs", "contents": "${1:CLightHTMLEditor}::InitMedialibDialogs()$0"},
		{"trigger": "CLightHTMLEditor::InitScripts", "contents": "${1:CLightHTMLEditor}::InitScripts()$0"},
		{"trigger": "CLightHTMLEditor::IsMobileDevice", "contents": "${1:CLightHTMLEditor}::IsMobileDevice()$0"},
		{"trigger": "CLightHTMLEditor::Show", "contents": "${1:CLightHTMLEditor}::Show(${2:\\$arParams})$0"},
		{"trigger": "CMedialib::AppendLangMessages", "contents": "${1:CMedialib}::AppendLangMessages()$0"},
		{"trigger": "CMedialib::AppendLangMessagesEx", "contents": "${1:CMedialib}::AppendLangMessagesEx()$0"},
		{"trigger": "CMedialib::AttachJSScripts", "contents": "${1:CMedialib}::AttachJSScripts()$0"},
		{"trigger": "CMedialib::BuildAddCollectionDialog", "contents": "${1:CMedialib}::BuildAddCollectionDialog(${2:\\$Params})$0"},
		{"trigger": "CMedialib::BuildAddItemDialog", "contents": "${1:CMedialib}::BuildAddItemDialog(${2:\\$Params})$0"},
		{"trigger": "CMedialib::BuildChangeType", "contents": "${1:CMedialib}::BuildChangeType(${2:\\$Params})$0"},
		{"trigger": "CMedialib::BuildConfirmDialog", "contents": "${1:CMedialib}::BuildConfirmDialog(${2:\\$Params})$0"},
		{"trigger": "CMedialib::BuildDialog", "contents": "${1:CMedialib}::BuildDialog(${2:\\$Params})$0"},
		{"trigger": "CMedialib::BuildViewItemDialog", "contents": "${1:CMedialib}::BuildViewItemDialog(${2:\\$Params})$0"},
		{"trigger": "CMedialib::CanDoOperation", "contents": "${1:CMedialib}::CanDoOperation(${2:\\$operation}, ${2:\\$collectionId=0}, ${4:\\$userId = false})$0"},
		{"trigger": "CMedialib::ChangeColType", "contents": "${1:CMedialib}::ChangeColType(${2:\\$Params})$0"},
		{"trigger": "CMedialib::CheckFileExtention", "contents": "${1:CMedialib}::CheckFileExtention(${2:\\$strPath = ''}, ${2:\\$arExt = false})$0"},
		{"trigger": "CMedialib::CompareTypesEx", "contents": "${1:CMedialib}::CompareTypesEx(${2:\\$typeMix}, ${2:\\$arType})$0"},
		{"trigger": "CMedialib::DelCollection", "contents": "${1:CMedialib}::DelCollection(${2:\\$id}, ${2:\\$arIds = array()})$0"},
		{"trigger": "CMedialib::DelItem", "contents": "${1:CMedialib}::DelItem(${2:\\$id}, ${2:\\$bCurrent = false}, ${4:\\$colId = false})$0"},
		{"trigger": "CMedialib::DelTypes", "contents": "${1:CMedialib}::DelTypes(${2:\\$arIds = array()})$0"},
		{"trigger": "CMedialib::DeleteThumbnails", "contents": "${1:CMedialib}::DeleteThumbnails()$0"},
		{"trigger": "CMedialib::EditCollection", "contents": "${1:CMedialib}::EditCollection(${2:\\$Params})$0"},
		{"trigger": "CMedialib::EditItem", "contents": "${1:CMedialib}::EditItem(${2:\\$Params})$0"},
		{"trigger": "CMedialib::Escape", "contents": "${1:CMedialib}::Escape(${2:\\$str}, ${2:\\$bHtmlSpCh = true})$0"},
		{"trigger": "CMedialib::GetAccessPermissionsarray", "contents": "${1:CMedialib}::GetAccessPermissionsarray(${2:\\$collectionId = 0}, ${2:\\$oCollections = false})$0"},
		{"trigger": "CMedialib::GetCollectionTree", "contents": "${1:CMedialib}::GetCollectionTree(${2:\\$Params = array()})$0"},
		{"trigger": "CMedialib::GetCollections", "contents": "${1:CMedialib}::GetCollections(${2:&\\$exParams})$0"},
		{"trigger": "CMedialib::GetDefaultMediaExtentions", "contents": "${1:CMedialib}::GetDefaultMediaExtentions()$0"},
		{"trigger": "CMedialib::GetItemCollectionList", "contents": "${1:CMedialib}::GetItemCollectionList(${2:\\$Params})$0"},
		{"trigger": "CMedialib::GetItemViewHTML", "contents": "${1:CMedialib}::GetItemViewHTML(${2:\\$itemId})$0"},
		{"trigger": "CMedialib::GetItems", "contents": "${1:CMedialib}::GetItems(${2:\\$Params})$0"},
		{"trigger": "CMedialib::GetMediaExtentions", "contents": "${1:CMedialib}::GetMediaExtentions(${2:\\$bStr = true})$0"},
		{"trigger": "CMedialib::GetOperations", "contents": "${1:CMedialib}::GetOperations(${2:\\$collectionId})$0"},
		{"trigger": "CMedialib::GetTypeById", "contents": "${1:CMedialib}::GetTypeById(${2:\\$id}, ${2:\\$arMLTypes = false})$0"},
		{"trigger": "CMedialib::GetTypes", "contents": "${1:CMedialib}::GetTypes(${2:\\$arConfigTypes = array()}, ${2:\\$bGetEmpties = false})$0"},
		{"trigger": "CMedialib::GetUsableDate", "contents": "${1:CMedialib}::GetUsableDate(${2:\\$date = ''})$0"},
		{"trigger": "CMedialib::GetUsableSize", "contents": "${1:CMedialib}::GetUsableSize(${2:\\$size = 0})$0"},
		{"trigger": "CMedialib::Init", "contents": "${1:CMedialib}::Init()$0"},
		{"trigger": "CMedialib::InputFile", "contents": "${1:CMedialib}::InputFile(${2:N/A})$0"},
		{"trigger": "CMedialib::MultiActionDelete", "contents": "${1:CMedialib}::MultiActionDelete(${2:\\$Params = array()})$0"},
		{"trigger": "CMedialib::SaveAccessPermissions", "contents": "${1:CMedialib}::SaveAccessPermissions(${2:\\$colId}, ${2:\\$arTaskPerm})$0"},
		{"trigger": "CMedialib::SaveUserSettings", "contents": "${1:CMedialib}::SaveUserSettings(${2:\\$Params})$0"},
		{"trigger": "CMedialib::SearchItems", "contents": "${1:CMedialib}::SearchItems(${2:\\$Params})$0"},
		{"trigger": "CMedialib::SetTypes", "contents": "${1:CMedialib}::SetTypes(${2:\\$arTypes = array()})$0"},
		{"trigger": "CMedialib::ShowBrowseButton", "contents": "${1:CMedialib}::ShowBrowseButton(${2:\\$Params = array()})$0"},
		{"trigger": "CMedialib::ShowDialogScript", "contents": "${1:CMedialib}::ShowDialogScript(${2:\\$arConfig = array()})$0"},
		{"trigger": "CMedialib::ShowJS", "contents": "${1:CMedialib}::ShowJS()$0"},
		{"trigger": "CMedialib::ShowUploadForm", "contents": "${1:CMedialib}::ShowUploadForm(${2:\\$Params})$0"},
		{"trigger": "CMedialib::Start", "contents": "${1:CMedialib}::Start(${2:\\$Params})$0"},
		{"trigger": "CMedialib::_BuildCollectionsSelectOptions", "contents": "${1:CMedialib}::_BuildCollectionsSelectOptions(${2:\\$Collections = false}, ${2:\\$arColTree = false}, ${4:\\$level = 0}, ${4:\\$selected = false})$0"},
		{"trigger": "CMedialib::_GetAccessPermissions", "contents": "${1:CMedialib}::_GetAccessPermissions(${2:\\$arCols = array()})$0"},
		{"trigger": "CMedialib::_buildCollection", "contents": "${1:CMedialib}::_buildCollection(${2:\\$Col}, ${2:\\$ind}, ${4:&\\$arColTree}, ${4:&\\$Collections}, ${6:\\$Params = array()})$0"},
		{"trigger": "CMedialib::_findChildInColTree", "contents": "${1:CMedialib}::_findChildInColTree(${2:&\\$arr}, ${2:\\$id}, ${4:\\$colId})$0"},
		{"trigger": "CMedialibCollection::ChangeType", "contents": "${1:CMedialibCollection}::ChangeType(${2:\\$Params})$0"},
		{"trigger": "CMedialibCollection::CheckFields", "contents": "${1:CMedialibCollection}::CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CMedialibCollection::Delete", "contents": "${1:CMedialibCollection}::Delete(${2:\\$ID}, ${2:\\$bDelEmpty = true})$0"},
		{"trigger": "CMedialibCollection::Edit", "contents": "${1:CMedialibCollection}::Edit(${2:\\$Params})$0"},
		{"trigger": "CMedialibCollection::GetErrorMess", "contents": "${1:CMedialibCollection}::GetErrorMess()$0"},
		{"trigger": "CMedialibCollection::GetList", "contents": "${1:CMedialibCollection}::GetList(${2:\\$Params = array()})$0"},
		{"trigger": "CMedialibCollection::IsViewable", "contents": "${1:CMedialibCollection}::IsViewable(${2:\\$oCol}, ${2:\\$arCol=false})$0"},
		{"trigger": "CMedialibItem::CheckFields", "contents": "${1:CMedialibItem}::CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CMedialibItem::Delete", "contents": "${1:CMedialibItem}::Delete(${2:\\$ID}, ${2:\\$bCurrent}, ${4:\\$colId})$0"},
		{"trigger": "CMedialibItem::DeleteEmpty", "contents": "${1:CMedialibItem}::DeleteEmpty()$0"},
		{"trigger": "CMedialibItem::Edit", "contents": "${1:CMedialibItem}::Edit(${2:\\$Params})$0"},
		{"trigger": "CMedialibItem::GenerateThumbnail", "contents": "${1:CMedialibItem}::GenerateThumbnail(${2:&\\$arFile}, ${2:\\$Params = array()})$0"},
		{"trigger": "CMedialibItem::GetFullPath", "contents": "${1:CMedialibItem}::GetFullPath(${2:\\$arImage}, ${2:\\$upload_dir = false})$0"},
		{"trigger": "CMedialibItem::GetItemCollections", "contents": "${1:CMedialibItem}::GetItemCollections(${2:\\$Params})$0"},
		{"trigger": "CMedialibItem::GetList", "contents": "${1:CMedialibItem}::GetList(${2:\\$Params})$0"},
		{"trigger": "CMedialibItem::GetSourceId", "contents": "${1:CMedialibItem}::GetSourceId(${2:\\$id})$0"},
		{"trigger": "CMedialibItem::GetThumbPath", "contents": "${1:CMedialibItem}::GetThumbPath(${2:\\$arImage})$0"},
		{"trigger": "CMedialibItem::Search", "contents": "${1:CMedialibItem}::Search(${2:\\$arQuery}, ${2:\\$arTypes = array()})$0"},
		{"trigger": "CMedialibTabControl::BeginEpilog", "contents": "${1:CMedialibTabControl}::BeginEpilog()$0"},
		{"trigger": "CMedialibTabControl::BeginTab", "contents": "${1:CMedialibTabControl}::BeginTab()$0"},
		{"trigger": "CMedialibTabControl::CMedialibTabControl", "contents": "${1:CMedialibTabControl}::CMedialibTabControl(${2:\\$id}, ${2:\\$tabs})$0"},
		{"trigger": "CMedialibTabControl::EndEpilog", "contents": "${1:CMedialibTabControl}::EndEpilog()$0"},
		{"trigger": "CMedialibTabControl::EndTab", "contents": "${1:CMedialibTabControl}::EndTab()$0"},
		{"trigger": "CMedialibTabControl::Show", "contents": "${1:CMedialibTabControl}::Show()$0"},
		{"trigger": "CMedialibTabControl::ShowScript", "contents": "${1:CMedialibTabControl}::ShowScript()$0"},
		{"trigger": "CSnippets::CheckFile", "contents": "${1:CSnippets}::CheckFile(${2:\\$Params})$0"},
		{"trigger": "CSnippets::ClearCache", "contents": "${1:CSnippets}::ClearCache()$0"},
		{"trigger": "CSnippets::Delete", "contents": "${1:CSnippets}::Delete(${2:\\$Params})$0"},
		{"trigger": "CSnippets::DisplayJSGroups", "contents": "${1:CSnippets}::DisplayJSGroups(${2:\\$template}, ${2:\\$ar = array()})$0"},
		{"trigger": "CSnippets::Edit", "contents": "${1:CSnippets}::Edit(${2:\\$Params})$0"},
		{"trigger": "CSnippets::GetCode", "contents": "${1:CSnippets}::GetCode(${2:\\$path})$0"},
		{"trigger": "CSnippets::GetDefaultFileName", "contents": "${1:CSnippets}::GetDefaultFileName(${2:\\$path})$0"},
		{"trigger": "CSnippets::GetGroups", "contents": "${1:CSnippets}::GetGroups(${2:\\$Params})$0"},
		{"trigger": "CSnippets::HandleForTemplate", "contents": "${1:CSnippets}::HandleForTemplate(${2:\\$template}, ${2:&\\$arSNIPPETS}, ${4:&\\$arTemplateKeys})$0"},
		{"trigger": "CSnippets::InspectDir", "contents": "${1:CSnippets}::InspectDir(${2:&\\$arSnGroups}, ${2:\\$path}, ${4:\\$template}, ${4:\\$level = 0}, ${6:\\$parent = ''})$0"},
		{"trigger": "CSnippets::LoadList", "contents": "${1:CSnippets}::LoadList(${2:\\$Params})$0"},
		{"trigger": "CSnippets::ReadDir", "contents": "${1:CSnippets}::ReadDir(${2:&\\$arSNIPPETS}, ${2:&\\$arKeys}, ${4:\\$path}, ${4:\\$template}, ${6:\\$level = 0}, ${6:\\$parent = ''})$0"},
		{"trigger": "CSnippets::UpdateContentInfo", "contents": "${1:CSnippets}::UpdateContentInfo(${2:&\\$ar}, ${2:&\\$arKeys}, ${4:\\$template})$0"},
		{"trigger": "CSnippets::WriteHtaccess", "contents": "${1:CSnippets}::WriteHtaccess(${2:\\$path})$0"},
		{"trigger": "CSticker::AppendLangMessages", "contents": "${1:CSticker}::AppendLangMessages()$0"},
		{"trigger": "CSticker::BBParseToHTML", "contents": "${1:CSticker}::BBParseToHTML(${2:\\$str}, ${2:\\$bForList = false})$0"},
		{"trigger": "CSticker::CanDoOperation", "contents": "${1:CSticker}::CanDoOperation(${2:\\$operation})$0"},
		{"trigger": "CSticker::CheckFields", "contents": "${1:CSticker}::CheckFields()$0"},
		{"trigger": "CSticker::ClearCache", "contents": "${1:CSticker}::ClearCache()$0"},
		{"trigger": "CSticker::Delete", "contents": "${1:CSticker}::Delete(${2:\\$ids = array()})$0"},
		{"trigger": "CSticker::DeleteAll", "contents": "${1:CSticker}::DeleteAll()$0"},
		{"trigger": "CSticker::Edit", "contents": "${1:CSticker}::Edit(${2:\\$Params})$0"},
		{"trigger": "CSticker::GetAccessPermissions", "contents": "${1:CSticker}::GetAccessPermissions()$0"},
		{"trigger": "CSticker::GetBShowStickers", "contents": "${1:CSticker}::GetBShowStickers()$0"},
		{"trigger": "CSticker::GetById", "contents": "${1:CSticker}::GetById(${2:\\$id})$0"},
		{"trigger": "CSticker::GetCount", "contents": "${1:CSticker}::GetCount(${2:\\$Params})$0"},
		{"trigger": "CSticker::GetCurPageCount", "contents": "${1:CSticker}::GetCurPageCount()$0"},
		{"trigger": "CSticker::GetErrorMess", "contents": "${1:CSticker}::GetErrorMess()$0"},
		{"trigger": "CSticker::GetFilterParams", "contents": "${1:CSticker}::GetFilterParams()$0"},
		{"trigger": "CSticker::GetList", "contents": "${1:CSticker}::GetList(${2:\\$Params = array()})$0"},
		{"trigger": "CSticker::GetOperations", "contents": "${1:CSticker}::GetOperations()$0"},
		{"trigger": "CSticker::GetPagesList", "contents": "${1:CSticker}::GetPagesList(${2:\\$site})$0"},
		{"trigger": "CSticker::GetScriptStr", "contents": "${1:CSticker}::GetScriptStr(${2:\\$mode})$0"},
		{"trigger": "CSticker::GetStickerInfo", "contents": "${1:CSticker}::GetStickerInfo(${2:\\$createdBy}, ${2:\\$dateCreate}, ${4:\\$modBy}, ${4:\\$dateMod})$0"},
		{"trigger": "CSticker::GetTasks", "contents": "${1:CSticker}::GetTasks()$0"},
		{"trigger": "CSticker::GetUsableDate", "contents": "${1:CSticker}::GetUsableDate(${2:\\$d})$0"},
		{"trigger": "CSticker::GetUserName", "contents": "${1:CSticker}::GetUserName(${2:\\$id = false})$0"},
		{"trigger": "CSticker::Init", "contents": "${1:CSticker}::Init(${2:\\$Params = array()})$0"},
		{"trigger": "CSticker::InitJS", "contents": "${1:CSticker}::InitJS(${2:\\$Params})$0"},
		{"trigger": "CSticker::SaveAccessPermissions", "contents": "${1:CSticker}::SaveAccessPermissions(${2:\\$arTaskPerm})$0"},
		{"trigger": "CSticker::SetBShowStickers", "contents": "${1:CSticker}::SetBShowStickers(${2:\\$bShow = false})$0"},
		{"trigger": "CSticker::SetFilterParams", "contents": "${1:CSticker}::SetFilterParams(${2:\\$Filter})$0"},
		{"trigger": "CSticker::SetHiden", "contents": "${1:CSticker}::SetHiden(${2:\\$ids = array()}, ${2:\\$bHide})$0"},
		{"trigger": "CUserTypeVideo::CheckFields", "contents": "${1:CUserTypeVideo}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeVideo::GetEditFormHTML", "contents": "${1:CUserTypeVideo}::GetEditFormHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeVideo::OnBeforeSave", "contents": "${1:CUserTypeVideo}::OnBeforeSave(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeVideo::PrepareSettings", "contents": "${1:CUserTypeVideo}::PrepareSettings(${2:\\$arProperty})$0"},
		{"trigger": "CVideoProperty::BaseConvertFromDB", "contents": "${1:CVideoProperty}::BaseConvertFromDB(${2:\\$val = ''})$0"},
		{"trigger": "CVideoProperty::BaseGetAdminListViewHTML", "contents": "${1:CVideoProperty}::BaseGetAdminListViewHTML(${2:\\$val})$0"},
		{"trigger": "CVideoProperty::BaseGetSettingsHTML", "contents": "${1:CVideoProperty}::BaseGetSettingsHTML(${2:\\$name}, ${2:\\$val})$0"},
		{"trigger": "CVideoProperty::BasePrepareSettings", "contents": "${1:CVideoProperty}::BasePrepareSettings(${2:\\$arProperty}, ${2:\\$key = 'SETTINGS'})$0"},
		{"trigger": "CVideoProperty::GetSkinPath", "contents": "${1:CVideoProperty}::GetSkinPath()$0"},
		{"trigger": "CVideoProperty::GetSkinsEx", "contents": "${1:CVideoProperty}::GetSkinsEx(${2:\\$path})$0"},
		{"trigger": "blogTextParser1::convert", "contents": "${1:blogTextParser1}::convert(${2:\\$text}, ${2:\\$bPreview = True}, ${4:\\$arImages = array()}, ${4:\\$allow = array('HTML' => 'N'}, ${6:'ANCHOR' => 'Y'}, ${6:'BIU' => 'Y'}, ${8:'IMG' => 'Y'}, ${8:'QUOTE' => 'Y'}, ${10:'CODE' => 'Y'}, ${20:'FONT' => 'Y'}, ${22:'LIST' => 'Y'}, ${22:'SMILES' => 'Y'}, ${24:'NL2BR' => 'N'}, ${24:'VIDEO' => 'Y'}, ${26:'TABLE' => 'Y'}, ${26:'CUT_ANCHOR' => 'N')}, ${28:\\$arParams = array()})$0"},
		{"trigger": "blogTextParser1::convert4mail", "contents": "${1:blogTextParser1}::convert4mail(${2:\\$text}, ${2:\\$arImages = array()})$0"},
		{"trigger": "blogTextParser1::convert_anchor_tag", "contents": "${1:blogTextParser1}::convert_anchor_tag(${2:\\$url}, ${2:\\$text}, ${4:\\$pref=''})$0"},
		{"trigger": "blogTextParser1::convert_blog_image", "contents": "${1:blogTextParser1}::convert_blog_image(${2:\\$p1 = ''}, ${2:\\$imageId = ''}, ${4:\\$p2 = ''}, ${4:\\$type = 'html'}, ${6:\\$serverName=''})$0"},
		{"trigger": "blogTextParser1::convert_close_tag", "contents": "${1:blogTextParser1}::convert_close_tag(${2:\\$marker = 'quote'}, ${2:\\$type = 'html'})$0"},
		{"trigger": "blogTextParser1::convert_code_tag", "contents": "${1:blogTextParser1}::convert_code_tag(${2:\\$text = ''}, ${2:\\$type = 'html'}, ${4:\\$allowHTML = false})$0"},
		{"trigger": "blogTextParser1::convert_emoticon", "contents": "${1:blogTextParser1}::convert_emoticon(${2:\\$code = ''}, ${2:\\$image = ''}, ${4:\\$description = ''}, ${4:\\$servername = ''})$0"},
		{"trigger": "blogTextParser1::convert_font_attr", "contents": "${1:blogTextParser1}::convert_font_attr(${2:\\$attr}, ${2:\\$value = ''}, ${4:\\$text = ''})$0"},
		{"trigger": "blogTextParser1::convert_image_tag", "contents": "${1:blogTextParser1}::convert_image_tag(${2:\\$url = ''}, ${2:\\$type = 'html'}, ${4:\\$serverName=''}, ${4:\\$params = ''})$0"},
		{"trigger": "blogTextParser1::convert_open_tag", "contents": "${1:blogTextParser1}::convert_open_tag(${2:\\$marker = 'quote'}, ${2:\\$type = 'html'})$0"},
		{"trigger": "blogTextParser1::convert_quote_tag", "contents": "${1:blogTextParser1}::convert_quote_tag(${2:\\$text = ''}, ${2:\\$type = 'html'})$0"},
		{"trigger": "blogTextParser1::convert_to_rss", "contents": "${1:blogTextParser1}::convert_to_rss(${2:\\$text}, ${2:\\$arImages = array()}, ${4:\\$arAllow = array('HTML' => 'N'}, ${4:'ANCHOR' => 'Y'}, ${6:'BIU' => 'Y'}, ${6:'IMG' => 'Y'}, ${8:'QUOTE' => 'Y'}, ${8:'CODE' => 'Y'}, ${10:'FONT' => 'Y'}, ${20:'LIST' => 'Y'}, ${22:'SMILES' => 'Y'}, ${22:'NL2BR' => 'N'}, ${24:'VIDEO' => 'Y'}, ${24:'TABLE' => 'Y'}, ${26:'CUT_ANCHOR' => 'N')}, ${26:\\$bPreview = true})$0"},
		{"trigger": "blogTextParser1::convert_video", "contents": "${1:blogTextParser1}::convert_video(${2:\\$params}, ${2:\\$path})$0"},
		{"trigger": "blogTextParser1::cut_long_words", "contents": "${1:blogTextParser1}::cut_long_words(${2:\\$str})$0"},
		{"trigger": "blogTextParser1::defended_tags", "contents": "${1:blogTextParser1}::defended_tags(${2:\\$text}, ${2:\\$tag = 'replace'})$0"},
		{"trigger": "blogTextParser1::killAllTags", "contents": "${1:blogTextParser1}::killAllTags(${2:\\$text})$0"},
		{"trigger": "blogTextParser1::part_long_words", "contents": "${1:blogTextParser1}::part_long_words(${2:\\$str})$0"},
		{"trigger": "blogTextParser1::pre_convert_code_tag", "contents": "${1:blogTextParser1}::pre_convert_code_tag(${2:\\$text = ''})$0"},
		{"trigger": "blogTextParser1::wrap_long_words", "contents": "${1:blogTextParser1}::wrap_long_words(${2:\\$text=''})$0"},
		{"trigger": "CForm::Check", "contents": "${1:CForm}::Check(${2:\\$WEB_FORM_ID}, ${2:\\$arrVALUES=false}, ${4:\\$RESULT_ID=false}, ${4:\\$CHECK_RIGHTS='Y'}, ${6:\\$RETURN_array='N'})$0"},
		{"trigger": "CForm::CheckFields", "contents": "${1:CForm}::CheckFields(${2:\\$arFields}, ${2:\\$FORM_ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm::Copy", "contents": "${1:CForm}::Copy(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm::Delete", "contents": "${1:CForm}::Delete(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm::ExecHandlerAfterChangeStatus", "contents": "${1:CForm}::ExecHandlerAfterChangeStatus(${2:\\$RESULT_ID}, ${2:\\$ACTION})$0"},
		{"trigger": "CForm::ExecHandlerBeforeChangeStatus", "contents": "${1:CForm}::ExecHandlerBeforeChangeStatus(${2:\\$RESULT_ID}, ${2:\\$ACTION}, ${4:\\$NEW_STATUS_ID=0})$0"},
		{"trigger": "CForm::GetByID", "contents": "${1:CForm}::GetByID(${2:\\$ID}, ${2:\\$GET_BY_SID='N'})$0"},
		{"trigger": "CForm::GetByID_admin", "contents": "${1:CForm}::GetByID_admin(${2:\\$WEB_FORM_ID}, ${2:\\$current_section = false})$0"},
		{"trigger": "CForm::GetBySID", "contents": "${1:CForm}::GetBySID(${2:\\$SID})$0"},
		{"trigger": "CForm::GetCheckBoxField", "contents": "${1:CForm}::GetCheckBoxField(${2:\\$FIELD_NAME}, ${2:\\$FIELD_ID}, ${4:\\$VALUE=''}, ${4:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetCheckBoxValue", "contents": "${1:CForm}::GetCheckBoxValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetCrmFlagFilter", "contents": "${1:CForm}::GetCrmFlagFilter(${2:\\$FID}, ${2:\\$field='class=\\'inputselect\\''})$0"},
		{"trigger": "CForm::GetDataByID", "contents": "${1:CForm}::GetDataByID(${2:\\$WEB_FORM_ID}, ${2:&\\$arForm}, ${4:&\\$arQuestions}, ${4:&\\$arAnswers}, ${6:&\\$arDropDown}, ${6:&\\$arMultiSelect}, ${8:\\$additional='N'}, ${8:\\$active='N'})$0"},
		{"trigger": "CForm::GetDateField", "contents": "${1:CForm}::GetDateField(${2:\\$FIELD_NAME}, ${2:\\$FORM_NAME}, ${4:\\$VALUE=''}, ${4:\\$FIELD_WIDTH=''}, ${6:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetDateFilter", "contents": "${1:CForm}::GetDateFilter(${2:\\$FID}, ${2:\\$form_name='form1'}, ${4:\\$show_select='Y'}, ${4:\\$field_select='class=\\'inputselect\\''}, ${6:\\$field_input='class=\\'inputtext\\''})$0"},
		{"trigger": "CForm::GetDateValue", "contents": "${1:CForm}::GetDateValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetDropDownField", "contents": "${1:CForm}::GetDropDownField(${2:\\$FIELD_NAME}, ${2:\\$arDropDown}, ${4:\\$VALUE}, ${4:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetDropDownFilter", "contents": "${1:CForm}::GetDropDownFilter(${2:\\$ID}, ${2:\\$PARAMETER_NAME}, ${4:\\$FID}, ${4:\\$field='class=\\'inputselect\\''})$0"},
		{"trigger": "CForm::GetDropDownValue", "contents": "${1:CForm}::GetDropDownValue(${2:\\$FIELD_NAME}, ${2:\\$arDropDown}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetEmailField", "contents": "${1:CForm}::GetEmailField(${2:\\$FIELD_NAME}, ${2:\\$VALUE=''}, ${4:\\$SIZE=''}, ${4:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetEmailValue", "contents": "${1:CForm}::GetEmailValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetExistFlagFilter", "contents": "${1:CForm}::GetExistFlagFilter(${2:\\$FID}, ${2:\\$field='class=\\'inputcheckbox\\''})$0"},
		{"trigger": "CForm::GetFileField", "contents": "${1:CForm}::GetFileField(${2:\\$FIELD_NAME}, ${2:\\$WIDTH=''}, ${4:\\$FILE_TYPE='IMAGE'}, ${4:\\$MAX_FILE_SIZE=0}, ${6:\\$VALUE=''}, ${6:\\$PARAM_FILE=''}, ${8:\\$PARAM_CHECKBOX=''})$0"},
		{"trigger": "CForm::GetFormTemplateByID", "contents": "${1:CForm}::GetFormTemplateByID(${2:\\$ID}, ${2:\\$GET_BY_SID='N'})$0"},
		{"trigger": "CForm::GetHiddenField", "contents": "${1:CForm}::GetHiddenField(${2:\\$FIELD_NAME}, ${2:\\$VALUE=''}, ${4:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetHiddenValue", "contents": "${1:CForm}::GetHiddenValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetList", "contents": "${1:CForm}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$min_permission=10})$0"},
		{"trigger": "CForm::GetMailTemplatearray", "contents": "${1:CForm}::GetMailTemplatearray(${2:\\$FORM_ID})$0"},
		{"trigger": "CForm::GetMenuList", "contents": "${1:CForm}::GetMenuList(${2:\\$arFilter=array()}, ${2:\\$check_rights='Y'})$0"},
		{"trigger": "CForm::GetMultiSelectField", "contents": "${1:CForm}::GetMultiSelectField(${2:\\$FIELD_NAME}, ${2:\\$arMultiSelect}, ${4:\\$arSELECTED=array()}, ${4:\\$HEIGHT=''}, ${6:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetMultiSelectValue", "contents": "${1:CForm}::GetMultiSelectValue(${2:\\$FIELD_NAME}, ${2:\\$arMultiSelect}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetNextSort", "contents": "${1:CForm}::GetNextSort()$0"},
		{"trigger": "CForm::GetNumberFilter", "contents": "${1:CForm}::GetNumberFilter(${2:\\$FID}, ${2:\\$size='10'}, ${4:\\$field='class=\\'inputtext\\''})$0"},
		{"trigger": "CForm::GetPasswordField", "contents": "${1:CForm}::GetPasswordField(${2:\\$FIELD_NAME}, ${2:\\$VALUE=''}, ${4:\\$SIZE=''}, ${4:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetPasswordValue", "contents": "${1:CForm}::GetPasswordValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetPermission", "contents": "${1:CForm}::GetPermission(${2:\\$form_id}, ${2:\\$arGroups=false}, ${4:\\$get_from_database=''})$0"},
		{"trigger": "CForm::GetPermissionList", "contents": "${1:CForm}::GetPermissionList(${2:\\$get_default='Y'})$0"},
		{"trigger": "CForm::GetRadioField", "contents": "${1:CForm}::GetRadioField(${2:\\$FIELD_NAME}, ${2:\\$FIELD_ID}, ${4:\\$VALUE=''}, ${4:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetRadioValue", "contents": "${1:CForm}::GetRadioValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetResultAnswerarray", "contents": "${1:CForm}::GetResultAnswerarray(${2:\\$WEB_FORM_ID}, ${2:&\\$arrColumns}, ${4:&\\$arrAnswers}, ${4:&\\$arrAnswersSID}, ${6:\\$arFilter=array()})$0"},
		{"trigger": "CForm::GetSitearray", "contents": "${1:CForm}::GetSitearray(${2:\\$FORM_ID})$0"},
		{"trigger": "CForm::GetTemplateList", "contents": "${1:CForm}::GetTemplateList(${2:\\$type='SHOW'}, ${2:\\$path='xxx'}, ${4:\\$WEB_FORM_ID=0})$0"},
		{"trigger": "CForm::GetTextAreaField", "contents": "${1:CForm}::GetTextAreaField(${2:\\$FIELD_NAME}, ${2:\\$WIDTH=''}, ${4:\\$HEIGHT=''}, ${4:\\$PARAM=''}, ${6:\\$VALUE=''})$0"},
		{"trigger": "CForm::GetTextAreaValue", "contents": "${1:CForm}::GetTextAreaValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetTextField", "contents": "${1:CForm}::GetTextField(${2:\\$FIELD_NAME}, ${2:\\$VALUE=''}, ${4:\\$SIZE=''}, ${4:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetTextFilter", "contents": "${1:CForm}::GetTextFilter(${2:\\$FID}, ${2:\\$size='45'}, ${4:\\$field_text='class=\\'inputtext\\''}, ${4:\\$field_checkbox='class=\\'inputcheckbox\\''})$0"},
		{"trigger": "CForm::GetTextValue", "contents": "${1:CForm}::GetTextValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::GetUrlField", "contents": "${1:CForm}::GetUrlField(${2:\\$FIELD_NAME}, ${2:\\$VALUE=''}, ${4:\\$SIZE=''}, ${4:\\$PARAM=''})$0"},
		{"trigger": "CForm::GetUrlValue", "contents": "${1:CForm}::GetUrlValue(${2:\\$FIELD_NAME}, ${2:\\$arAnswer}, ${4:\\$arrVALUES=false})$0"},
		{"trigger": "CForm::IsAdmin", "contents": "${1:CForm}::IsAdmin()$0"},
		{"trigger": "CForm::Reset", "contents": "${1:CForm}::Reset(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm::Set", "contents": "${1:CForm}::Set(${2:\\$arFields}, ${2:\\$FORM_ID=false}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm::SetMailTemplate", "contents": "${1:CForm}::SetMailTemplate(${2:\\$WEB_FORM_ID}, ${2:\\$ADD_NEW_TEMPLATE='Y'}, ${4:\\$old_SID=''}, ${4:\\$bReturnFullInfo = false})$0"},
		{"trigger": "CForm::ShowRequired", "contents": "${1:CForm}::ShowRequired(${2:\\$flag})$0"},
		{"trigger": "CForm::__check_PushError", "contents": "${1:CForm}::__check_PushError(${2:&\\$container}, ${2:\\$MESSAGE}, ${4:\\$key = false})$0"},
		{"trigger": "CForm::err_mess", "contents": "${1:CForm}::err_mess()$0"},
		{"trigger": "CForm::isCAPTCHAInTemplate", "contents": "${1:CForm}::isCAPTCHAInTemplate(${2:\\$tpl})$0"},
		{"trigger": "CForm::isFieldInTemplate", "contents": "${1:CForm}::isFieldInTemplate(${2:\\$FIELD_SID}, ${2:\\$tpl})$0"},
		{"trigger": "CFormAnswer::CheckFields", "contents": "${1:CFormAnswer}::CheckFields(${2:\\$arFields}, ${2:\\$ANSWER_ID=false})$0"},
		{"trigger": "CFormAnswer::Copy", "contents": "${1:CFormAnswer}::Copy(${2:\\$ID}, ${2:\\$NEW_QUESTION_ID=false})$0"},
		{"trigger": "CFormAnswer::Delete", "contents": "${1:CFormAnswer}::Delete(${2:\\$ID}, ${2:\\$QUESTION_ID=false})$0"},
		{"trigger": "CFormAnswer::GetByID", "contents": "${1:CFormAnswer}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CFormAnswer::GetList", "contents": "${1:CFormAnswer}::GetList(${2:\\$QUESTION_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CFormAnswer::GetTypeList", "contents": "${1:CFormAnswer}::GetTypeList()$0"},
		{"trigger": "CFormAnswer::Set", "contents": "${1:CFormAnswer}::Set(${2:\\$arFields}, ${2:\\$ANSWER_ID=false})$0"},
		{"trigger": "CFormAnswer::err_mess", "contents": "${1:CFormAnswer}::err_mess()$0"},
		{"trigger": "CFormCrm::Add", "contents": "${1:CFormCrm}::Add(${2:\\$arFields})$0"},
		{"trigger": "CFormCrm::AddLead", "contents": "${1:CFormCrm}::AddLead(${2:\\$FORM_ID}, ${2:\\$RESULT_ID}, ${4:\\$arLink = null})$0"},
		{"trigger": "CFormCrm::CheckFields", "contents": "${1:CFormCrm}::CheckFields(${2:\\$action}, ${2:&\\$arFields})$0"},
		{"trigger": "CFormCrm::Delete", "contents": "${1:CFormCrm}::Delete(${2:\\$ID})$0"},
		{"trigger": "CFormCrm::GetByFormID", "contents": "${1:CFormCrm}::GetByFormID(${2:\\$FORM_ID})$0"},
		{"trigger": "CFormCrm::GetByID", "contents": "${1:CFormCrm}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CFormCrm::GetFields", "contents": "${1:CFormCrm}::GetFields(${2:\\$LINK_ID})$0"},
		{"trigger": "CFormCrm::GetFilterOperation", "contents": "${1:CFormCrm}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CFormCrm::GetList", "contents": "${1:CFormCrm}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CFormCrm::PrepareSql", "contents": "${1:CFormCrm}::PrepareSql(${2:&\\$arFields}, ${2:\\$arOrder}, ${4:&\\$arFilter}, ${4:\\$arGroupBy}, ${6:\\$arSelectFields})$0"},
		{"trigger": "CFormCrm::SetForm", "contents": "${1:CFormCrm}::SetForm(${2:\\$FORM_ID}, ${2:\\$arParams})$0"},
		{"trigger": "CFormCrm::Update", "contents": "${1:CFormCrm}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CFormCrm::_addField", "contents": "${1:CFormCrm}::_addField(${2:\\$FORM_ID}, ${2:\\$CRM_ID}, ${4:\\$crm_field})$0"},
		{"trigger": "CFormCrm::_getAllFormFields", "contents": "${1:CFormCrm}::_getAllFormFields(${2:\\$WEB_FORM_ID}, ${2:\\$RESULT_ID}, ${4:\\$arAnswers})$0"},
		{"trigger": "CFormCrm::_getAllFormFieldsHTML", "contents": "${1:CFormCrm}::_getAllFormFieldsHTML(${2:\\$WEB_FORM_ID}, ${2:\\$RESULT_ID}, ${4:\\$arAnswers})$0"},
		{"trigger": "CFormCrm::onResultAdded", "contents": "${1:CFormCrm}::onResultAdded(${2:\\$FORM_ID}, ${2:\\$RESULT_ID})$0"},
		{"trigger": "CFormCrmSender::AddLead", "contents": "${1:CFormCrmSender}::AddLead(${2:\\$arLeadFields})$0"},
		{"trigger": "CFormCrmSender::GetAuthHash", "contents": "${1:CFormCrmSender}::GetAuthHash()$0"},
		{"trigger": "CFormCrmSender::GetFields", "contents": "${1:CFormCrmSender}::GetFields(${2:\\$bReload = false})$0"},
		{"trigger": "CFormCrmSender::GetLastResult", "contents": "${1:CFormCrmSender}::GetLastResult()$0"},
		{"trigger": "CFormCrmSender::__construct", "contents": "${1:CFormCrmSender}::__construct(${2:\\$ID}, ${2:\\$arAuth = null})$0"},
		{"trigger": "CFormCrmSender::_cacheId", "contents": "${1:CFormCrmSender}::_cacheId()$0"},
		{"trigger": "CFormCrmSender::_query", "contents": "${1:CFormCrmSender}::_query(${2:\\$method}, ${2:\\$params = array()})$0"},
		{"trigger": "CFormCrmSender::_setAuthHash", "contents": "${1:CFormCrmSender}::_setAuthHash(${2:\\$hash})$0"},
		{"trigger": "CFormEventHandlers::sendOnAfterResultStatusChange", "contents": "${1:CFormEventHandlers}::sendOnAfterResultStatusChange(${2:\\$WEB_FORM_ID}, ${2:\\$RESULT_ID}, ${4:\\$NEW_STATUS_ID = false}, ${4:\\$CHECK_RIGHTS = 'Y'})$0"},
		{"trigger": "CFormField::Copy", "contents": "${1:CFormField}::Copy(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'}, ${4:\\$NEW_FORM_ID=false})$0"},
		{"trigger": "CFormField::Delete", "contents": "${1:CFormField}::Delete(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CFormField::GetByID", "contents": "${1:CFormField}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CFormField::GetBySID", "contents": "${1:CFormField}::GetBySID(${2:\\$SID}, ${2:\\$FORM_ID = false})$0"},
		{"trigger": "CFormField::GetFilterList", "contents": "${1:CFormField}::GetFilterList(${2:\\$WEB_FORM_ID}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CFormField::GetFilterTypeList", "contents": "${1:CFormField}::GetFilterTypeList(${2:&\\$arrUSER}, ${2:&\\$arrANSWER_TEXT}, ${4:&\\$arrANSWER_VALUE}, ${4:&\\$arrFIELD})$0"},
		{"trigger": "CFormField::GetList", "contents": "${1:CFormField}::GetList(${2:\\$WEB_FORM_ID}, ${2:\\$get_fields}, ${4:&\\$by}, ${4:&\\$order}, ${6:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CFormField::GetNextSort", "contents": "${1:CFormField}::GetNextSort(${2:\\$WEB_FORM_ID})$0"},
		{"trigger": "CFormField::GetTypeList", "contents": "${1:CFormField}::GetTypeList()$0"},
		{"trigger": "CFormField::Reset", "contents": "${1:CFormField}::Reset(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CFormField::Set", "contents": "${1:CFormField}::Set(${2:\\$arFields}, ${2:\\$FIELD_ID=false}, ${4:\\$CHECK_RIGHTS='Y'}, ${4:\\$UPDATE_FILTER='Y'})$0"},
		{"trigger": "CFormField::err_mess", "contents": "${1:CFormField}::err_mess()$0"},
		{"trigger": "CFormOutput::CAllFormOutput", "contents": "${1:CFormOutput}::CAllFormOutput()$0"},
		{"trigger": "CFormOutput::CFormOutput", "contents": "${1:CFormOutput}::CFormOutput()$0"},
		{"trigger": "CFormOutput::CheckTemplate", "contents": "${1:CFormOutput}::CheckTemplate(${2:\\$FORM_TEMPLATE}, ${2:&\\$arrFS})$0"},
		{"trigger": "CFormOutput::GetResultStatusCSSClass", "contents": "${1:CFormOutput}::GetResultStatusCSSClass()$0"},
		{"trigger": "CFormOutput::IncludeFormCustomTemplate", "contents": "${1:CFormOutput}::IncludeFormCustomTemplate()$0"},
		{"trigger": "CFormOutput::IncludeFormTemplate", "contents": "${1:CFormOutput}::IncludeFormTemplate()$0"},
		{"trigger": "CFormOutput::InitializeTemplate", "contents": "${1:CFormOutput}::InitializeTemplate(${2:\\$arParams}, ${2:\\$arResult})$0"},
		{"trigger": "CFormOutput::PrepareFormData", "contents": "${1:CFormOutput}::PrepareFormData(${2:\\$arrFS})$0"},
		{"trigger": "CFormOutput::ShowApplyButton", "contents": "${1:CFormOutput}::ShowApplyButton(${2:\\$caption = ''}, ${2:\\$css_style = ''})$0"},
		{"trigger": "CFormOutput::ShowCaptcha", "contents": "${1:CFormOutput}::ShowCaptcha()$0"},
		{"trigger": "CFormOutput::ShowCaptchaField", "contents": "${1:CFormOutput}::ShowCaptchaField()$0"},
		{"trigger": "CFormOutput::ShowCaptchaImage", "contents": "${1:CFormOutput}::ShowCaptchaImage()$0"},
		{"trigger": "CFormOutput::ShowDateFormat", "contents": "${1:CFormOutput}::ShowDateFormat(${2:\\$css_style = ''})$0"},
		{"trigger": "CFormOutput::ShowErrorMsg", "contents": "${1:CFormOutput}::ShowErrorMsg()$0"},
		{"trigger": "CFormOutput::ShowFormDescription", "contents": "${1:CFormOutput}::ShowFormDescription(${2:\\$css_style = ''})$0"},
		{"trigger": "CFormOutput::ShowFormErrors", "contents": "${1:CFormOutput}::ShowFormErrors()$0"},
		{"trigger": "CFormOutput::ShowFormErrorsText", "contents": "${1:CFormOutput}::ShowFormErrorsText()$0"},
		{"trigger": "CFormOutput::ShowFormFooter", "contents": "${1:CFormOutput}::ShowFormFooter()$0"},
		{"trigger": "CFormOutput::ShowFormHeader", "contents": "${1:CFormOutput}::ShowFormHeader()$0"},
		{"trigger": "CFormOutput::ShowFormImage", "contents": "${1:CFormOutput}::ShowFormImage(${2:\\$sAlign = ''}, ${2:\\$iMaxW=''}, ${4:\\$iMaxH=''}, ${4:\\$bPopup='N'}, ${6:\\$strPopupTitle=''}, ${6:\\$sHSpace = ''}, ${8:\\$sVSpace = ''}, ${8:\\$sBorder = ''})$0"},
		{"trigger": "CFormOutput::ShowFormNote", "contents": "${1:CFormOutput}::ShowFormNote()$0"},
		{"trigger": "CFormOutput::ShowFormNoteText", "contents": "${1:CFormOutput}::ShowFormNoteText()$0"},
		{"trigger": "CFormOutput::ShowFormTitle", "contents": "${1:CFormOutput}::ShowFormTitle(${2:\\$css_style = ''})$0"},
		{"trigger": "CFormOutput::ShowInput", "contents": "${1:CFormOutput}::ShowInput(${2:\\$FIELD_SID}, ${2:\\$caption_css_class = ''})$0"},
		{"trigger": "CFormOutput::ShowInputCaption", "contents": "${1:CFormOutput}::ShowInputCaption(${2:\\$FIELD_SID}, ${2:\\$css_style = ''})$0"},
		{"trigger": "CFormOutput::ShowInputCaptionImage", "contents": "${1:CFormOutput}::ShowInputCaptionImage(${2:\\$FIELD_SID}, ${2:\\$sAlign = ''}, ${4:\\$iMaxW=''}, ${4:\\$iMaxH=''}, ${6:\\$bPopup='N'}, ${6:\\$strPopupTitle=''}, ${8:\\$sHSpace = ''}, ${8:\\$sVSpace = ''}, ${10:\\$sBorder = ''})$0"},
		{"trigger": "CFormOutput::ShowRequired", "contents": "${1:CFormOutput}::ShowRequired()$0"},
		{"trigger": "CFormOutput::ShowResetButton", "contents": "${1:CFormOutput}::ShowResetButton(${2:\\$caption = ''}, ${2:\\$css_style = ''})$0"},
		{"trigger": "CFormOutput::ShowResultStatus", "contents": "${1:CFormOutput}::ShowResultStatus(${2:\\$bNotShowCSS = 'N'})$0"},
		{"trigger": "CFormOutput::ShowResultStatusForm", "contents": "${1:CFormOutput}::ShowResultStatusForm()$0"},
		{"trigger": "CFormOutput::ShowResultStatusText", "contents": "${1:CFormOutput}::ShowResultStatusText()$0"},
		{"trigger": "CFormOutput::ShowSubmitButton", "contents": "${1:CFormOutput}::ShowSubmitButton(${2:\\$caption = ''}, ${2:\\$css_style = ''})$0"},
		{"trigger": "CFormOutput::__admin_GetInputAnswersStructure", "contents": "${1:CFormOutput}::__admin_GetInputAnswersStructure(${2:\\$FIELD_SID})$0"},
		{"trigger": "CFormOutput::__admin_GetInputType", "contents": "${1:CFormOutput}::__admin_GetInputType(${2:\\$FIELD_SID})$0"},
		{"trigger": "CFormOutput::__admin_ShowInputCaption", "contents": "${1:CFormOutput}::__admin_ShowInputCaption(${2:\\$FIELD_SID}, ${2:\\$caption_css_class = ''}, ${4:\\$unform = false})$0"},
		{"trigger": "CFormOutput::__check_form_cache", "contents": "${1:CFormOutput}::__check_form_cache()$0"},
		{"trigger": "CFormOutput::__clear_form_cache_files", "contents": "${1:CFormOutput}::__clear_form_cache_files()$0"},
		{"trigger": "CFormOutput::err_mess", "contents": "${1:CFormOutput}::err_mess()$0"},
		{"trigger": "CFormOutput::getFormImagePath", "contents": "${1:CFormOutput}::getFormImagePath()$0"},
		{"trigger": "CFormOutput::getInputCaptionImagePath", "contents": "${1:CFormOutput}::getInputCaptionImagePath(${2:\\$FIELD_SID})$0"},
		{"trigger": "CFormOutput::isAccessForm", "contents": "${1:CFormOutput}::isAccessForm()$0"},
		{"trigger": "CFormOutput::isAccessFormParams", "contents": "${1:CFormOutput}::isAccessFormParams()$0"},
		{"trigger": "CFormOutput::isAccessFormResult", "contents": "${1:CFormOutput}::isAccessFormResult(${2:\\$arrResult})$0"},
		{"trigger": "CFormOutput::isAccessFormResultEdit", "contents": "${1:CFormOutput}::isAccessFormResultEdit()$0"},
		{"trigger": "CFormOutput::isAccessFormResultList", "contents": "${1:CFormOutput}::isAccessFormResultList()$0"},
		{"trigger": "CFormOutput::isAccessFormResultView", "contents": "${1:CFormOutput}::isAccessFormResultView()$0"},
		{"trigger": "CFormOutput::isFormDescription", "contents": "${1:CFormOutput}::isFormDescription()$0"},
		{"trigger": "CFormOutput::isFormErrors", "contents": "${1:CFormOutput}::isFormErrors()$0"},
		{"trigger": "CFormOutput::isFormImage", "contents": "${1:CFormOutput}::isFormImage()$0"},
		{"trigger": "CFormOutput::isFormNote", "contents": "${1:CFormOutput}::isFormNote()$0"},
		{"trigger": "CFormOutput::isFormTitle", "contents": "${1:CFormOutput}::isFormTitle()$0"},
		{"trigger": "CFormOutput::isInputCaptionImage", "contents": "${1:CFormOutput}::isInputCaptionImage(${2:\\$FIELD_SID})$0"},
		{"trigger": "CFormOutput::isResultStatusChangeAccess", "contents": "${1:CFormOutput}::isResultStatusChangeAccess()$0"},
		{"trigger": "CFormOutput::isStatisticIncluded", "contents": "${1:CFormOutput}::isStatisticIncluded()$0"},
		{"trigger": "CFormOutput::isUseCaptcha", "contents": "${1:CFormOutput}::isUseCaptcha()$0"},
		{"trigger": "CFormOutput::setError", "contents": "${1:CFormOutput}::setError(${2:\\$error})$0"},
		{"trigger": "CFormOutput::setInputDefaultValue", "contents": "${1:CFormOutput}::setInputDefaultValue(${2:\\$FIELD_SID}, ${2:\\$value}, ${4:\\$ANSWER_ID = false})$0"},
		{"trigger": "CFormOutput_old::CaptchaInitialize", "contents": "${1:CFormOutput_old}::CaptchaInitialize()$0"},
		{"trigger": "CFormOutput_old::Init", "contents": "${1:CFormOutput_old}::Init(${2:\\$arParams}, ${2:\\$admin = false})$0"},
		{"trigger": "CFormOutput_old::Out", "contents": "${1:CFormOutput_old}::Out()$0"},
		{"trigger": "CFormOutput_old::ShowAnswer", "contents": "${1:CFormOutput_old}::ShowAnswer(${2:\\$FIELD_SID})$0"},
		{"trigger": "CFormOutput_old::__checkFilter", "contents": "${1:CFormOutput_old}::__checkFilter(${2:&\\$str_error})$0"},
		{"trigger": "CFormOutput_old::__prepareDataForTpl", "contents": "${1:CFormOutput_old}::__prepareDataForTpl()$0"},
		{"trigger": "CFormOutput_old::__prepareFilter", "contents": "${1:CFormOutput_old}::__prepareFilter()$0"},
		{"trigger": "CFormOutput_old::getData", "contents": "${1:CFormOutput_old}::getData(${2:&\\$arResult})$0"},
		{"trigger": "CFormOutput_old::getListData", "contents": "${1:CFormOutput_old}::getListData()$0"},
		{"trigger": "CFormResult::Add", "contents": "${1:CFormResult}::Add(${2:\\$WEB_FORM_ID}, ${2:\\$arrVALUES=false}, ${4:\\$CHECK_RIGHTS='Y'}, ${4:\\$USER_ID=false})$0"},
		{"trigger": "CFormResult::AddAnswer", "contents": "${1:CFormResult}::AddAnswer(${2:\\$arFields})$0"},
		{"trigger": "CFormResult::Delete", "contents": "${1:CFormResult}::Delete(${2:\\$RESULT_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CFormResult::GetByID", "contents": "${1:CFormResult}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CFormResult::GetCount", "contents": "${1:CFormResult}::GetCount(${2:\\$WEB_FORM_ID})$0"},
		{"trigger": "CFormResult::GetDataByID", "contents": "${1:CFormResult}::GetDataByID(${2:\\$RESULT_ID}, ${2:\\$arrFIELD_SID}, ${4:&\\$arrRES}, ${4:&\\$arrANSWER})$0"},
		{"trigger": "CFormResult::GetDataByIDForHTML", "contents": "${1:CFormResult}::GetDataByIDForHTML(${2:\\$RESULT_ID}, ${2:\\$GET_ADDITIONAL='N'})$0"},
		{"trigger": "CFormResult::GetFileByAnswerID", "contents": "${1:CFormResult}::GetFileByAnswerID(${2:\\$RESULT_ID}, ${2:\\$ANSWER_ID})$0"},
		{"trigger": "CFormResult::GetFileByHash", "contents": "${1:CFormResult}::GetFileByHash(${2:\\$RESULT_ID}, ${2:\\$HASH})$0"},
		{"trigger": "CFormResult::GetList", "contents": "${1:CFormResult}::GetList(${2:\\$WEB_FORM_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered}, ${6:\\$CHECK_RIGHTS='Y'}, ${8:\\$records_limit=false})$0"},
		{"trigger": "CFormResult::GetPermissions", "contents": "${1:CFormResult}::GetPermissions(${2:\\$RESULT_ID}, ${2:&\\$CURRENT_STATUS_ID})$0"},
		{"trigger": "CFormResult::Mail", "contents": "${1:CFormResult}::Mail(${2:\\$RESULT_ID}, ${2:\\$TEMPLATE_ID = false})$0"},
		{"trigger": "CFormResult::PrepareFilter", "contents": "${1:CFormResult}::PrepareFilter(${2:\\$WEB_FORM_ID}, ${2:\\$arFilter})$0"},
		{"trigger": "CFormResult::Reset", "contents": "${1:CFormResult}::Reset(${2:\\$RESULT_ID}, ${2:\\$DELETE_FILES=true}, ${4:\\$DELETE_ADDITIONAL='N'}, ${4:\\$arrException=array()})$0"},
		{"trigger": "CFormResult::SetCRMFlag", "contents": "${1:CFormResult}::SetCRMFlag(${2:\\$RESULT_ID}, ${2:\\$flag_value})$0"},
		{"trigger": "CFormResult::SetEvent", "contents": "${1:CFormResult}::SetEvent(${2:\\$RESULT_ID}, ${2:\\$IN_EVENT1=false}, ${4:\\$IN_EVENT2=false}, ${4:\\$IN_EVENT3=false}, ${6:\\$money=''}, ${6:\\$currency=''}, ${8:\\$goto=''}, ${8:\\$chargeback='N'})$0"},
		{"trigger": "CFormResult::SetField", "contents": "${1:CFormResult}::SetField(${2:\\$RESULT_ID}, ${2:\\$FIELD_SID}, ${4:\\$VALUE=false})$0"},
		{"trigger": "CFormResult::SetStatus", "contents": "${1:CFormResult}::SetStatus(${2:\\$RESULT_ID}, ${2:\\$NEW_STATUS_ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CFormResult::Update", "contents": "${1:CFormResult}::Update(${2:\\$RESULT_ID}, ${2:\\$arrVALUES=false}, ${4:\\$UPDATE_ADDITIONAL='N'}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CFormResult::UpdateField", "contents": "${1:CFormResult}::UpdateField(${2:\\$arFields}, ${2:\\$RESULT_ID}, ${4:\\$FIELD_ID})$0"},
		{"trigger": "CFormResult::err_mess", "contents": "${1:CFormResult}::err_mess()$0"},
		{"trigger": "CFormResult_old::Edit", "contents": "${1:CFormResult_old}::Edit(${2:\\$RESULT_ID}, ${2:\\$arrVALUES}, ${4:\\$TEMPLATE=''}, ${4:\\$EDIT_ADDITIONAL='N'}, ${6:\\$EDIT_STATUS='N'})$0"},
		{"trigger": "CFormResult_old::GetDataByIDForWeb", "contents": "${1:CFormResult_old}::GetDataByIDForWeb(${2:\\$RESULT_ID}, ${2:\\$GET_ADDITIONAL='N'})$0"},
		{"trigger": "CFormResult_old::GetMaxPermissions", "contents": "${1:CFormResult_old}::GetMaxPermissions()$0"},
		{"trigger": "CFormResult_old::Show", "contents": "${1:CFormResult_old}::Show(${2:\\$RESULT_ID}, ${2:\\$TEMPLATE=''}, ${4:\\$TEMPLATE_TYPE='show'}, ${4:\\$SHOW_ADDITIONAL='N'}, ${6:\\$SHOW_ANSWER_VALUE='Y'}, ${6:\\$SHOW_STATUS='N'})$0"},
		{"trigger": "CFormStatus::CheckFields", "contents": "${1:CFormStatus}::CheckFields(${2:\\$arFields}, ${2:\\$STATUS_ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CFormStatus::Copy", "contents": "${1:CFormStatus}::Copy(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'}, ${4:\\$NEW_FORM_ID=false})$0"},
		{"trigger": "CFormStatus::Delete", "contents": "${1:CFormStatus}::Delete(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CFormStatus::GetByID", "contents": "${1:CFormStatus}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CFormStatus::GetDefault", "contents": "${1:CFormStatus}::GetDefault(${2:\\$WEB_FORM_ID})$0"},
		{"trigger": "CFormStatus::GetDropdown", "contents": "${1:CFormStatus}::GetDropdown(${2:\\$FORM_ID}, ${2:\\$PERMISSION = array('MOVE')}, ${4:\\$OWNER_ID=0})$0"},
		{"trigger": "CFormStatus::GetList", "contents": "${1:CFormStatus}::GetList(${2:\\$FORM_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CFormStatus::GetMailTemplatearray", "contents": "${1:CFormStatus}::GetMailTemplatearray(${2:\\$STATUS_ID})$0"},
		{"trigger": "CFormStatus::GetMaxPermissions", "contents": "${1:CFormStatus}::GetMaxPermissions()$0"},
		{"trigger": "CFormStatus::GetNextSort", "contents": "${1:CFormStatus}::GetNextSort(${2:\\$WEB_FORM_ID})$0"},
		{"trigger": "CFormStatus::GetPermissionList", "contents": "${1:CFormStatus}::GetPermissionList(${2:\\$STATUS_ID}, ${2:&\\$arPERMISSION_VIEW}, ${4:&\\$arPERMISSION_MOVE}, ${4:&\\$arPERMISSION_EDIT}, ${6:&\\$arPERMISSION_DELETE})$0"},
		{"trigger": "CFormStatus::GetPermissions", "contents": "${1:CFormStatus}::GetPermissions(${2:\\$STATUS_ID})$0"},
		{"trigger": "CFormStatus::GetTemplateList", "contents": "${1:CFormStatus}::GetTemplateList(${2:\\$STATUS_ID})$0"},
		{"trigger": "CFormStatus::Set", "contents": "${1:CFormStatus}::Set(${2:\\$arFields}, ${2:\\$STATUS_ID=false}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CFormStatus::SetMailTemplate", "contents": "${1:CFormStatus}::SetMailTemplate(${2:\\$WEB_FORM_ID}, ${2:\\$STATUS_ID}, ${4:\\$ADD_NEW_TEMPLATE='Y'}, ${4:\\$old_SID=''}, ${6:\\$bReturnFullInfo = false})$0"},
		{"trigger": "CFormStatus::err_mess", "contents": "${1:CFormStatus}::err_mess()$0"},
		{"trigger": "CFormValidator::Clear", "contents": "${1:CFormValidator}::Clear(${2:\\$FIELD_ID})$0"},
		{"trigger": "CFormValidator::Execute", "contents": "${1:CFormValidator}::Execute(${2:\\$arValidator}, ${2:\\$arQuestion}, ${4:\\$arAnswers}, ${4:\\$arAnswerValues})$0"},
		{"trigger": "CFormValidator::GetAllList", "contents": "${1:CFormValidator}::GetAllList(${2:\\$arFilter = array()})$0"},
		{"trigger": "CFormValidator::GetList", "contents": "${1:CFormValidator}::GetList(${2:\\$FIELD_ID}, ${2:\\$arFilter = array()}, ${4:&\\$by}, ${4:&\\$order})$0"},
		{"trigger": "CFormValidator::GetListForm", "contents": "${1:CFormValidator}::GetListForm(${2:\\$WEB_FORM_ID}, ${2:\\$arFilter = array()}, ${4:&\\$by}, ${4:&\\$order})$0"},
		{"trigger": "CFormValidator::GetSettings", "contents": "${1:CFormValidator}::GetSettings(${2:\\$arValidator})$0"},
		{"trigger": "CFormValidator::GetSettingsarray", "contents": "${1:CFormValidator}::GetSettingsarray(${2:\\$arValidator}, ${2:\\$strParams})$0"},
		{"trigger": "CFormValidator::GetSettingsString", "contents": "${1:CFormValidator}::GetSettingsString(${2:\\$arValidator}, ${2:\\$arParams})$0"},
		{"trigger": "CFormValidator::Set", "contents": "${1:CFormValidator}::Set(${2:\\$WEB_FORM_ID}, ${2:\\$FIELD_ID}, ${4:\\$sValSID}, ${4:\\$arParams = array()}, ${6:\\$C_SORT = 100})$0"},
		{"trigger": "CFormValidator::SetBatch", "contents": "${1:CFormValidator}::SetBatch(${2:\\$WEB_FORM_ID}, ${2:\\$FIELD_ID}, ${4:\\$arValidators})$0"},
		{"trigger": "CFormValidator::__getList", "contents": "${1:CFormValidator}::__getList(${2:\\$arFilter = array()}, ${2:&\\$by}, ${4:&\\$order})$0"},
		{"trigger": "CFormValidator::err_mess", "contents": "${1:CFormValidator}::err_mess()$0"},
		{"trigger": "CForm_old::Add", "contents": "${1:CForm_old}::Add(${2:\\$WEB_FORM_ID}, ${2:\\$arrVALUES=false}, ${4:\\$CHECK_RIGHTS='Y'}, ${4:\\$USER_ID=false})$0"},
		{"trigger": "CForm_old::AddResultAnswer", "contents": "${1:CForm_old}::AddResultAnswer(${2:\\$arFields})$0"},
		{"trigger": "CForm_old::DeleteAnswer", "contents": "${1:CForm_old}::DeleteAnswer(${2:\\$ID})$0"},
		{"trigger": "CForm_old::DeleteField", "contents": "${1:CForm_old}::DeleteField(${2:\\$WEB_FORM_ID}, ${2:\\$ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm_old::DeleteResult", "contents": "${1:CForm_old}::DeleteResult(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm_old::EditResult", "contents": "${1:CForm_old}::EditResult(${2:\\$RESULT_ID}, ${2:\\$arrVALUES}, ${4:\\$TEMPLATE=''}, ${4:\\$EDIT_ADDITIONAL='N'}, ${6:\\$EDIT_STATUS='N'})$0"},
		{"trigger": "CForm_old::GetAdditionaFieldTypeList", "contents": "${1:CForm_old}::GetAdditionaFieldTypeList()$0"},
		{"trigger": "CForm_old::GetAnswerByID", "contents": "${1:CForm_old}::GetAnswerByID(${2:\\$ID})$0"},
		{"trigger": "CForm_old::GetAnswerList", "contents": "${1:CForm_old}::GetAnswerList(${2:\\$FIELD_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CForm_old::GetAnswerTypeList", "contents": "${1:CForm_old}::GetAnswerTypeList()$0"},
		{"trigger": "CForm_old::GetByVarname", "contents": "${1:CForm_old}::GetByVarname(${2:\\$VARNAME})$0"},
		{"trigger": "CForm_old::GetClosedFields", "contents": "${1:CForm_old}::GetClosedFields(${2:\\$WEB_FORM_ID}, ${2:\\$arrFields})$0"},
		{"trigger": "CForm_old::GetDefaultStatus", "contents": "${1:CForm_old}::GetDefaultStatus(${2:\\$WEB_FORM_ID})$0"},
		{"trigger": "CForm_old::GetFieldByID", "contents": "${1:CForm_old}::GetFieldByID(${2:\\$ID})$0"},
		{"trigger": "CForm_old::GetFieldByVarname", "contents": "${1:CForm_old}::GetFieldByVarname(${2:\\$SID})$0"},
		{"trigger": "CForm_old::GetFieldList", "contents": "${1:CForm_old}::GetFieldList(${2:\\$WEB_FORM_ID}, ${2:\\$additional}, ${4:&\\$by}, ${4:&\\$order}, ${6:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CForm_old::GetFileValue", "contents": "${1:CForm_old}::GetFileValue(${2:\\$RESULT_ID}, ${2:\\$ANSWER_ID})$0"},
		{"trigger": "CForm_old::GetFilterList", "contents": "${1:CForm_old}::GetFilterList(${2:\\$WEB_FORM_ID}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CForm_old::GetFilterTypeList", "contents": "${1:CForm_old}::GetFilterTypeList(${2:&\\$arrUSER}, ${2:&\\$arrANSWER_TEXT}, ${4:&\\$arrANSWER_VALUE}, ${4:&\\$arrFIELD})$0"},
		{"trigger": "CForm_old::GetNextStatusSort", "contents": "${1:CForm_old}::GetNextStatusSort(${2:\\$WEB_FORM_ID})$0"},
		{"trigger": "CForm_old::GetResultByID", "contents": "${1:CForm_old}::GetResultByID(${2:\\$RESULT_ID})$0"},
		{"trigger": "CForm_old::GetResultFields", "contents": "${1:CForm_old}::GetResultFields(${2:\\$RESULT_ID}, ${2:\\$arrFIELD_VARNAME}, ${4:&\\$arrRES}, ${4:&\\$arrANSWER})$0"},
		{"trigger": "CForm_old::GetResultList", "contents": "${1:CForm_old}::GetResultList(${2:\\$WEB_FORM_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered}, ${6:\\$CHECK_RIGHTS='Y'}, ${8:\\$records_limit=false})$0"},
		{"trigger": "CForm_old::GetResultPermission", "contents": "${1:CForm_old}::GetResultPermission(${2:\\$RESULT_ID}, ${2:&\\$CURRENT_STATUS_ID})$0"},
		{"trigger": "CForm_old::GetResultValuesFromDB", "contents": "${1:CForm_old}::GetResultValuesFromDB(${2:\\$RESULT_ID}, ${2:\\$GET_ADDITIONAL='N'})$0"},
		{"trigger": "CForm_old::GetResultsCount", "contents": "${1:CForm_old}::GetResultsCount(${2:\\$WEB_FORM_ID})$0"},
		{"trigger": "CForm_old::GetStatusByID", "contents": "${1:CForm_old}::GetStatusByID(${2:\\$ID})$0"},
		{"trigger": "CForm_old::GetStatusDropdown", "contents": "${1:CForm_old}::GetStatusDropdown(${2:\\$WEB_FORM_ID}, ${2:\\$PERMISSION='MOVE'}, ${4:\\$OWNER_ID=0})$0"},
		{"trigger": "CForm_old::GetStatusList", "contents": "${1:CForm_old}::GetStatusList(${2:\\$WEB_FORM_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CForm_old::GetStatusPermission", "contents": "${1:CForm_old}::GetStatusPermission(${2:\\$STATUS_ID})$0"},
		{"trigger": "CForm_old::IsOldVersion", "contents": "${1:CForm_old}::IsOldVersion()$0"},
		{"trigger": "CForm_old::Mail", "contents": "${1:CForm_old}::Mail(${2:\\$RESULT_ID}, ${2:\\$TEMPLATE_ID=''})$0"},
		{"trigger": "CForm_old::PrepareResultFilter", "contents": "${1:CForm_old}::PrepareResultFilter(${2:\\$WEB_FORM_ID}, ${2:\\$arFilter})$0"},
		{"trigger": "CForm_old::ResetField", "contents": "${1:CForm_old}::ResetField(${2:\\$WEB_FORM_ID}, ${2:\\$ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm_old::ResetResult", "contents": "${1:CForm_old}::ResetResult(${2:\\$ID}, ${2:\\$WEB_FORM_ID}, ${4:\\$DELETE_IMAGES=true}, ${4:\\$DELETE_ADDITIONAL='N'}, ${6:\\$arrException=array()})$0"},
		{"trigger": "CForm_old::SetEvent", "contents": "${1:CForm_old}::SetEvent(${2:\\$RESULT_ID}, ${2:\\$IN_EVENT1=false}, ${4:\\$IN_EVENT2=false}, ${4:\\$IN_EVENT3=false}, ${6:\\$money=''}, ${6:\\$currency=''}, ${8:\\$goto=''}, ${8:\\$chargeback='N'})$0"},
		{"trigger": "CForm_old::SetResultField", "contents": "${1:CForm_old}::SetResultField(${2:\\$RESULT_ID}, ${2:\\$FIELD_VARNAME}, ${4:\\$VALUE})$0"},
		{"trigger": "CForm_old::SetResultStatus", "contents": "${1:CForm_old}::SetResultStatus(${2:\\$WEB_FORM_ID}, ${2:\\$RESULT_ID}, ${4:\\$NEW_STATUS_ID}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm_old::Show", "contents": "${1:CForm_old}::Show(${2:\\$WEB_FORM_VARNAME}, ${2:\\$arrVALUES=false}, ${4:\\$SHOW_TEMPLATE=false}, ${4:\\$PREVIEW='N'})$0"},
		{"trigger": "CForm_old::ShowResult", "contents": "${1:CForm_old}::ShowResult(${2:\\$RESULT_ID}, ${2:\\$TEMPLATE=''}, ${4:\\$TEMPLATE_TYPE='show'}, ${4:\\$SHOW_ADDITIONAL='N'}, ${6:\\$SHOW_ANSWER_VALUE='Y'}, ${6:\\$SHOW_STATUS='N'})$0"},
		{"trigger": "CForm_old::Update", "contents": "${1:CForm_old}::Update(${2:\\$RESULT_ID}, ${2:\\$arrVALUES=false}, ${4:\\$UPDATE_ADDITIONAL='N'}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CForm_old::UpdateResultField", "contents": "${1:CForm_old}::UpdateResultField(${2:\\$arFields}, ${2:\\$RESULT_ID}, ${4:\\$FIELD_ID})$0"},
		{"trigger": "_CFormCrmSenderResult::__construct", "contents": "${1:_CFormCrmSenderResult}::__construct(${2:\\$result_text})$0"},
		{"trigger": "_CFormCrmSenderResult::_process", "contents": "${1:_CFormCrmSenderResult}::_process()$0"},
		{"trigger": "_CFormCrmSenderResult::code", "contents": "${1:_CFormCrmSenderResult}::code()$0"},
		{"trigger": "_CFormCrmSenderResult::data", "contents": "${1:_CFormCrmSenderResult}::data()$0"},
		{"trigger": "_CFormCrmSenderResult::error", "contents": "${1:_CFormCrmSenderResult}::error()$0"},
		{"trigger": "_CFormCrmSenderResult::field", "contents": "${1:_CFormCrmSenderResult}::field(${2:\\$field})$0"},
		{"trigger": "CEventForum::GetAuditTypes", "contents": "${1:CEventForum}::GetAuditTypes()$0"},
		{"trigger": "CEventForum::GetEventInfo", "contents": "${1:CEventForum}::GetEventInfo(${2:\\$row}, ${2:\\$arParams})$0"},
		{"trigger": "CEventForum::GetFilter", "contents": "${1:CEventForum}::GetFilter()$0"},
		{"trigger": "CEventForum::GetFilterSQL", "contents": "${1:CEventForum}::GetFilterSQL(${2:\\$var})$0"},
		{"trigger": "CEventForum::MakeForumObject", "contents": "${1:CEventForum}::MakeForumObject()$0"},
		{"trigger": "CFilterDictionary::Add", "contents": "${1:CFilterDictionary}::Add(${2:\\$arFields})$0"},
		{"trigger": "CFilterDictionary::CheckFields", "contents": "${1:CFilterDictionary}::CheckFields(${2:\\$arFields = array()}, ${2:\\$ACTION = 'ADD'})$0"},
		{"trigger": "CFilterDictionary::Delete", "contents": "${1:CFilterDictionary}::Delete(${2:\\$ID})$0"},
		{"trigger": "CFilterDictionary::GetFilterOperation", "contents": "${1:CFilterDictionary}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CFilterDictionary::GetList", "contents": "${1:CFilterDictionary}::GetList(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false})$0"},
		{"trigger": "CFilterDictionary::Update", "contents": "${1:CFilterDictionary}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CFilterLetter::Add", "contents": "${1:CFilterLetter}::Add(${2:\\$arFields})$0"},
		{"trigger": "CFilterLetter::CheckFields", "contents": "${1:CFilterLetter}::CheckFields(${2:\\$arFields = array()})$0"},
		{"trigger": "CFilterLetter::Delete", "contents": "${1:CFilterLetter}::Delete(${2:\\$ID})$0"},
		{"trigger": "CFilterLetter::GetByID", "contents": "${1:CFilterLetter}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CFilterLetter::GetList", "contents": "${1:CFilterLetter}::GetList(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false})$0"},
		{"trigger": "CFilterLetter::Update", "contents": "${1:CFilterLetter}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CFilterUnquotableWords::Add", "contents": "${1:CFilterUnquotableWords}::Add(${2:\\$arFields})$0"},
		{"trigger": "CFilterUnquotableWords::CheckFields", "contents": "${1:CFilterUnquotableWords}::CheckFields(${2:\\$action = 'INSERT'}, ${2:\\$ID = false}, ${4:\\$arFields = array()})$0"},
		{"trigger": "CFilterUnquotableWords::CheckPattern", "contents": "${1:CFilterUnquotableWords}::CheckPattern(${2:\\$sPattern}, ${2:&\\$sError})$0"},
		{"trigger": "CFilterUnquotableWords::CreatePattern", "contents": "${1:CFilterUnquotableWords}::CreatePattern(${2:\\$pattern=''}, ${2:\\$DICTIONARY_ID=0})$0"},
		{"trigger": "CFilterUnquotableWords::Delete", "contents": "${1:CFilterUnquotableWords}::Delete(${2:\\$ID})$0"},
		{"trigger": "CFilterUnquotableWords::Filter", "contents": "${1:CFilterUnquotableWords}::Filter(${2:\\$message})$0"},
		{"trigger": "CFilterUnquotableWords::FilterPerm", "contents": "${1:CFilterUnquotableWords}::FilterPerm()$0"},
		{"trigger": "CFilterUnquotableWords::GenPattern", "contents": "${1:CFilterUnquotableWords}::GenPattern(${2:\\$ID=false}, ${2:\\$DICTIONARY_ID_T=0})$0"},
		{"trigger": "CFilterUnquotableWords::GenPatternAll", "contents": "${1:CFilterUnquotableWords}::GenPatternAll(${2:\\$DICTIONARY_ID_W=0}, ${2:\\$DICTIONARY_ID_T=0})$0"},
		{"trigger": "CFilterUnquotableWords::GetById", "contents": "${1:CFilterUnquotableWords}::GetById(${2:\\$ID})$0"},
		{"trigger": "CFilterUnquotableWords::GetFilterOperation", "contents": "${1:CFilterUnquotableWords}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CFilterUnquotableWords::GetList", "contents": "${1:CFilterUnquotableWords}::GetList(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false})$0"},
		{"trigger": "CFilterUnquotableWords::Update", "contents": "${1:CFilterUnquotableWords}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumAutosave::GetInstance", "contents": "${1:CForumAutosave}::GetInstance()$0"},
		{"trigger": "CForumAutosave::Init", "contents": "${1:CForumAutosave}::Init()$0"},
		{"trigger": "CForumAutosave::LoadScript", "contents": "${1:CForumAutosave}::LoadScript(${2:\\$arParams})$0"},
		{"trigger": "CForumAutosave::Reset", "contents": "${1:CForumAutosave}::Reset()$0"},
		{"trigger": "CForumAutosave::__construct", "contents": "${1:CForumAutosave}::__construct()$0"},
		{"trigger": "CForumCacheManager::CForumCacheManager", "contents": "${1:CForumCacheManager}::CForumCacheManager()$0"},
		{"trigger": "CForumCacheManager::ClearTag", "contents": "${1:CForumCacheManager}::ClearTag(${2:\\$type}, ${2:\\$ID=0})$0"},
		{"trigger": "CForumCacheManager::Compress", "contents": "${1:CForumCacheManager}::Compress(${2:\\$arDictCollection})$0"},
		{"trigger": "CForumCacheManager::Expand", "contents": "${1:CForumCacheManager}::Expand(${2:\\$arDictCollection})$0"},
		{"trigger": "CForumCacheManager::OnForumUpdate", "contents": "${1:CForumCacheManager}::OnForumUpdate(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumCacheManager::OnMessageAdd", "contents": "${1:CForumCacheManager}::OnMessageAdd(${2:&\\$ID}, ${2:&\\$arFields})$0"},
		{"trigger": "CForumCacheManager::OnMessageDelete", "contents": "${1:CForumCacheManager}::OnMessageDelete(${2:\\$ID}, ${2:\\$arMessage})$0"},
		{"trigger": "CForumCacheManager::OnMessageUpdate", "contents": "${1:CForumCacheManager}::OnMessageUpdate(${2:&\\$ID}, ${2:&\\$arFields})$0"},
		{"trigger": "CForumCacheManager::OnRate", "contents": "${1:CForumCacheManager}::OnRate(${2:\\$rateID}, ${2:\\$arData})$0"},
		{"trigger": "CForumCacheManager::OnTopicAdd", "contents": "${1:CForumCacheManager}::OnTopicAdd(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumCacheManager::OnTopicDelete", "contents": "${1:CForumCacheManager}::OnTopicDelete(${2:&\\$ID}, ${2:\\$arTopic})$0"},
		{"trigger": "CForumCacheManager::OnTopicUpdate", "contents": "${1:CForumCacheManager}::OnTopicUpdate(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumCacheManager::SetTag", "contents": "${1:CForumCacheManager}::SetTag(${2:\\$path}, ${2:\\$tags})$0"},
		{"trigger": "CForumEventLog::GetAuditTypes", "contents": "${1:CForumEventLog}::GetAuditTypes()$0"},
		{"trigger": "CForumEventLog::Log", "contents": "${1:CForumEventLog}::Log(${2:\\$object}, ${2:\\$action}, ${4:\\$id}, ${4:\\$description = ''}, ${6:\\$title = ''})$0"},
		{"trigger": "CForumFiles::Add", "contents": "${1:CForumFiles}::Add(${2:\\$arFileID}, ${2:&\\$arParams}, ${4:\\$bCheckFields = false})$0"},
		{"trigger": "CForumFiles::CheckFields", "contents": "${1:CForumFiles}::CheckFields(${2:&\\$arFields}, ${2:&\\$arParams}, ${4:\\$ACTION = 'ADD'})$0"},
		{"trigger": "CForumFiles::CleanUp", "contents": "${1:CForumFiles}::CleanUp()$0"},
		{"trigger": "CForumFiles::Delete", "contents": "${1:CForumFiles}::Delete(${2:\\$arFields = array()}, ${2:\\$arParams = array()})$0"},
		{"trigger": "CForumFiles::GetList", "contents": "${1:CForumFiles}::GetList(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$iNum = 0}, ${4:\\$arAddParams = array()})$0"},
		{"trigger": "CForumFiles::Save", "contents": "${1:CForumFiles}::Save(${2:&\\$arFields}, ${2:\\$arParams}, ${4:\\$bCheckFields = true})$0"},
		{"trigger": "CForumFiles::UpdateByID", "contents": "${1:CForumFiles}::UpdateByID(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumGroup::Add", "contents": "${1:CForumGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumGroup::CanUserAddGroup", "contents": "${1:CForumGroup}::CanUserAddGroup(${2:\\$arUserGroups})$0"},
		{"trigger": "CForumGroup::CanUserDeleteGroup", "contents": "${1:CForumGroup}::CanUserDeleteGroup(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumGroup::CanUserUpdateGroup", "contents": "${1:CForumGroup}::CanUserUpdateGroup(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumGroup::CheckFields", "contents": "${1:CForumGroup}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = false})$0"},
		{"trigger": "CForumGroup::Delete", "contents": "${1:CForumGroup}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumGroup::GetByID", "contents": "${1:CForumGroup}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumGroup::GetByIDEx", "contents": "${1:CForumGroup}::GetByIDEx(${2:\\$ID}, ${2:\\$LANGUAGE_ID})$0"},
		{"trigger": "CForumGroup::GetByLang", "contents": "${1:CForumGroup}::GetByLang(${2:\\$LANGUAGE_ID})$0"},
		{"trigger": "CForumGroup::GetLangByID", "contents": "${1:CForumGroup}::GetLangByID(${2:\\$FORUM_GROUP_ID}, ${2:\\$strLang})$0"},
		{"trigger": "CForumGroup::GetList", "contents": "${1:CForumGroup}::GetList(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumGroup::GetListEx", "contents": "${1:CForumGroup}::GetListEx(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumGroup::Resort", "contents": "${1:CForumGroup}::Resort(${2:\\$ID=0}, ${2:\\$cnt=0}, ${4:\\$depth=0})$0"},
		{"trigger": "CForumGroup::Update", "contents": "${1:CForumGroup}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumMessage::Add", "contents": "${1:CForumMessage}::Add(${2:\\$arFields}, ${2:\\$strUploadDir = false}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CForumMessage::CanUserAddMessage", "contents": "${1:CForumMessage}::CanUserAddMessage(${2:\\$TID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumMessage::CanUserDeleteMessage", "contents": "${1:CForumMessage}::CanUserDeleteMessage(${2:\\$MID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumMessage::CanUserUpdateMessage", "contents": "${1:CForumMessage}::CanUserUpdateMessage(${2:\\$MID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumMessage::CheckFields", "contents": "${1:CForumMessage}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CForumMessage::Delete", "contents": "${1:CForumMessage}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumMessage::GetByID", "contents": "${1:CForumMessage}::GetByID(${2:\\$ID}, ${2:\\$arAddParams = array()})$0"},
		{"trigger": "CForumMessage::GetByIDEx", "contents": "${1:CForumMessage}::GetByIDEx(${2:\\$ID}, ${2:\\$arAddParams = array()})$0"},
		{"trigger": "CForumMessage::GetFirstUnread", "contents": "${1:CForumMessage}::GetFirstUnread(${2:\\$FID}, ${2:\\$TID}, ${4:\\$PERMISSION})$0"},
		{"trigger": "CForumMessage::GetFirstUnreadEx", "contents": "${1:CForumMessage}::GetFirstUnreadEx(${2:\\$FID}, ${2:\\$TID}, ${4:\\$arUserGroups})$0"},
		{"trigger": "CForumMessage::GetList", "contents": "${1:CForumMessage}::GetList(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false}, ${4:\\$iNum = 0}, ${6:\\$arAddParams = array()})$0"},
		{"trigger": "CForumMessage::GetListEx", "contents": "${1:CForumMessage}::GetListEx(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false}, ${4:\\$iNum = 0}, ${6:\\$arAddParams = array()})$0"},
		{"trigger": "CForumMessage::GetMessagePage", "contents": "${1:CForumMessage}::GetMessagePage(${2:\\$ID}, ${2:\\$mess_per_page}, ${4:\\$arUserGroups}, ${4:\\$TID = false}, ${6:\\$arAddParams = array()})$0"},
		{"trigger": "CForumMessage::OnSocNetLogFormatEvent", "contents": "${1:CForumMessage}::OnSocNetLogFormatEvent(${2:\\$arEvent}, ${2:\\$arParams})$0"},
		{"trigger": "CForumMessage::QueryFirstUnread", "contents": "${1:CForumMessage}::QueryFirstUnread(${2:\\$arFilter})$0"},
		{"trigger": "CForumMessage::Reindex", "contents": "${1:CForumMessage}::Reindex(${2:\\$ID}, ${2:&\\$arMessage})$0"},
		{"trigger": "CForumMessage::SendMailMessage", "contents": "${1:CForumMessage}::SendMailMessage(${2:\\$MID}, ${2:\\$arFields = array()}, ${4:\\$strLang = false}, ${4:\\$mailTemplate = false})$0"},
		{"trigger": "CForumMessage::Update", "contents": "${1:CForumMessage}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$skip_counts = false}, ${4:\\$strUploadDir = false})$0"},
		{"trigger": "CForumNew::Add", "contents": "${1:CForumNew}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumNew::CanUserAddForum", "contents": "${1:CForumNew}::CanUserAddForum(${2:\\$arUserGroups}, ${2:\\$iUserID = 0})$0"},
		{"trigger": "CForumNew::CanUserDeleteForum", "contents": "${1:CForumNew}::CanUserDeleteForum(${2:\\$FID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumNew::CanUserEditForum", "contents": "${1:CForumNew}::CanUserEditForum(${2:\\$FID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumNew::CanUserModerateForum", "contents": "${1:CForumNew}::CanUserModerateForum(${2:\\$FID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumNew::CanUserUpdateForum", "contents": "${1:CForumNew}::CanUserUpdateForum(${2:\\$FID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumNew::CanUserViewForum", "contents": "${1:CForumNew}::CanUserViewForum(${2:\\$FID}, ${2:\\$arUserGroups}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumNew::CheckFields", "contents": "${1:CForumNew}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CForumNew::ClearHTML", "contents": "${1:CForumNew}::ClearHTML(${2:\\$ID})$0"},
		{"trigger": "CForumNew::Delete", "contents": "${1:CForumNew}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumNew::GetAccessPermissions", "contents": "${1:CForumNew}::GetAccessPermissions(${2:\\$ID}, ${2:\\$TYPE = 'ONE'})$0"},
		{"trigger": "CForumNew::GetAccessPermsList", "contents": "${1:CForumNew}::GetAccessPermsList(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumNew::GetByID", "contents": "${1:CForumNew}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumNew::GetByIDEx", "contents": "${1:CForumNew}::GetByIDEx(${2:\\$ID}, ${2:\\$SITE_ID = false})$0"},
		{"trigger": "CForumNew::GetFilterOperation", "contents": "${1:CForumNew}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CForumNew::GetForumRenew", "contents": "${1:CForumNew}::GetForumRenew(${2:\\$arParams})$0"},
		{"trigger": "CForumNew::GetList", "contents": "${1:CForumNew}::GetList(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumNew::GetListEx", "contents": "${1:CForumNew}::GetListEx(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false}, ${4:\\$iNum = 0}, ${6:\\$arAddParams = array()})$0"},
		{"trigger": "CForumNew::GetNowTime", "contents": "${1:CForumNew}::GetNowTime(${2:\\$ResultType = 'timestamp'})$0"},
		{"trigger": "CForumNew::GetPermissionUserDefault", "contents": "${1:CForumNew}::GetPermissionUserDefault(${2:\\$ID})$0"},
		{"trigger": "CForumNew::GetSelectFields", "contents": "${1:CForumNew}::GetSelectFields(${2:\\$arAddParams = array()})$0"},
		{"trigger": "CForumNew::GetSites", "contents": "${1:CForumNew}::GetSites(${2:\\$ID})$0"},
		{"trigger": "CForumNew::GetUserPermission", "contents": "${1:CForumNew}::GetUserPermission(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumNew::InitReadLabels", "contents": "${1:CForumNew}::InitReadLabels(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumNew::OnBeforeLangDelete", "contents": "${1:CForumNew}::OnBeforeLangDelete(${2:\\$lang})$0"},
		{"trigger": "CForumNew::OnGroupDelete", "contents": "${1:CForumNew}::OnGroupDelete(${2:\\$GROUP_ID})$0"},
		{"trigger": "CForumNew::OnPanelCreate", "contents": "${1:CForumNew}::OnPanelCreate()$0"},
		{"trigger": "CForumNew::OnReindex", "contents": "${1:CForumNew}::OnReindex(${2:\\$NS = array()}, ${2:\\$oCallback = NULL}, ${4:\\$callback_method = ''})$0"},
		{"trigger": "CForumNew::PreparePath2Message", "contents": "${1:CForumNew}::PreparePath2Message(${2:\\$strPath}, ${2:\\$arVals = array()})$0"},
		{"trigger": "CForumNew::SetAccessPermissions", "contents": "${1:CForumNew}::SetAccessPermissions(${2:\\$ID}, ${2:\\$arGROUP_ID})$0"},
		{"trigger": "CForumNew::SetLabelsBeRead", "contents": "${1:CForumNew}::SetLabelsBeRead(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumNew::SetStat", "contents": "${1:CForumNew}::SetStat(${2:\\$ID = 0}, ${2:\\$arParams = array()})$0"},
		{"trigger": "CForumNew::ShowPanel", "contents": "${1:CForumNew}::ShowPanel(${2:\\$FID}, ${2:\\$TID=0}, ${4:\\$bGetIcons=false})$0"},
		{"trigger": "CForumNew::Update", "contents": "${1:CForumNew}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$bReindex = true})$0"},
		{"trigger": "CForumPMFolder::Add", "contents": "${1:CForumPMFolder}::Add(${2:\\$title})$0"},
		{"trigger": "CForumPMFolder::CheckPermissions", "contents": "${1:CForumPMFolder}::CheckPermissions(${2:\\$ID})$0"},
		{"trigger": "CForumPMFolder::Delete", "contents": "${1:CForumPMFolder}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumPMFolder::GetByID", "contents": "${1:CForumPMFolder}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumPMFolder::GetList", "contents": "${1:CForumPMFolder}::GetList(${2:\\$arOrder = array('SORT' => 'DESC'}, ${2:'TITLE'=>'DESC')}, ${4:\\$arFilter}, ${4:\\$bCnt=false})$0"},
		{"trigger": "CForumPMFolder::Update", "contents": "${1:CForumPMFolder}::Update(${2:\\$ID}, ${2:\\$arFields = array()})$0"},
		{"trigger": "CForumPoints2Post::Add", "contents": "${1:CForumPoints2Post}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumPoints2Post::CanUserAddPoints2Post", "contents": "${1:CForumPoints2Post}::CanUserAddPoints2Post(${2:\\$arUserGroups})$0"},
		{"trigger": "CForumPoints2Post::CanUserDeletePoints2Post", "contents": "${1:CForumPoints2Post}::CanUserDeletePoints2Post(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumPoints2Post::CanUserUpdatePoints2Post", "contents": "${1:CForumPoints2Post}::CanUserUpdatePoints2Post(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumPoints2Post::CheckFields", "contents": "${1:CForumPoints2Post}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CForumPoints2Post::Delete", "contents": "${1:CForumPoints2Post}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumPoints2Post::GetByID", "contents": "${1:CForumPoints2Post}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumPoints2Post::GetList", "contents": "${1:CForumPoints2Post}::GetList(${2:\\$arOrder = array('MIN_NUM_POSTS'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumPoints2Post::Update", "contents": "${1:CForumPoints2Post}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumPoints::Add", "contents": "${1:CForumPoints}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumPoints::CanUserAddPoints", "contents": "${1:CForumPoints}::CanUserAddPoints(${2:\\$arUserGroups})$0"},
		{"trigger": "CForumPoints::CanUserDeletePoints", "contents": "${1:CForumPoints}::CanUserDeletePoints(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumPoints::CanUserUpdatePoints", "contents": "${1:CForumPoints}::CanUserUpdatePoints(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumPoints::CheckFields", "contents": "${1:CForumPoints}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CForumPoints::Delete", "contents": "${1:CForumPoints}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumPoints::GetByID", "contents": "${1:CForumPoints}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumPoints::GetByIDEx", "contents": "${1:CForumPoints}::GetByIDEx(${2:\\$ID}, ${2:\\$strLang})$0"},
		{"trigger": "CForumPoints::GetLangByID", "contents": "${1:CForumPoints}::GetLangByID(${2:\\$POINTS_ID}, ${2:\\$strLang})$0"},
		{"trigger": "CForumPoints::GetList", "contents": "${1:CForumPoints}::GetList(${2:\\$arOrder = array('MIN_POINTS'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumPoints::GetListEx", "contents": "${1:CForumPoints}::GetListEx(${2:\\$arOrder = array('MIN_POINTS'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumPoints::Update", "contents": "${1:CForumPoints}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumPrivateMessage::CheckFields", "contents": "${1:CForumPrivateMessage}::CheckFields(${2:&\\$arFields}, ${2:\\$update = false})$0"},
		{"trigger": "CForumPrivateMessage::CheckPermissions", "contents": "${1:CForumPrivateMessage}::CheckPermissions(${2:\\$ID})$0"},
		{"trigger": "CForumPrivateMessage::Copy", "contents": "${1:CForumPrivateMessage}::Copy(${2:\\$ID}, ${2:\\$arFields = array()})$0"},
		{"trigger": "CForumPrivateMessage::Delete", "contents": "${1:CForumPrivateMessage}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumPrivateMessage::GetByID", "contents": "${1:CForumPrivateMessage}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumPrivateMessage::GetList", "contents": "${1:CForumPrivateMessage}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter}, ${4:\\$bCnt=false})$0"},
		{"trigger": "CForumPrivateMessage::GetListEx", "contents": "${1:CForumPrivateMessage}::GetListEx(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false}, ${4:\\$iNum = 0})$0"},
		{"trigger": "CForumPrivateMessage::GetNewPM", "contents": "${1:CForumPrivateMessage}::GetNewPM(${2:\\$FOLDER_ID = false})$0"},
		{"trigger": "CForumPrivateMessage::MakeRead", "contents": "${1:CForumPrivateMessage}::MakeRead(${2:\\$ID})$0"},
		{"trigger": "CForumPrivateMessage::PMSize", "contents": "${1:CForumPrivateMessage}::PMSize(${2:\\$USER_ID}, ${2:\\$CountMess = false})$0"},
		{"trigger": "CForumPrivateMessage::Send", "contents": "${1:CForumPrivateMessage}::Send(${2:\\$arFields = array()})$0"},
		{"trigger": "CForumPrivateMessage::Update", "contents": "${1:CForumPrivateMessage}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumRank::Add", "contents": "${1:CForumRank}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumRank::CanUserAddRank", "contents": "${1:CForumRank}::CanUserAddRank(${2:\\$arUserGroups})$0"},
		{"trigger": "CForumRank::CanUserDeleteRank", "contents": "${1:CForumRank}::CanUserDeleteRank(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumRank::CanUserUpdateRank", "contents": "${1:CForumRank}::CanUserUpdateRank(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumRank::CheckFields", "contents": "${1:CForumRank}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CForumRank::Delete", "contents": "${1:CForumRank}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumRank::GetByID", "contents": "${1:CForumRank}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumRank::GetByIDEx", "contents": "${1:CForumRank}::GetByIDEx(${2:\\$ID}, ${2:\\$strLang})$0"},
		{"trigger": "CForumRank::GetLangByID", "contents": "${1:CForumRank}::GetLangByID(${2:\\$RANK_ID}, ${2:\\$strLang})$0"},
		{"trigger": "CForumRank::GetList", "contents": "${1:CForumRank}::GetList(${2:\\$arOrder = array('MIN_NUM_POSTS'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumRank::GetListEx", "contents": "${1:CForumRank}::GetListEx(${2:\\$arOrder = array('MIN_NUM_POSTS'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumRank::Update", "contents": "${1:CForumRank}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumSimpleHTMLParser::__construct", "contents": "${1:CForumSimpleHTMLParser}::__construct(${2:\\$data})$0"},
		{"trigger": "CForumSimpleHTMLParser::findTagEnd", "contents": "${1:CForumSimpleHTMLParser}::findTagEnd(${2:\\$startIndex})$0"},
		{"trigger": "CForumSimpleHTMLParser::findTagStart", "contents": "${1:CForumSimpleHTMLParser}::findTagStart(${2:\\$needle})$0"},
		{"trigger": "CForumSimpleHTMLParser::getInnerHTML", "contents": "${1:CForumSimpleHTMLParser}::getInnerHTML(${2:\\$startLabel}, ${2:\\$endLabel}, ${4:\\$multiple=false})$0"},
		{"trigger": "CForumSimpleHTMLParser::getTagHTML", "contents": "${1:CForumSimpleHTMLParser}::getTagHTML(${2:\\$search})$0"},
		{"trigger": "CForumSimpleHTMLParser::setError", "contents": "${1:CForumSimpleHTMLParser}::setError(${2:\\$msg})$0"},
		{"trigger": "CForumSimpleHTMLParser::skipTags", "contents": "${1:CForumSimpleHTMLParser}::skipTags(${2:\\$tmp})$0"},
		{"trigger": "CForumSmile::Add", "contents": "${1:CForumSmile}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumSmile::CheckFields", "contents": "${1:CForumSmile}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CForumSmile::Delete", "contents": "${1:CForumSmile}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumSmile::GetByID", "contents": "${1:CForumSmile}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumSmile::GetByIDEx", "contents": "${1:CForumSmile}::GetByIDEx(${2:\\$ID}, ${2:\\$strLang})$0"},
		{"trigger": "CForumSmile::GetByType", "contents": "${1:CForumSmile}::GetByType(${2:\\$TYPE}, ${2:\\$LANGUAGE_ID})$0"},
		{"trigger": "CForumSmile::GetLangByID", "contents": "${1:CForumSmile}::GetLangByID(${2:\\$SMILE_ID}, ${2:\\$strLang})$0"},
		{"trigger": "CForumSmile::GetList", "contents": "${1:CForumSmile}::GetList(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumSmile::GetListEx", "contents": "${1:CForumSmile}::GetListEx(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumSmile::Update", "contents": "${1:CForumSmile}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumStat::Add", "contents": "${1:CForumStat}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumStat::CleanUp", "contents": "${1:CForumStat}::CleanUp(${2:\\$period = 48})$0"},
		{"trigger": "CForumStat::GetListEx", "contents": "${1:CForumStat}::GetListEx(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumStat::RegisterUSER", "contents": "${1:CForumStat}::RegisterUSER(${2:\\$arFields = array()})$0"},
		{"trigger": "CForumStat::RegisterUSER_OLD", "contents": "${1:CForumStat}::RegisterUSER_OLD(${2:\\$arFields = array()})$0"},
		{"trigger": "CForumSubscribe::Add", "contents": "${1:CForumSubscribe}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumSubscribe::CanUserAddSubscribe", "contents": "${1:CForumSubscribe}::CanUserAddSubscribe(${2:\\$FID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumSubscribe::CanUserDeleteSubscribe", "contents": "${1:CForumSubscribe}::CanUserDeleteSubscribe(${2:\\$ID}, ${2:\\$arUserGroups}, ${4:\\$CurrentUserID = 0})$0"},
		{"trigger": "CForumSubscribe::CanUserUpdateSubscribe", "contents": "${1:CForumSubscribe}::CanUserUpdateSubscribe(${2:\\$ID}, ${2:\\$arUserGroups}, ${4:\\$CurrentUserID = 0})$0"},
		{"trigger": "CForumSubscribe::CheckFields", "contents": "${1:CForumSubscribe}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CForumSubscribe::Delete", "contents": "${1:CForumSubscribe}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumSubscribe::DeleteUSERSubscribe", "contents": "${1:CForumSubscribe}::DeleteUSERSubscribe(${2:\\$USER_ID})$0"},
		{"trigger": "CForumSubscribe::GetByID", "contents": "${1:CForumSubscribe}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumSubscribe::GetList", "contents": "${1:CForumSubscribe}::GetList(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumSubscribe::GetListEx", "contents": "${1:CForumSubscribe}::GetListEx(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumSubscribe::Update", "contents": "${1:CForumSubscribe}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CForumSubscribe::UpdateLastSend", "contents": "${1:CForumSubscribe}::UpdateLastSend(${2:\\$MID}, ${2:\\$sIDs})$0"},
		{"trigger": "CForumTopic::Add", "contents": "${1:CForumTopic}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumTopic::CanUserAddTopic", "contents": "${1:CForumTopic}::CanUserAddTopic(${2:\\$FID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$arForum = false}, ${6:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumTopic::CanUserDeleteTopic", "contents": "${1:CForumTopic}::CanUserDeleteTopic(${2:\\$TID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumTopic::CanUserDeleteTopicMessage", "contents": "${1:CForumTopic}::CanUserDeleteTopicMessage(${2:\\$TID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumTopic::CanUserUpdateTopic", "contents": "${1:CForumTopic}::CanUserUpdateTopic(${2:\\$TID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumTopic::CanUserViewTopic", "contents": "${1:CForumTopic}::CanUserViewTopic(${2:\\$TID}, ${2:\\$arUserGroups}, ${4:\\$iUserID = 0}, ${4:\\$ExternalPermission = false})$0"},
		{"trigger": "CForumTopic::CheckFields", "contents": "${1:CForumTopic}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CForumTopic::CleanUp", "contents": "${1:CForumTopic}::CleanUp(${2:\\$period = 168})$0"},
		{"trigger": "CForumTopic::Delete", "contents": "${1:CForumTopic}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumTopic::GetByID", "contents": "${1:CForumTopic}::GetByID(${2:\\$ID}, ${2:\\$arAddParams = array()})$0"},
		{"trigger": "CForumTopic::GetByIDEx", "contents": "${1:CForumTopic}::GetByIDEx(${2:\\$ID}, ${2:\\$arAddParams = array()})$0"},
		{"trigger": "CForumTopic::GetList", "contents": "${1:CForumTopic}::GetList(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false}, ${4:\\$iNum = 0}, ${6:\\$arAddParams = array()})$0"},
		{"trigger": "CForumTopic::GetListEx", "contents": "${1:CForumTopic}::GetListEx(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$bCount = false}, ${4:\\$iNum = 0}, ${6:\\$arAddParams = array()})$0"},
		{"trigger": "CForumTopic::GetMessageCount", "contents": "${1:CForumTopic}::GetMessageCount(${2:\\$forumID}, ${2:\\$topicID}, ${4:\\$approved = null})$0"},
		{"trigger": "CForumTopic::GetNeighboringTopics", "contents": "${1:CForumTopic}::GetNeighboringTopics(${2:\\$TID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumTopic::GetSelectFields", "contents": "${1:CForumTopic}::GetSelectFields(${2:\\$arAddParams = array()})$0"},
		{"trigger": "CForumTopic::MoveTopic2Forum", "contents": "${1:CForumTopic}::MoveTopic2Forum(${2:\\$TID}, ${2:\\$FID}, ${4:\\$leaveLink = 'N'})$0"},
		{"trigger": "CForumTopic::OnBeforeIBlockElementDelete", "contents": "${1:CForumTopic}::OnBeforeIBlockElementDelete(${2:\\$ELEMENT_ID})$0"},
		{"trigger": "CForumTopic::SetReadLabels", "contents": "${1:CForumTopic}::SetReadLabels(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumTopic::SetReadLabelsNew", "contents": "${1:CForumTopic}::SetReadLabelsNew(${2:\\$ID}, ${2:\\$update = false}, ${4:\\$LastVisit = false}, ${4:\\$arAddParams = array()})$0"},
		{"trigger": "CForumTopic::SetStat", "contents": "${1:CForumTopic}::SetStat(${2:\\$ID = 0}, ${2:\\$arParams = array()})$0"},
		{"trigger": "CForumTopic::Update", "contents": "${1:CForumTopic}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$skip_counts = False})$0"},
		{"trigger": "CForumUser::Add", "contents": "${1:CForumUser}::Add(${2:\\$arFields}, ${2:\\$strUploadDir = false})$0"},
		{"trigger": "CForumUser::CanUserAddUser", "contents": "${1:CForumUser}::CanUserAddUser(${2:\\$arUserGroups})$0"},
		{"trigger": "CForumUser::CanUserDeleteUser", "contents": "${1:CForumUser}::CanUserDeleteUser(${2:\\$ID}, ${2:\\$arUserGroups})$0"},
		{"trigger": "CForumUser::CanUserUpdateUser", "contents": "${1:CForumUser}::CanUserUpdateUser(${2:\\$ID}, ${2:\\$arUserGroups}, ${4:\\$CurrentUserID = 0})$0"},
		{"trigger": "CForumUser::CheckFields", "contents": "${1:CForumUser}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID=false})$0"},
		{"trigger": "CForumUser::CountUserPoints", "contents": "${1:CForumUser}::CountUserPoints(${2:\\$USER_ID = 0}, ${2:\\$iCnt = false})$0"},
		{"trigger": "CForumUser::CountUsers", "contents": "${1:CForumUser}::CountUsers(${2:\\$bActive = False}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumUser::Delete", "contents": "${1:CForumUser}::Delete(${2:\\$ID})$0"},
		{"trigger": "CForumUser::GetByID", "contents": "${1:CForumUser}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CForumUser::GetByIDEx", "contents": "${1:CForumUser}::GetByIDEx(${2:\\$ID})$0"},
		{"trigger": "CForumUser::GetByLogin", "contents": "${1:CForumUser}::GetByLogin(${2:\\$Name})$0"},
		{"trigger": "CForumUser::GetByUSER_ID", "contents": "${1:CForumUser}::GetByUSER_ID(${2:\\$USER_ID})$0"},
		{"trigger": "CForumUser::GetByUSER_IDEx", "contents": "${1:CForumUser}::GetByUSER_IDEx(${2:\\$USER_ID})$0"},
		{"trigger": "CForumUser::GetList", "contents": "${1:CForumUser}::GetList(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$arAddParams = array()})$0"},
		{"trigger": "CForumUser::GetListEx", "contents": "${1:CForumUser}::GetListEx(${2:\\$arOrder = array('ID'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumUser::GetListUserForumLastVisit", "contents": "${1:CForumUser}::GetListUserForumLastVisit(${2:\\$arOrder = array('LAST_VISIT'=>'DESC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumUser::GetUserPoints", "contents": "${1:CForumUser}::GetUserPoints(${2:\\$USER_ID}, ${2:\\$arAddParams = array()})$0"},
		{"trigger": "CForumUser::GetUserRank", "contents": "${1:CForumUser}::GetUserRank(${2:\\$USER_ID}, ${2:\\$strLang = false})$0"},
		{"trigger": "CForumUser::GetUserTopicVisits", "contents": "${1:CForumUser}::GetUserTopicVisits(${2:\\$forumID}, ${2:\\$arTopic}, ${4:\\$userID=null})$0"},
		{"trigger": "CForumUser::IsLocked", "contents": "${1:CForumUser}::IsLocked(${2:\\$USER_ID})$0"},
		{"trigger": "CForumUser::OnSocNetGroupDelete", "contents": "${1:CForumUser}::OnSocNetGroupDelete(${2:\\$group_id})$0"},
		{"trigger": "CForumUser::OnUserDelete", "contents": "${1:CForumUser}::OnUserDelete(${2:\\$user_id})$0"},
		{"trigger": "CForumUser::SearchUser", "contents": "${1:CForumUser}::SearchUser(${2:\\$template})$0"},
		{"trigger": "CForumUser::SetStat", "contents": "${1:CForumUser}::SetStat(${2:\\$USER_ID = 0}, ${2:\\$arParams = array()})$0"},
		{"trigger": "CForumUser::SetUserForumLastVisit", "contents": "${1:CForumUser}::SetUserForumLastVisit(${2:\\$USER_ID}, ${2:\\$FORUM_ID = 0}, ${4:\\$LAST_VISIT = false})$0"},
		{"trigger": "CForumUser::Update", "contents": "${1:CForumUser}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$strUploadDir = false}, ${4:\\$UpdateByUserId = false})$0"},
		{"trigger": "CForumUser::UserAddInfo", "contents": "${1:CForumUser}::UserAddInfo(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$mode = false}, ${4:\\$iNum = 0}, ${6:\\$check_permission = true}, ${6:\\$arNavigation = array()})$0"},
		{"trigger": "CForumUserPoints::Add", "contents": "${1:CForumUserPoints}::Add(${2:\\$arFields})$0"},
		{"trigger": "CForumUserPoints::CanUserAddUserPoints", "contents": "${1:CForumUserPoints}::CanUserAddUserPoints(${2:\\$iUserID})$0"},
		{"trigger": "CForumUserPoints::CanUserDeleteUserPoints", "contents": "${1:CForumUserPoints}::CanUserDeleteUserPoints(${2:\\$iUserID})$0"},
		{"trigger": "CForumUserPoints::CanUserUpdateUserPoints", "contents": "${1:CForumUserPoints}::CanUserUpdateUserPoints(${2:\\$iUserID})$0"},
		{"trigger": "CForumUserPoints::CheckFields", "contents": "${1:CForumUserPoints}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CForumUserPoints::CountSumPoints", "contents": "${1:CForumUserPoints}::CountSumPoints(${2:\\$TO_USER_ID})$0"},
		{"trigger": "CForumUserPoints::Delete", "contents": "${1:CForumUserPoints}::Delete(${2:\\$FROM_USER_ID}, ${2:\\$TO_USER_ID})$0"},
		{"trigger": "CForumUserPoints::GetByID", "contents": "${1:CForumUserPoints}::GetByID(${2:\\$FROM_USER_ID}, ${2:\\$TO_USER_ID})$0"},
		{"trigger": "CForumUserPoints::GetList", "contents": "${1:CForumUserPoints}::GetList(${2:\\$arOrder = array('TO_USER_ID'=>'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CForumUserPoints::Update", "contents": "${1:CForumUserPoints}::Update(${2:\\$FROM_USER_ID}, ${2:\\$TO_USER_ID}, ${4:\\$arFields})$0"},
		{"trigger": "CRatingsComponentsForum::CalcUserRatingForumActivity", "contents": "${1:CRatingsComponentsForum}::CalcUserRatingForumActivity(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingsComponentsForum::CalcUserVoteForumPost", "contents": "${1:CRatingsComponentsForum}::CalcUserVoteForumPost(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingsComponentsForum::CalcUserVoteForumTopic", "contents": "${1:CRatingsComponentsForum}::CalcUserVoteForumTopic(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingsComponentsForum::ExceptionUserRatingForumActivity", "contents": "${1:CRatingsComponentsForum}::ExceptionUserRatingForumActivity()$0"},
		{"trigger": "CRatingsComponentsForum::OnAfterAddRating", "contents": "${1:CRatingsComponentsForum}::OnAfterAddRating(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingsComponentsForum::OnAfterUpdateRating", "contents": "${1:CRatingsComponentsForum}::OnAfterUpdateRating(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingsComponentsForum::OnGetRatingConfigs", "contents": "${1:CRatingsComponentsForum}::OnGetRatingConfigs()$0"},
		{"trigger": "CRatingsComponentsForum::OnGetRatingContentOwner", "contents": "${1:CRatingsComponentsForum}::OnGetRatingContentOwner(${2:\\$arParams})$0"},
		{"trigger": "CRatingsComponentsForum::OnGetRatingObject", "contents": "${1:CRatingsComponentsForum}::OnGetRatingObject()$0"},
		{"trigger": "CRatingsComponentsForum::__AssembleConfigDefault", "contents": "${1:CRatingsComponentsForum}::__AssembleConfigDefault(${2:\\$objectType = null})$0"},
		{"trigger": "CRatingsComponentsForum::__CheckFields", "contents": "${1:CRatingsComponentsForum}::__CheckFields(${2:\\$entityId}, ${2:\\$arConfigs})$0"},
		{"trigger": "_CForumDBResult::Fetch", "contents": "${1:_CForumDBResult}::Fetch()$0"},
		{"trigger": "_CForumDBResult::_CForumDBResult", "contents": "${1:_CForumDBResult}::_CForumDBResult(${2:\\$res})$0"},
		{"trigger": "_CMessageDBResult::Fetch", "contents": "${1:_CMessageDBResult}::Fetch()$0"},
		{"trigger": "_CMessageDBResult::_CMessageDBResult", "contents": "${1:_CMessageDBResult}::_CMessageDBResult(${2:\\$res})$0"},
		{"trigger": "_CTopicDBResult::Fetch", "contents": "${1:_CTopicDBResult}::Fetch()$0"},
		{"trigger": "_CTopicDBResult::_CTopicDBResult", "contents": "${1:_CTopicDBResult}::_CTopicDBResult(${2:\\$res})$0"},
		{"trigger": "forumTextParser::GetEditorToolbar", "contents": "${1:forumTextParser}::GetEditorToolbar(${2:\\$arParams})$0"},
		{"trigger": "forumTextParser::GetFeatures", "contents": "${1:forumTextParser}::GetFeatures(${2:\\$arForum})$0"},
		{"trigger": "forumTextParser::ParserCut", "contents": "${1:forumTextParser}::ParserCut(${2:&\\$text}, ${2:&\\$obj})$0"},
		{"trigger": "forumTextParser::convert", "contents": "${1:forumTextParser}::convert(${2:\\$text}, ${2:\\$allow = array()}, ${4:\\$type = 'html'})$0"},
		{"trigger": "forumTextParser::convert4mail", "contents": "${1:forumTextParser}::convert4mail(${2:\\$text})$0"},
		{"trigger": "forumTextParser::convert_close_tag", "contents": "${1:forumTextParser}::convert_close_tag(${2:\\$marker = 'quote'})$0"},
		{"trigger": "forumTextParser::convert_cut_tag", "contents": "${1:forumTextParser}::convert_cut_tag(${2:\\$text}, ${2:\\$title=''})$0"},
		{"trigger": "forumTextParser::convert_image_tag", "contents": "${1:forumTextParser}::convert_image_tag(${2:\\$url = ''}, ${2:\\$params=''})$0"},
		{"trigger": "forumTextParser::convert_open_tag", "contents": "${1:forumTextParser}::convert_open_tag(${2:\\$marker = 'quote'})$0"},
		{"trigger": "forumTextParser::convert_to_rss", "contents": "${1:forumTextParser}::convert_to_rss(${2:\\$text}, ${2:\\$arImages = array()}, ${4:\\$arAllow = array('HTML' => 'N'}, ${4:'ANCHOR' => 'Y'}, ${6:'BIU' => 'Y'}, ${6:'IMG' => 'Y'}, ${8:'QUOTE' => 'Y'}, ${8:'CODE' => 'Y'}, ${10:'FONT' => 'Y'}, ${20:'LIST' => 'Y'}, ${22:'SMILES' => 'Y'}, ${22:'NL2BR' => 'N'}, ${24:'TABLE' => 'Y')}, ${24:\\$arParams = array()})$0"},
		{"trigger": "forumTextParser::forumTextParser", "contents": "${1:forumTextParser}::forumTextParser(${2:\\$lang = false}, ${2:\\$pathToSmiles = ''}, ${4:\\$type=false}, ${4:\\$mode = 'full'})$0"},
		{"trigger": "textParser::convert", "contents": "${1:textParser}::convert(${2:\\$text}, ${2:\\$allow = array('HTML' => 'N'}, ${4:'ANCHOR' => 'Y'}, ${4:'BIU' => 'Y'}, ${6:'IMG' => 'Y'}, ${6:'QUOTE' => 'Y'}, ${8:'CODE' => 'Y'}, ${8:'FONT' => 'Y'}, ${10:'LIST' => 'Y'}, ${20:'SMILES' => 'Y'}, ${22:'NL2BR' => 'N'}, ${22:'VIDEO' => 'Y')}, ${24:\\$type = 'html'})$0"},
		{"trigger": "textParser::convert4mail", "contents": "${1:textParser}::convert4mail(${2:\\$text})$0"},
		{"trigger": "textParser::convert_anchor_tag", "contents": "${1:textParser}::convert_anchor_tag(${2:\\$url}, ${2:\\$text}, ${4:\\$pref=''})$0"},
		{"trigger": "textParser::convert_close_tag", "contents": "${1:textParser}::convert_close_tag(${2:\\$marker = 'quote'})$0"},
		{"trigger": "textParser::convert_code_tag", "contents": "${1:textParser}::convert_code_tag(${2:\\$text = ''}, ${2:\\$type = 'html'})$0"},
		{"trigger": "textParser::convert_cut_tag", "contents": "${1:textParser}::convert_cut_tag(${2:\\$text}, ${2:\\$title=''})$0"},
		{"trigger": "textParser::convert_emoticon", "contents": "${1:textParser}::convert_emoticon(${2:\\$code = ''}, ${2:\\$image = ''}, ${4:\\$description = ''}, ${4:\\$servername = ''})$0"},
		{"trigger": "textParser::convert_font_attr", "contents": "${1:textParser}::convert_font_attr(${2:\\$attr}, ${2:\\$value = ''}, ${4:\\$text = ''})$0"},
		{"trigger": "textParser::convert_image_tag", "contents": "${1:textParser}::convert_image_tag(${2:\\$url = ''}, ${2:\\$type = 'html'})$0"},
		{"trigger": "textParser::convert_open_tag", "contents": "${1:textParser}::convert_open_tag(${2:\\$marker = 'quote'}, ${2:\\$type = 'html'})$0"},
		{"trigger": "textParser::convert_quote_tag", "contents": "${1:textParser}::convert_quote_tag(${2:\\$text = ''}, ${2:\\$type = 'html'})$0"},
		{"trigger": "textParser::convert_to_rss", "contents": "${1:textParser}::convert_to_rss(${2:\\$text}, ${2:\\$arImages = array()}, ${4:\\$arAllow = array('HTML' => 'N'}, ${4:'ANCHOR' => 'Y'}, ${6:'BIU' => 'Y'}, ${6:'IMG' => 'Y'}, ${8:'QUOTE' => 'Y'}, ${8:'CODE' => 'Y'}, ${10:'FONT' => 'Y'}, ${20:'LIST' => 'Y'}, ${22:'SMILES' => 'Y'}, ${22:'NL2BR' => 'N')}, ${24:\\$arParams = array()})$0"},
		{"trigger": "textParser::convert_video", "contents": "${1:textParser}::convert_video(${2:\\$params}, ${2:\\$path})$0"},
		{"trigger": "textParser::cut_long_words", "contents": "${1:textParser}::cut_long_words(${2:\\$str})$0"},
		{"trigger": "textParser::defended_tags", "contents": "${1:textParser}::defended_tags(${2:\\$text}, ${2:\\$tag = 'replace'})$0"},
		{"trigger": "textParser::killAllTags", "contents": "${1:textParser}::killAllTags(${2:\\$text})$0"},
		{"trigger": "textParser::part_long_words", "contents": "${1:textParser}::part_long_words(${2:\\$str})$0"},
		{"trigger": "textParser::pre_convert_code_tag", "contents": "${1:textParser}::pre_convert_code_tag(${2:\\$text = ''})$0"},
		{"trigger": "textParser::pre_convert_list", "contents": "${1:textParser}::pre_convert_list(${2:\\$text = ''})$0"},
		{"trigger": "textParser::textParser", "contents": "${1:textParser}::textParser(${2:\\$strLang = False}, ${2:\\$pathToSmile = false})$0"},
		{"trigger": "textParser::wrap_long_words", "contents": "${1:textParser}::wrap_long_words(${2:\\$text=''})$0"},
		{"trigger": "CAdminSubContextMenu::BeginBar", "contents": "${1:CAdminSubContextMenu}::BeginBar()$0"},
		{"trigger": "CAdminSubContextMenu::CAdminSubContextMenu", "contents": "${1:CAdminSubContextMenu}::CAdminSubContextMenu(${2:\\$items})$0"},
		{"trigger": "CAdminSubContextMenu::EndBar", "contents": "${1:CAdminSubContextMenu}::EndBar()$0"},
		{"trigger": "CAdminSubContextMenu::Show", "contents": "${1:CAdminSubContextMenu}::Show()$0"},
		{"trigger": "CAdminSubForm::CAdminSubForm", "contents": "${1:CAdminSubForm}::CAdminSubForm(${2:\\$name}, ${2:\\$tabs}, ${4:\\$bCanExpand = true}, ${4:\\$bDenyAutosave = false}, ${6:\\$list_url = ''}, ${6:\\$boolShowSettings = false})$0"},
		{"trigger": "CAdminSubForm::End", "contents": "${1:CAdminSubForm}::End()$0"},
		{"trigger": "CAdminSubForm::GetListPostParams", "contents": "${1:CAdminSubForm}::GetListPostParams(${2:\\$boolType = false}, ${2:\\$boolJS = false})$0"},
		{"trigger": "CAdminSubForm::GetListUrl", "contents": "${1:CAdminSubForm}::GetListUrl(${2:\\$boolFull = false})$0"},
		{"trigger": "CAdminSubForm::ShowSettings", "contents": "${1:CAdminSubForm}::ShowSettings()$0"},
		{"trigger": "CAdminSubForm::ShowSettingsButton", "contents": "${1:CAdminSubForm}::ShowSettingsButton()$0"},
		{"trigger": "CAdminSubForm::__AddListPostParams", "contents": "${1:CAdminSubForm}::__AddListPostParams(${2:\\$strKey,\\$strValue})$0"},
		{"trigger": "CAdminSubForm::__AddListUrlParams", "contents": "${1:CAdminSubForm}::__AddListUrlParams(${2:\\$strKey,\\$strValue})$0"},
		{"trigger": "CAdminSubForm::__ClearListPostParams", "contents": "${1:CAdminSubForm}::__ClearListPostParams()$0"},
		{"trigger": "CAdminSubForm::__ClearListUrlParams", "contents": "${1:CAdminSubForm}::__ClearListUrlParams()$0"},
		{"trigger": "CAdminSubForm::__DeleteListPostParams", "contents": "${1:CAdminSubForm}::__DeleteListPostParams(${2:\\$mxKey})$0"},
		{"trigger": "CAdminSubForm::__DeleteListUrlParams", "contents": "${1:CAdminSubForm}::__DeleteListUrlParams(${2:\\$mxKey})$0"},
		{"trigger": "CAdminSubForm::__ParseListUrl", "contents": "${1:CAdminSubForm}::__ParseListUrl(${2:\\$boolClear = false})$0"},
		{"trigger": "CAdminSubForm::__SetListPostParams", "contents": "${1:CAdminSubForm}::__SetListPostParams(${2:\\$mxParams,\\$boolClear})$0"},
		{"trigger": "CAdminSubForm::__SetListUrlParams", "contents": "${1:CAdminSubForm}::__SetListUrlParams(${2:\\$mxParams,\\$boolClear = false})$0"},
		{"trigger": "CAdminSubForm::__UpdateListPostParams", "contents": "${1:CAdminSubForm}::__UpdateListPostParams()$0"},
		{"trigger": "CAdminSubForm::__UpdateListUrlParams", "contents": "${1:CAdminSubForm}::__UpdateListUrlParams()$0"},
		{"trigger": "CAdminSubList::ActionAjaxReload", "contents": "${1:CAdminSubList}::ActionAjaxReload(${2:\\$url})$0"},
		{"trigger": "CAdminSubList::ActionDoGroup", "contents": "${1:CAdminSubList}::ActionDoGroup(${2:\\$id}, ${2:\\$action_id}, ${4:\\$add_params=''})$0"},
		{"trigger": "CAdminSubList::ActionPost", "contents": "${1:CAdminSubList}::ActionPost(${2:\\$url = false})$0"},
		{"trigger": "CAdminSubList::AddAdminContextMenu", "contents": "${1:CAdminSubList}::AddAdminContextMenu(${2:\\$aContext=array()}, ${2:\\$bShowExcel=true}, ${4:\\$bShowSettings=true})$0"},
		{"trigger": "CAdminSubList::AddFieldNames", "contents": "${1:CAdminSubList}::AddFieldNames(${2:\\$strFieldName}, ${2:\\$strFieldType})$0"},
		{"trigger": "CAdminSubList::AddGroupActionTable", "contents": "${1:CAdminSubList}::AddGroupActionTable(${2:\\$arActions}, ${2:\\$arParams=array()})$0"},
		{"trigger": "CAdminSubList::AddHeaders", "contents": "${1:CAdminSubList}::AddHeaders(${2:\\$aParams})$0"},
		{"trigger": "CAdminSubList::AddHideHeader", "contents": "${1:CAdminSubList}::AddHideHeader(${2:\\$strID})$0"},
		{"trigger": "CAdminSubList::AddListFieldNames", "contents": "${1:CAdminSubList}::AddListFieldNames()$0"},
		{"trigger": "CAdminSubList::AddVisibleHeaderColumn", "contents": "${1:CAdminSubList}::AddVisibleHeaderColumn(${2:\\$id})$0"},
		{"trigger": "CAdminSubList::CAdminSubList", "contents": "${1:CAdminSubList}::CAdminSubList(${2:\\$table_id}, ${2:\\$sort=false,\\$list_url,\\$arHideHeaders = false})$0"},
		{"trigger": "CAdminSubList::CheckListMode", "contents": "${1:CAdminSubList}::CheckListMode()$0"},
		{"trigger": "CAdminSubList::CreateChain", "contents": "${1:CAdminSubList}::CreateChain()$0"},
		{"trigger": "CAdminSubList::DeleteFieldNames", "contents": "${1:CAdminSubList}::DeleteFieldNames(${2:\\$arList = array()})$0"},
		{"trigger": "CAdminSubList::Display", "contents": "${1:CAdminSubList}::Display()$0"},
		{"trigger": "CAdminSubList::DisplayList", "contents": "${1:CAdminSubList}::DisplayList(${2:\\$boolFlag = true})$0"},
		{"trigger": "CAdminSubList::GetListFieldNames", "contents": "${1:CAdminSubList}::GetListFieldNames()$0"},
		{"trigger": "CAdminSubList::GetListUrl", "contents": "${1:CAdminSubList}::GetListUrl(${2:\\$boolFull = false})$0"},
		{"trigger": "CAdminSubList::GroupAction", "contents": "${1:CAdminSubList}::GroupAction()$0"},
		{"trigger": "CAdminSubList::SetBaseFieldNames", "contents": "${1:CAdminSubList}::SetBaseFieldNames()$0"},
		{"trigger": "CAdminSubList::SetListFieldNames", "contents": "${1:CAdminSubList}::SetListFieldNames(${2:\\$boolClear = true})$0"},
		{"trigger": "CAdminSubList::ShowActionTable", "contents": "${1:CAdminSubList}::ShowActionTable()$0"},
		{"trigger": "CAdminSubList::ShowChain", "contents": "${1:CAdminSubList}::ShowChain(${2:\\$chain})$0"},
		{"trigger": "CAdminSubList::__AddListUrlParams", "contents": "${1:CAdminSubList}::__AddListUrlParams(${2:\\$strKey,\\$strValue})$0"},
		{"trigger": "CAdminSubList::__ClearListUrlParams", "contents": "${1:CAdminSubList}::__ClearListUrlParams()$0"},
		{"trigger": "CAdminSubList::__DeleteListUrlParams", "contents": "${1:CAdminSubList}::__DeleteListUrlParams(${2:\\$mxKey})$0"},
		{"trigger": "CAdminSubList::__ParseListUrl", "contents": "${1:CAdminSubList}::__ParseListUrl(${2:\\$boolClear = false})$0"},
		{"trigger": "CAdminSubList::__SetListUrlParams", "contents": "${1:CAdminSubList}::__SetListUrlParams(${2:\\$mxParams,\\$boolClear = false})$0"},
		{"trigger": "CAdminSubList::__UpdateListUrlParams", "contents": "${1:CAdminSubList}::__UpdateListUrlParams()$0"},
		{"trigger": "CAdminSubListRow::AddFieldNames", "contents": "${1:CAdminSubListRow}::AddFieldNames(${2:\\$strFieldName,\\$strFieldType = 'HIDDEN'})$0"},
		{"trigger": "CAdminSubListRow::CAdminSubListRow", "contents": "${1:CAdminSubListRow}::CAdminSubListRow(${2:&\\$aHeaders}, ${2:\\$table_id})$0"},
		{"trigger": "CAdminSubListRow::Display", "contents": "${1:CAdminSubListRow}::Display()$0"},
		{"trigger": "CAdminSubListRow::GetFieldNames", "contents": "${1:CAdminSubListRow}::GetFieldNames()$0"},
		{"trigger": "CAdminSubSorting::CAdminSubSorting", "contents": "${1:CAdminSubSorting}::CAdminSubSorting(${2:\\$table_id}, ${2:\\$by_initial=false}, ${4:\\$order_initial=false}, ${4:\\$by_name='by'}, ${6:\\$ord_name='order'}, ${6:\\$list_url})$0"},
		{"trigger": "CAdminSubSorting::Show", "contents": "${1:CAdminSubSorting}::Show(${2:\\$text}, ${2:\\$sort_by}, ${4:\\$alt_title = false})$0"},
		{"trigger": "CEventIBlock::GetAuditTypes", "contents": "${1:CEventIBlock}::GetAuditTypes()$0"},
		{"trigger": "CEventIBlock::GetEventInfo", "contents": "${1:CEventIBlock}::GetEventInfo(${2:\\$row}, ${2:\\$arParams}, ${4:\\$arUser}, ${4:\\$arResult})$0"},
		{"trigger": "CEventIBlock::GetFilter", "contents": "${1:CEventIBlock}::GetFilter()$0"},
		{"trigger": "CEventIBlock::GetFilterSQL", "contents": "${1:CEventIBlock}::GetFilterSQL(${2:\\$var})$0"},
		{"trigger": "CEventIBlock::MakeIBlockObject", "contents": "${1:CEventIBlock}::MakeIBlockObject()$0"},
		{"trigger": "CIBlock::Add", "contents": "${1:CIBlock}::Add(${2:\\$arFields})$0"},
		{"trigger": "CIBlock::AddPanelButtons", "contents": "${1:CIBlock}::AddPanelButtons(${2:\\$mode}, ${2:\\$componentName}, ${4:\\$arButtons})$0"},
		{"trigger": "CIBlock::CheckFields", "contents": "${1:CIBlock}::CheckFields(${2:&\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CIBlock::CheckForIndexes", "contents": "${1:CIBlock}::CheckForIndexes(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlock::CleanCache", "contents": "${1:CIBlock}::CleanCache(${2:\\$ID})$0"},
		{"trigger": "CIBlock::Delete", "contents": "${1:CIBlock}::Delete(${2:\\$ID})$0"},
		{"trigger": "CIBlock::FilterCreate", "contents": "${1:CIBlock}::FilterCreate(${2:\\$fname}, ${2:\\$vals}, ${4:\\$type}, ${4:\\$cOperationType=false}, ${6:\\$bSkipEmpty = true})$0"},
		{"trigger": "CIBlock::FilterCreateEx", "contents": "${1:CIBlock}::FilterCreateEx(${2:\\$fname}, ${2:\\$vals}, ${4:\\$type}, ${4:&\\$bFullJoin}, ${6:\\$cOperationType=false}, ${6:\\$bSkipEmpty = true})$0"},
		{"trigger": "CIBlock::FilterPicture", "contents": "${1:CIBlock}::FilterPicture(${2:\\$filePath}, ${2:\\$arFilter})$0"},
		{"trigger": "CIBlock::ForLIKE", "contents": "${1:CIBlock}::ForLIKE(${2:\\$str})$0"},
		{"trigger": "CIBlock::GetAdminElementListLink", "contents": "${1:CIBlock}::GetAdminElementListLink(${2:\\$IBLOCK_ID}, ${2:\\$arParams})$0"},
		{"trigger": "CIBlock::GetAdminListMode", "contents": "${1:CIBlock}::GetAdminListMode(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlock::GetAdminSectionListLink", "contents": "${1:CIBlock}::GetAdminSectionListLink(${2:\\$IBLOCK_ID}, ${2:\\$arParams})$0"},
		{"trigger": "CIBlock::GetarrayByID", "contents": "${1:CIBlock}::GetarrayByID(${2:\\$ID}, ${2:\\$FIELD = ''})$0"},
		{"trigger": "CIBlock::GetAuditTypes", "contents": "${1:CIBlock}::GetAuditTypes()$0"},
		{"trigger": "CIBlock::GetByID", "contents": "${1:CIBlock}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CIBlock::GetComponentMenu", "contents": "${1:CIBlock}::GetComponentMenu(${2:\\$mode}, ${2:\\$arButtons})$0"},
		{"trigger": "CIBlock::GetElementCount", "contents": "${1:CIBlock}::GetElementCount(${2:\\$iblock_id})$0"},
		{"trigger": "CIBlock::GetFields", "contents": "${1:CIBlock}::GetFields(${2:\\$ID})$0"},
		{"trigger": "CIBlock::GetFieldsDefaults", "contents": "${1:CIBlock}::GetFieldsDefaults()$0"},
		{"trigger": "CIBlock::GetGroupPermissions", "contents": "${1:CIBlock}::GetGroupPermissions(${2:\\$ID})$0"},
		{"trigger": "CIBlock::GetList", "contents": "${1:CIBlock}::GetList(${2:\\$arOrder=array('SORT'=>'ASC')}, ${2:\\$arFilter=array()}, ${4:\\$bIncCnt = false})$0"},
		{"trigger": "CIBlock::GetMessages", "contents": "${1:CIBlock}::GetMessages(${2:\\$ID}, ${2:\\$type=''})$0"},
		{"trigger": "CIBlock::GetPanelButtons", "contents": "${1:CIBlock}::GetPanelButtons(${2:\\$IBLOCK_ID=0}, ${2:\\$ELEMENT_ID=0}, ${4:\\$SECTION_ID=0}, ${4:\\$arOptions=array()})$0"},
		{"trigger": "CIBlock::GetPermission", "contents": "${1:CIBlock}::GetPermission(${2:\\$IBLOCK_ID}, ${2:\\$FOR_USER_ID = false})$0"},
		{"trigger": "CIBlock::GetProperties", "contents": "${1:CIBlock}::GetProperties(${2:\\$ID}, ${2:\\$arOrder=array()}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CIBlock::GetSite", "contents": "${1:CIBlock}::GetSite(${2:\\$iblock_id})$0"},
		{"trigger": "CIBlock::MkOperationFilter", "contents": "${1:CIBlock}::MkOperationFilter(${2:\\$key})$0"},
		{"trigger": "CIBlock::NumberFormat", "contents": "${1:CIBlock}::NumberFormat(${2:\\$num})$0"},
		{"trigger": "CIBlock::OnBeforeLangDelete", "contents": "${1:CIBlock}::OnBeforeLangDelete(${2:\\$lang})$0"},
		{"trigger": "CIBlock::OnGroupDelete", "contents": "${1:CIBlock}::OnGroupDelete(${2:\\$group_id})$0"},
		{"trigger": "CIBlock::OnLangDelete", "contents": "${1:CIBlock}::OnLangDelete(${2:\\$lang})$0"},
		{"trigger": "CIBlock::OnSearchGetURL", "contents": "${1:CIBlock}::OnSearchGetURL(${2:\\$arFields})$0"},
		{"trigger": "CIBlock::OnSearchReindex", "contents": "${1:CIBlock}::OnSearchReindex(${2:\\$NS=array()}, ${2:\\$oCallback=NULL}, ${4:\\$callback_method=''})$0"},
		{"trigger": "CIBlock::ReplaceDetailUrl", "contents": "${1:CIBlock}::ReplaceDetailUrl(${2:\\$url}, ${2:\\$arr}, ${4:\\$server_name = false}, ${4:\\$arrType = false})$0"},
		{"trigger": "CIBlock::ReplaceSectionUrl", "contents": "${1:CIBlock}::ReplaceSectionUrl(${2:\\$url}, ${2:\\$arr}, ${4:\\$server_name = false}, ${4:\\$arrType = false})$0"},
		{"trigger": "CIBlock::ResizePicture", "contents": "${1:CIBlock}::ResizePicture(${2:\\$arFile}, ${2:\\$arResize})$0"},
		{"trigger": "CIBlock::SetFields", "contents": "${1:CIBlock}::SetFields(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlock::SetMessages", "contents": "${1:CIBlock}::SetMessages(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlock::SetPermission", "contents": "${1:CIBlock}::SetPermission(${2:\\$IBLOCK_ID}, ${2:\\$arGROUP_ID})$0"},
		{"trigger": "CIBlock::ShowPanel", "contents": "${1:CIBlock}::ShowPanel(${2:\\$IBLOCK_ID=0}, ${2:\\$ELEMENT_ID=0}, ${4:\\$SECTION_ID=''}, ${4:\\$type='news'}, ${6:\\$bGetIcons=false}, ${6:\\$componentName=''}, ${8:\\$arLabels=array()})$0"},
		{"trigger": "CIBlock::Update", "contents": "${1:CIBlock}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlock::_Add", "contents": "${1:CIBlock}::_Add(${2:\\$ID})$0"},
		{"trigger": "CIBlock::_GetProductUrl", "contents": "${1:CIBlock}::_GetProductUrl(${2:\\$OF_ELEMENT_ID}, ${2:\\$OF_IBLOCK_ID}, ${4:\\$server_name = false}, ${4:\\$arrType = false})$0"},
		{"trigger": "CIBlock::_MergeIBarrays", "contents": "${1:CIBlock}::_MergeIBarrays(${2:\\$iblock_id}, ${2:\\$iblock_code = false}, ${4:\\$iblock_id2 = false}, ${4:\\$iblock_code2 = false})$0"},
		{"trigger": "CIBlock::_NotEmpty", "contents": "${1:CIBlock}::_NotEmpty(${2:\\$column})$0"},
		{"trigger": "CIBlock::_Order", "contents": "${1:CIBlock}::_Order(${2:\\$by}, ${2:\\$order}, ${4:\\$default_order}, ${4:\\$nullable = true})$0"},
		{"trigger": "CIBlock::_Upper", "contents": "${1:CIBlock}::_Upper(${2:\\$str})$0"},
		{"trigger": "CIBlock::roundDB", "contents": "${1:CIBlock}::roundDB(${2:\\$value})$0"},
		{"trigger": "CIBlockCMLExport::DoNotDownloadCloudFiles", "contents": "${1:CIBlockCMLExport}::DoNotDownloadCloudFiles()$0"},
		{"trigger": "CIBlockCMLExport::EndExport", "contents": "${1:CIBlockCMLExport}::EndExport()$0"},
		{"trigger": "CIBlockCMLExport::EndExportCatalog", "contents": "${1:CIBlockCMLExport}::EndExportCatalog()$0"},
		{"trigger": "CIBlockCMLExport::EndExportMetadata", "contents": "${1:CIBlockCMLExport}::EndExportMetadata()$0"},
		{"trigger": "CIBlockCMLExport::ExportElements", "contents": "${1:CIBlockCMLExport}::ExportElements(${2:\\$PROPERTY_MAP}, ${2:\\$SECTION_MAP}, ${4:\\$start_time}, ${4:\\$INTERVAL}, ${6:\\$counter_limit = 0}, ${6:\\$arElementFilter = false})$0"},
		{"trigger": "CIBlockCMLExport::ExportFile", "contents": "${1:CIBlockCMLExport}::ExportFile(${2:\\$FILE_ID})$0"},
		{"trigger": "CIBlockCMLExport::ExportPrices", "contents": "${1:CIBlockCMLExport}::ExportPrices()$0"},
		{"trigger": "CIBlockCMLExport::ExportProperties", "contents": "${1:CIBlockCMLExport}::ExportProperties(${2:&\\$PROPERTY_MAP})$0"},
		{"trigger": "CIBlockCMLExport::ExportPropertyValue", "contents": "${1:CIBlockCMLExport}::ExportPropertyValue(${2:\\$xml_id}, ${2:\\$value}, ${4:\\$type = null})$0"},
		{"trigger": "CIBlockCMLExport::ExportSections", "contents": "${1:CIBlockCMLExport}::ExportSections(${2:&\\$SECTION_MAP}, ${2:\\$start_time}, ${4:\\$INTERVAL}, ${4:\\$FILTER = ''})$0"},
		{"trigger": "CIBlockCMLExport::ExportSectionsProperties", "contents": "${1:CIBlockCMLExport}::ExportSectionsProperties(${2:\\$arUserFields})$0"},
		{"trigger": "CIBlockCMLExport::GetElementXML_ID", "contents": "${1:CIBlockCMLExport}::GetElementXML_ID(${2:\\$IBLOCK_ID}, ${2:\\$ELEMENT_ID}, ${4:\\$XML_ID = false})$0"},
		{"trigger": "CIBlockCMLExport::GetIBlockXML_ID", "contents": "${1:CIBlockCMLExport}::GetIBlockXML_ID(${2:\\$IBLOCK_ID}, ${2:\\$XML_ID=false})$0"},
		{"trigger": "CIBlockCMLExport::GetPropertyXML_ID", "contents": "${1:CIBlockCMLExport}::GetPropertyXML_ID(${2:\\$IBLOCK_ID}, ${2:\\$NAME}, ${4:\\$PROPERTY_ID}, ${4:\\$XML_ID})$0"},
		{"trigger": "CIBlockCMLExport::GetSectionXML_ID", "contents": "${1:CIBlockCMLExport}::GetSectionXML_ID(${2:\\$IBLOCK_ID}, ${2:\\$SECTION_ID}, ${4:\\$XML_ID = false})$0"},
		{"trigger": "CIBlockCMLExport::Init", "contents": "${1:CIBlockCMLExport}::Init(${2:\\$fp}, ${2:\\$IBLOCK_ID}, ${4:\\$next_step}, ${4:\\$bExtended=false}, ${6:\\$work_dir=false}, ${6:\\$file_dir=false})$0"},
		{"trigger": "CIBlockCMLExport::StartExport", "contents": "${1:CIBlockCMLExport}::StartExport()$0"},
		{"trigger": "CIBlockCMLExport::StartExportCatalog", "contents": "${1:CIBlockCMLExport}::StartExportCatalog(${2:\\$with_metadata = true}, ${2:\\$changes_only = false})$0"},
		{"trigger": "CIBlockCMLExport::StartExportMetadata", "contents": "${1:CIBlockCMLExport}::StartExportMetadata()$0"},
		{"trigger": "CIBlockCMLExport::formatXMLNode", "contents": "${1:CIBlockCMLExport}::formatXMLNode(${2:\\$level}, ${2:\\$tagName}, ${4:\\$value})$0"},
		{"trigger": "CIBlockCMLImport::ChangeOffersStatus", "contents": "${1:CIBlockCMLImport}::ChangeOffersStatus(${2:\\$ELEMENT_ID}, ${2:\\$STATUS = 'Y'}, ${4:\\$bWF = true})$0"},
		{"trigger": "CIBlockCMLImport::CheckCurrency", "contents": "${1:CIBlockCMLImport}::CheckCurrency(${2:\\$currency})$0"},
		{"trigger": "CIBlockCMLImport::CheckIBlockType", "contents": "${1:CIBlockCMLImport}::CheckIBlockType(${2:\\$ID})$0"},
		{"trigger": "CIBlockCMLImport::CheckIfElementIsActive", "contents": "${1:CIBlockCMLImport}::CheckIfElementIsActive(${2:\\$arXMLElement})$0"},
		{"trigger": "CIBlockCMLImport::CheckIfFileIsCML", "contents": "${1:CIBlockCMLImport}::CheckIfFileIsCML(${2:\\$file_name})$0"},
		{"trigger": "CIBlockCMLImport::CheckProperty", "contents": "${1:CIBlockCMLImport}::CheckProperty(${2:\\$IBLOCK_ID}, ${2:\\$code}, ${4:\\$xml_name})$0"},
		{"trigger": "CIBlockCMLImport::CheckSites", "contents": "${1:CIBlockCMLImport}::CheckSites(${2:\\$arSite})$0"},
		{"trigger": "CIBlockCMLImport::CheckTax", "contents": "${1:CIBlockCMLImport}::CheckTax(${2:\\$title}, ${2:\\$rate})$0"},
		{"trigger": "CIBlockCMLImport::CleanTempFiles", "contents": "${1:CIBlockCMLImport}::CleanTempFiles()$0"},
		{"trigger": "CIBlockCMLImport::CreateTemporaryTables", "contents": "${1:CIBlockCMLImport}::CreateTemporaryTables()$0"},
		{"trigger": "CIBlockCMLImport::DeactivateElement", "contents": "${1:CIBlockCMLImport}::DeactivateElement(${2:\\$action}, ${2:\\$start_time}, ${4:\\$interval})$0"},
		{"trigger": "CIBlockCMLImport::DeactivateSections", "contents": "${1:CIBlockCMLImport}::DeactivateSections(${2:\\$action})$0"},
		{"trigger": "CIBlockCMLImport::DropTemporaryTables", "contents": "${1:CIBlockCMLImport}::DropTemporaryTables()$0"},
		{"trigger": "CIBlockCMLImport::EndSession", "contents": "${1:CIBlockCMLImport}::EndSession()$0"},
		{"trigger": "CIBlockCMLImport::GetElementByXML_ID", "contents": "${1:CIBlockCMLImport}::GetElementByXML_ID(${2:\\$IBLOCK_ID}, ${2:\\$XML_ID})$0"},
		{"trigger": "CIBlockCMLImport::GetElementCRC", "contents": "${1:CIBlockCMLImport}::GetElementCRC(${2:\\$arElement})$0"},
		{"trigger": "CIBlockCMLImport::GetEnumByXML_ID", "contents": "${1:CIBlockCMLImport}::GetEnumByXML_ID(${2:\\$PROP_ID}, ${2:\\$XML_ID})$0"},
		{"trigger": "CIBlockCMLImport::GetIBlockByXML_ID", "contents": "${1:CIBlockCMLImport}::GetIBlockByXML_ID(${2:\\$XML_ID})$0"},
		{"trigger": "CIBlockCMLImport::GetPropertyByXML_ID", "contents": "${1:CIBlockCMLImport}::GetPropertyByXML_ID(${2:\\$IBLOCK_ID}, ${2:\\$XML_ID})$0"},
		{"trigger": "CIBlockCMLImport::GetSectionByXML_ID", "contents": "${1:CIBlockCMLImport}::GetSectionByXML_ID(${2:\\$IBLOCK_ID}, ${2:\\$XML_ID})$0"},
		{"trigger": "CIBlockCMLImport::GetSessionRoot", "contents": "${1:CIBlockCMLImport}::GetSessionRoot()$0"},
		{"trigger": "CIBlockCMLImport::ImportElement", "contents": "${1:CIBlockCMLImport}::ImportElement(${2:\\$arXMLElement}, ${2:&\\$counter}, ${4:\\$bWF}, ${4:\\$arParent})$0"},
		{"trigger": "CIBlockCMLImport::ImportElementPrices", "contents": "${1:CIBlockCMLImport}::ImportElementPrices(${2:\\$arXMLElement}, ${2:&\\$counter}, ${4:\\$bWF})$0"},
		{"trigger": "CIBlockCMLImport::ImportElements", "contents": "${1:CIBlockCMLImport}::ImportElements(${2:\\$start_time}, ${2:\\$interval})$0"},
		{"trigger": "CIBlockCMLImport::ImportMetaData", "contents": "${1:CIBlockCMLImport}::ImportMetaData(${2:\\$xml_root_id}, ${2:\\$IBLOCK_TYPE}, ${4:\\$IBLOCK_LID}, ${4:\\$bUpdateIBlock = true})$0"},
		{"trigger": "CIBlockCMLImport::ImportPrices", "contents": "${1:CIBlockCMLImport}::ImportPrices(${2:\\$XML_PRICES_PARENT}, ${2:\\$IBLOCK_ID}, ${4:\\$IBLOCK_LID})$0"},
		{"trigger": "CIBlockCMLImport::ImportProperties", "contents": "${1:CIBlockCMLImport}::ImportProperties(${2:\\$XML_PROPERTIES_PARENT}, ${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlockCMLImport::ImportSection", "contents": "${1:CIBlockCMLImport}::ImportSection(${2:\\$xml_tree_id}, ${2:\\$IBLOCK_ID}, ${4:\\$parent_section_id})$0"},
		{"trigger": "CIBlockCMLImport::ImportSections", "contents": "${1:CIBlockCMLImport}::ImportSections()$0"},
		{"trigger": "CIBlockCMLImport::ImportSectionsProperties", "contents": "${1:CIBlockCMLImport}::ImportSectionsProperties(${2:\\$XML_PARENT}, ${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlockCMLImport::IndexTemporaryTables", "contents": "${1:CIBlockCMLImport}::IndexTemporaryTables()$0"},
		{"trigger": "CIBlockCMLImport::Init", "contents": "${1:CIBlockCMLImport}::Init(${2:&\\$next_step}, ${2:\\$files_dir = false}, ${4:\\$use_crc = true}, ${4:\\$preview = false}, ${6:\\$detail = false}, ${6:\\$use_offers = false}, ${8:\\$use_iblock_type_id = false}, ${8:\\$table_name = 'b_xml_tree'})$0"},
		{"trigger": "CIBlockCMLImport::InitEx", "contents": "${1:CIBlockCMLImport}::InitEx(${2:&\\$next_step}, ${2:\\$params})$0"},
		{"trigger": "CIBlockCMLImport::MakeFilearray", "contents": "${1:CIBlockCMLImport}::MakeFilearray(${2:\\$file})$0"},
		{"trigger": "CIBlockCMLImport::ReadCatalogData", "contents": "${1:CIBlockCMLImport}::ReadCatalogData(${2:&\\$SECTION_MAP}, ${2:&\\$PRICES_MAP})$0"},
		{"trigger": "CIBlockCMLImport::ReadXMLToDatabase", "contents": "${1:CIBlockCMLImport}::ReadXMLToDatabase(${2:\\$fp}, ${2:&\\$NS}, ${4:\\$time_limit=0}, ${4:\\$read_size = 1024})$0"},
		{"trigger": "CIBlockCMLImport::ResizePicture", "contents": "${1:CIBlockCMLImport}::ResizePicture(${2:\\$file}, ${2:\\$resize})$0"},
		{"trigger": "CIBlockCMLImport::SectionsResort", "contents": "${1:CIBlockCMLImport}::SectionsResort()$0"},
		{"trigger": "CIBlockCMLImport::SetProductPrice", "contents": "${1:CIBlockCMLImport}::SetProductPrice(${2:\\$PRODUCT_ID}, ${2:\\$arPrices}, ${4:\\$arDiscounts = false})$0"},
		{"trigger": "CIBlockCMLImport::StartSession", "contents": "${1:CIBlockCMLImport}::StartSession(${2:\\$sess_id})$0"},
		{"trigger": "CIBlockCMLImport::ToFloat", "contents": "${1:CIBlockCMLImport}::ToFloat(${2:\\$str})$0"},
		{"trigger": "CIBlockCMLImport::ToInt", "contents": "${1:CIBlockCMLImport}::ToInt(${2:\\$str})$0"},
		{"trigger": "CIBlockCMLImport::URLEncode", "contents": "${1:CIBlockCMLImport}::URLEncode(${2:\\$str})$0"},
		{"trigger": "CIBlockDocument::AddDocumentField", "contents": "${1:CIBlockDocument}::AddDocumentField(${2:\\$documentType}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlockDocument::CanUserOperateDocument", "contents": "${1:CIBlockDocument}::CanUserOperateDocument(${2:\\$operation}, ${2:\\$userId}, ${4:\\$documentId}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CIBlockDocument::CanUserOperateDocumentType", "contents": "${1:CIBlockDocument}::CanUserOperateDocumentType(${2:\\$operation}, ${2:\\$userId}, ${4:\\$documentType}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CIBlockDocument::CloneElement", "contents": "${1:CIBlockDocument}::CloneElement(${2:\\$ID}, ${2:\\$arFields = array()})$0"},
		{"trigger": "CIBlockDocument::CreateDocument", "contents": "${1:CIBlockDocument}::CreateDocument(${2:\\$parentDocumentId}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlockDocument::DeleteDocument", "contents": "${1:CIBlockDocument}::DeleteDocument(${2:\\$documentId})$0"},
		{"trigger": "CIBlockDocument::GetAllowableOperations", "contents": "${1:CIBlockDocument}::GetAllowableOperations(${2:\\$documentType})$0"},
		{"trigger": "CIBlockDocument::GetAllowableUserGroups", "contents": "${1:CIBlockDocument}::GetAllowableUserGroups(${2:\\$documentType})$0"},
		{"trigger": "CIBlockDocument::GetDocument", "contents": "${1:CIBlockDocument}::GetDocument(${2:\\$documentId})$0"},
		{"trigger": "CIBlockDocument::GetDocumentAdminPage", "contents": "${1:CIBlockDocument}::GetDocumentAdminPage(${2:\\$documentId})$0"},
		{"trigger": "CIBlockDocument::GetDocumentFieldTypes", "contents": "${1:CIBlockDocument}::GetDocumentFieldTypes(${2:\\$documentType})$0"},
		{"trigger": "CIBlockDocument::GetDocumentFields", "contents": "${1:CIBlockDocument}::GetDocumentFields(${2:\\$documentType})$0"},
		{"trigger": "CIBlockDocument::GetDocumentForHistory", "contents": "${1:CIBlockDocument}::GetDocumentForHistory(${2:\\$documentId}, ${2:\\$historyIndex})$0"},
		{"trigger": "CIBlockDocument::GetDocumentType", "contents": "${1:CIBlockDocument}::GetDocumentType(${2:\\$documentId})$0"},
		{"trigger": "CIBlockDocument::GetFieldInputControl", "contents": "${1:CIBlockDocument}::GetFieldInputControl(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$arFieldName}, ${4:\\$fieldValue}, ${6:\\$bAllowSelection = false}, ${6:\\$publicMode = false})$0"},
		{"trigger": "CIBlockDocument::GetFieldInputControlOptions", "contents": "${1:CIBlockDocument}::GetFieldInputControlOptions(${2:\\$documentType}, ${2:&\\$arFieldType}, ${4:\\$jsFunctionName}, ${4:&\\$value})$0"},
		{"trigger": "CIBlockDocument::GetFieldInputValue", "contents": "${1:CIBlockDocument}::GetFieldInputValue(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$arFieldName}, ${4:\\$arRequest}, ${6:&\\$arErrors})$0"},
		{"trigger": "CIBlockDocument::GetFieldInputValuePrintable", "contents": "${1:CIBlockDocument}::GetFieldInputValuePrintable(${2:\\$documentType}, ${2:\\$arFieldType}, ${4:\\$fieldValue})$0"},
		{"trigger": "CIBlockDocument::GetFieldValuePrintable", "contents": "${1:CIBlockDocument}::GetFieldValuePrintable(${2:\\$documentId}, ${2:\\$fieldName}, ${4:\\$fieldType}, ${4:\\$fieldValue}, ${6:\\$arFieldType})$0"},
		{"trigger": "CIBlockDocument::GetJSFunctionsForFields", "contents": "${1:CIBlockDocument}::GetJSFunctionsForFields(${2:\\$documentType}, ${2:\\$objectName}, ${4:\\$arDocumentFields = array()}, ${4:\\$arDocumentFieldTypes = array()})$0"},
		{"trigger": "CIBlockDocument::GetUsersFromUserGroup", "contents": "${1:CIBlockDocument}::GetUsersFromUserGroup(${2:\\$group}, ${2:\\$documentId})$0"},
		{"trigger": "CIBlockDocument::GetVersion", "contents": "${1:CIBlockDocument}::GetVersion()$0"},
		{"trigger": "CIBlockDocument::IsDocumentLocked", "contents": "${1:CIBlockDocument}::IsDocumentLocked(${2:\\$documentId}, ${2:\\$workflowId})$0"},
		{"trigger": "CIBlockDocument::LockDocument", "contents": "${1:CIBlockDocument}::LockDocument(${2:\\$documentId}, ${2:\\$workflowId})$0"},
		{"trigger": "CIBlockDocument::PublishDocument", "contents": "${1:CIBlockDocument}::PublishDocument(${2:\\$documentId})$0"},
		{"trigger": "CIBlockDocument::RecoverDocumentFromHistory", "contents": "${1:CIBlockDocument}::RecoverDocumentFromHistory(${2:\\$documentId}, ${2:\\$arDocument})$0"},
		{"trigger": "CIBlockDocument::SetPermissions", "contents": "${1:CIBlockDocument}::SetPermissions(${2:\\$documentId}, ${2:\\$workflowId}, ${4:\\$arPermissions}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "CIBlockDocument::UnlockDocument", "contents": "${1:CIBlockDocument}::UnlockDocument(${2:\\$documentId}, ${2:\\$workflowId})$0"},
		{"trigger": "CIBlockDocument::UnpublishDocument", "contents": "${1:CIBlockDocument}::UnpublishDocument(${2:\\$documentId})$0"},
		{"trigger": "CIBlockDocument::UpdateDocument", "contents": "${1:CIBlockDocument}::UpdateDocument(${2:\\$documentId}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlockElement::Add", "contents": "${1:CIBlockElement}::Add(${2:\\$arFields}, ${2:\\$bWorkFlow=false}, ${4:\\$bUpdateSearch=true}, ${4:\\$bResizePictures=false})$0"},
		{"trigger": "CIBlockElement::CancelWFSetMove", "contents": "${1:CIBlockElement}::CancelWFSetMove()$0"},
		{"trigger": "CIBlockElement::CheckFields", "contents": "${1:CIBlockElement}::CheckFields(${2:&\\$arFields}, ${2:\\$ID=false}, ${4:\\$bCheckDiskQuota=true})$0"},
		{"trigger": "CIBlockElement::CounterInc", "contents": "${1:CIBlockElement}::CounterInc(${2:\\$ID})$0"},
		{"trigger": "CIBlockElement::Delete", "contents": "${1:CIBlockElement}::Delete(${2:\\$ID})$0"},
		{"trigger": "CIBlockElement::DeleteFile", "contents": "${1:CIBlockElement}::DeleteFile(${2:\\$FILE_ID}, ${2:\\$ELEMENT_ID}, ${4:\\$TYPE = false}, ${4:\\$PARENT_ID = -1}, ${6:\\$IBLOCK_ID = false}, ${6:\\$bCheckOnly = false})$0"},
		{"trigger": "CIBlockElement::DeletePropertySQL", "contents": "${1:CIBlockElement}::DeletePropertySQL(${2:\\$property}, ${2:\\$iblock_element_id})$0"},
		{"trigger": "CIBlockElement::GetByID", "contents": "${1:CIBlockElement}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CIBlockElement::GetElementGroups", "contents": "${1:CIBlockElement}::GetElementGroups(${2:\\$ID}, ${2:\\$bElementOnly = false})$0"},
		{"trigger": "CIBlockElement::GetIBVersion", "contents": "${1:CIBlockElement}::GetIBVersion(${2:\\$iblock_id})$0"},
		{"trigger": "CIBlockElement::GetList", "contents": "${1:CIBlockElement}::GetList(${2:\\$arOrder=array('SORT'=>'ASC')}, ${2:\\$arFilter=array()}, ${4:\\$arGroupBy=false}, ${4:\\$arNavStartParams=false}, ${6:\\$arSelectFields=array()})$0"},
		{"trigger": "CIBlockElement::GetProperty", "contents": "${1:CIBlockElement}::GetProperty(${2:\\$IBLOCK_ID}, ${2:\\$ELEMENT_ID}, ${4:\\$by='sort'}, ${4:\\$order='asc'}, ${6:\\$arFilter = array()})$0"},
		{"trigger": "CIBlockElement::GetRandFunction", "contents": "${1:CIBlockElement}::GetRandFunction()$0"},
		{"trigger": "CIBlockElement::GetRealElement", "contents": "${1:CIBlockElement}::GetRealElement(${2:\\$ID})$0"},
		{"trigger": "CIBlockElement::GetShowedFunction", "contents": "${1:CIBlockElement}::GetShowedFunction()$0"},
		{"trigger": "CIBlockElement::MkAlias", "contents": "${1:CIBlockElement}::MkAlias(${2:\\$max_alias_len}, ${2:\\$alias}, ${4:&\\$arIBlockLongProps})$0"},
		{"trigger": "CIBlockElement::MkFilter", "contents": "${1:CIBlockElement}::MkFilter(${2:\\$arFilter}, ${2:&\\$arJoinProps}, ${4:&\\$arAddWhereFields}, ${4:\\$level = 0}, ${6:\\$bPropertyLeftJoin = false})$0"},
		{"trigger": "CIBlockElement::MkPropertyFilter", "contents": "${1:CIBlockElement}::MkPropertyFilter(${2:\\$res}, ${2:\\$cOperationType}, ${4:\\$propVAL}, ${4:$DB_prop}, ${6:&\\$arJoinProps}, ${6:&\\$arSqlSearch})$0"},
		{"trigger": "CIBlockElement::MkPropertyGroup", "contents": "${1:CIBlockElement}::MkPropertyGroup(${2:$DB_prop}, ${2:&\\$arJoinProps})$0"},
		{"trigger": "CIBlockElement::MkPropertyOrder", "contents": "${1:CIBlockElement}::MkPropertyOrder(${2:\\$by}, ${2:\\$order}, ${4:\\$bSort}, ${4:$DB_prop}, ${6:&\\$arJoinProps}, ${6:&\\$arSqlOrder})$0"},
		{"trigger": "CIBlockElement::MkPropertySelect", "contents": "${1:CIBlockElement}::MkPropertySelect(${2:\\$PR_ID}, ${2:$DB_prop}, ${4:&\\$arIBlockLongProps}, ${4:&\\$arIBlockConvProps}, ${6:&\\$arJoinProps}, ${6:&\\$arIBlockMultProps}, ${8:&\\$arIBlockNumProps}, ${8:\\$bWasGroup}, ${10:\\$sGroupBy}, ${20:&\\$sSelect})$0"},
		{"trigger": "CIBlockElement::PrepareGetList", "contents": "${1:CIBlockElement}::PrepareGetList(${2:N/A})$0"},
		{"trigger": "CIBlockElement::RecalcSections", "contents": "${1:CIBlockElement}::RecalcSections(${2:\\$ID})$0"},
		{"trigger": "CIBlockElement::SetElementSection", "contents": "${1:CIBlockElement}::SetElementSection(${2:\\$ID}, ${2:\\$arSections}, ${4:\\$bNew = false}, ${4:\\$bRightsIBlock = 0})$0"},
		{"trigger": "CIBlockElement::SetPropertyValueCode", "contents": "${1:CIBlockElement}::SetPropertyValueCode(${2:\\$ELEMENT_ID}, ${2:\\$PROPERTY_CODE}, ${4:\\$PROPERTY_VALUE})$0"},
		{"trigger": "CIBlockElement::SetPropertyValues", "contents": "${1:CIBlockElement}::SetPropertyValues(${2:\\$ELEMENT_ID}, ${2:\\$IBLOCK_ID}, ${4:\\$PROPERTY_VALUES}, ${4:\\$PROPERTY_CODE = false})$0"},
		{"trigger": "CIBlockElement::SetPropertyValuesEx", "contents": "${1:CIBlockElement}::SetPropertyValuesEx(${2:\\$ELEMENT_ID}, ${2:\\$IBLOCK_ID}, ${4:\\$PROPERTY_VALUES}, ${4:\\$FLAGS=array()})$0"},
		{"trigger": "CIBlockElement::SubQuery", "contents": "${1:CIBlockElement}::SubQuery(${2:\\$strField}, ${2:\\$arFilter})$0"},
		{"trigger": "CIBlockElement::Update", "contents": "${1:CIBlockElement}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$bWorkFlow=false}, ${4:\\$bUpdateSearch=true}, ${6:\\$bResizePictures=false}, ${6:\\$bCheckDiskQuota=true})$0"},
		{"trigger": "CIBlockElement::UpdateSearch", "contents": "${1:CIBlockElement}::UpdateSearch(${2:\\$ID}, ${2:\\$bOverWrite=false})$0"},
		{"trigger": "CIBlockElement::WF_CleanUpHistory", "contents": "${1:CIBlockElement}::WF_CleanUpHistory()$0"},
		{"trigger": "CIBlockElement::WF_CleanUpHistoryCopies", "contents": "${1:CIBlockElement}::WF_CleanUpHistoryCopies(${2:\\$ELEMENT_ID=false}, ${2:\\$HISTORY_COPIES=false})$0"},
		{"trigger": "CIBlockElement::WF_GetCurrentStatus", "contents": "${1:CIBlockElement}::WF_GetCurrentStatus(${2:\\$ELEMENT_ID}, ${2:&\\$STATUS_TITLE})$0"},
		{"trigger": "CIBlockElement::WF_GetHistoryList", "contents": "${1:CIBlockElement}::WF_GetHistoryList(${2:\\$ELEMENT_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CIBlockElement::WF_GetLast", "contents": "${1:CIBlockElement}::WF_GetLast(${2:\\$ID})$0"},
		{"trigger": "CIBlockElement::WF_GetLockStatus", "contents": "${1:CIBlockElement}::WF_GetLockStatus(${2:\\$ID}, ${2:&\\$locked_by}, ${4:&\\$date_lock})$0"},
		{"trigger": "CIBlockElement::WF_GetSqlLimit", "contents": "${1:CIBlockElement}::WF_GetSqlLimit(${2:\\$PS='BE.'}, ${2:\\$SHOW_NEW='N'})$0"},
		{"trigger": "CIBlockElement::WF_GetStatusPermission", "contents": "${1:CIBlockElement}::WF_GetStatusPermission(${2:\\$STATUS_ID}, ${2:\\$ID = false})$0"},
		{"trigger": "CIBlockElement::WF_GetStatusTitle", "contents": "${1:CIBlockElement}::WF_GetStatusTitle(${2:\\$STATUS_ID})$0"},
		{"trigger": "CIBlockElement::WF_IsLocked", "contents": "${1:CIBlockElement}::WF_IsLocked(${2:\\$ID}, ${2:&\\$locked_by}, ${4:&\\$date_lock})$0"},
		{"trigger": "CIBlockElement::WF_Lock", "contents": "${1:CIBlockElement}::WF_Lock(${2:\\$LAST_ID}, ${2:\\$bWorkFlow=true})$0"},
		{"trigger": "CIBlockElement::WF_Restore", "contents": "${1:CIBlockElement}::WF_Restore(${2:\\$ID})$0"},
		{"trigger": "CIBlockElement::WF_SetMove", "contents": "${1:CIBlockElement}::WF_SetMove(${2:\\$NEW_ID}, ${2:\\$OLD_ID = 0})$0"},
		{"trigger": "CIBlockElement::WF_UnLock", "contents": "${1:CIBlockElement}::WF_UnLock(${2:\\$LAST_ID}, ${2:\\$bWorkFlow=true})$0"},
		{"trigger": "CIBlockElement::__GetFileContent", "contents": "${1:CIBlockElement}::__GetFileContent(${2:\\$FILE_ID})$0"},
		{"trigger": "CIBlockElement::__InitFile", "contents": "${1:CIBlockElement}::__InitFile(${2:\\$old_id}, ${2:&\\$arFields}, ${4:\\$fname})$0"},
		{"trigger": "CIBlockElement::_check_rights_sql", "contents": "${1:CIBlockElement}::_check_rights_sql(${2:\\$min_permission})$0"},
		{"trigger": "CIBlockElement::_sql_in", "contents": "${1:CIBlockElement}::_sql_in(${2:\\$strField}, ${2:\\$cOperationType})$0"},
		{"trigger": "CIBlockElementRights::DeleteAllRights", "contents": "${1:CIBlockElementRights}::DeleteAllRights()$0"},
		{"trigger": "CIBlockElementRights::GetList", "contents": "${1:CIBlockElementRights}::GetList(${2:\\$arFilter})$0"},
		{"trigger": "CIBlockElementRights::GetRights", "contents": "${1:CIBlockElementRights}::GetRights(${2:\\$arOptions = array()})$0"},
		{"trigger": "CIBlockElementRights::GetUserOperations", "contents": "${1:CIBlockElementRights}::GetUserOperations(${2:\\$arID}, ${2:\\$USER_ID = 0})$0"},
		{"trigger": "CIBlockElementRights::UserHasRightTo", "contents": "${1:CIBlockElementRights}::UserHasRightTo(${2:\\$IBLOCK_ID}, ${2:\\$ID}, ${4:\\$permission}, ${4:\\$flags = 0})$0"},
		{"trigger": "CIBlockElementRights::__construct", "contents": "${1:CIBlockElementRights}::__construct(${2:\\$IBLOCK_ID}, ${2:\\$ELEMENT_ID})$0"},
		{"trigger": "CIBlockElementRights::_entity_type", "contents": "${1:CIBlockElementRights}::_entity_type()$0"},
		{"trigger": "CIBlockElementRights::_self_check", "contents": "${1:CIBlockElementRights}::_self_check()$0"},
		{"trigger": "CIBlockElementRights::_storage_object", "contents": "${1:CIBlockElementRights}::_storage_object()$0"},
		{"trigger": "CIBlockFindTools::GetElementID", "contents": "${1:CIBlockFindTools}::GetElementID(${2:\\$element_id}, ${2:\\$element_code}, ${4:\\$section_id}, ${4:\\$section_code}, ${6:\\$arFilter})$0"},
		{"trigger": "CIBlockFindTools::GetSectionID", "contents": "${1:CIBlockFindTools}::GetSectionID(${2:\\$section_id}, ${2:\\$section_code}, ${4:\\$arFilter})$0"},
		{"trigger": "CIBlockFormatProperties::DateFormat", "contents": "${1:CIBlockFormatProperties}::DateFormat(${2:\\$format}, ${2:\\$timestamp})$0"},
		{"trigger": "CIBlockFormatProperties::GetDisplayValue", "contents": "${1:CIBlockFormatProperties}::GetDisplayValue(${2:\\$arItem}, ${2:\\$arProperty}, ${4:\\$event1})$0"},
		{"trigger": "CIBlockOffersTmp::Add", "contents": "${1:CIBlockOffersTmp}::Add(${2:\\$intProductIBlockID,\\$intOffersIBlockID})$0"},
		{"trigger": "CIBlockOffersTmp::Delete", "contents": "${1:CIBlockOffersTmp}::Delete(${2:\\$ID})$0"},
		{"trigger": "CIBlockOffersTmp::DeleteOldID", "contents": "${1:CIBlockOffersTmp}::DeleteOldID(${2:\\$intProductIBlockID,\\$intOffersIBlockID,\\$intInterval = 86400})$0"},
		{"trigger": "CIBlockOffersTmp::GetOldID", "contents": "${1:CIBlockOffersTmp}::GetOldID(${2:\\$intProductIBlockID,\\$intOffersIBlockID,\\$intInterval = 1800})$0"},
		{"trigger": "CIBlockParameters::AddPagerSettings", "contents": "${1:CIBlockParameters}::AddPagerSettings(${2:&\\$arComponentParameters}, ${2:\\$pager_title}, ${4:\\$bDescNumbering=true}, ${4:\\$bShowAllParam=false})$0"},
		{"trigger": "CIBlockParameters::GetDateFormat", "contents": "${1:CIBlockParameters}::GetDateFormat(${2:\\$name}, ${2:\\$parent})$0"},
		{"trigger": "CIBlockParameters::GetFieldCode", "contents": "${1:CIBlockParameters}::GetFieldCode(${2:\\$name}, ${2:\\$parent}, ${4:\\$options = array()})$0"},
		{"trigger": "CIBlockParameters::GetIBlockTypes", "contents": "${1:CIBlockParameters}::GetIBlockTypes(${2:\\$arTop = false})$0"},
		{"trigger": "CIBlockParameters::GetPathTemplateMenuItems", "contents": "${1:CIBlockParameters}::GetPathTemplateMenuItems(${2:\\$menuType}, ${2:\\$action_function}, ${4:\\$menuID}, ${4:\\$inputID = ''})$0"},
		{"trigger": "CIBlockParameters::GetPathTemplateParam", "contents": "${1:CIBlockParameters}::GetPathTemplateParam(${2:\\$menuType}, ${2:\\$ID}, ${4:\\$parameterName}, ${4:\\$defaultValue = ''}, ${6:\\$parentID = 'URL_TEMPLATES'})$0"},
		{"trigger": "CIBlockParameters::GetSectionFieldCode", "contents": "${1:CIBlockParameters}::GetSectionFieldCode(${2:\\$name}, ${2:\\$parent}, ${4:\\$options = array()})$0"},
		{"trigger": "CIBlockPriceTools::CanBuy", "contents": "${1:CIBlockPriceTools}::CanBuy(${2:\\$IBLOCK_ID}, ${2:\\$arCatalogPrices}, ${4:\\$arItem})$0"},
		{"trigger": "CIBlockPriceTools::CheckProductProperties", "contents": "${1:CIBlockPriceTools}::CheckProductProperties(${2:\\$IBLOCK_ID}, ${2:\\$ELEMENT_ID}, ${4:\\$arPropertiesList}, ${4:\\$arPropertiesValues})$0"},
		{"trigger": "CIBlockPriceTools::GetCatalogPrices", "contents": "${1:CIBlockPriceTools}::GetCatalogPrices(${2:\\$IBLOCK_ID}, ${2:\\$arPriceCode})$0"},
		{"trigger": "CIBlockPriceTools::GetItemPrices", "contents": "${1:CIBlockPriceTools}::GetItemPrices(${2:\\$IBLOCK_ID}, ${2:\\$arCatalogPrices}, ${4:\\$arItem}, ${4:\\$bVATInclude = true}, ${6:\\$arCurrencyParams = array()})$0"},
		{"trigger": "CIBlockPriceTools::GetOfferProperties", "contents": "${1:CIBlockPriceTools}::GetOfferProperties(${2:\\$OFFER_ID}, ${2:\\$IBLOCK_ID}, ${4:\\$arPropertiesList})$0"},
		{"trigger": "CIBlockPriceTools::GetOffersarray", "contents": "${1:CIBlockPriceTools}::GetOffersarray(${2:\\$IBLOCK_ID}, ${2:\\$arElementID}, ${4:\\$arOrder}, ${4:\\$arSelectFields}, ${6:\\$arSelectProperties}, ${6:\\$limit}, ${8:\\$arPrices}, ${8:\\$vat_include}, ${10:\\$arCurrencyParams = array()})$0"},
		{"trigger": "CIBlockPriceTools::GetOffersIBlock", "contents": "${1:CIBlockPriceTools}::GetOffersIBlock(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlockPriceTools::GetProductProperties", "contents": "${1:CIBlockPriceTools}::GetProductProperties(${2:\\$IBLOCK_ID}, ${2:\\$ELEMENT_ID}, ${4:\\$arPropertiesList}, ${4:\\$arPropertiesValues})$0"},
		{"trigger": "CIBlockProperty::Add", "contents": "${1:CIBlockProperty}::Add(${2:\\$arFields})$0"},
		{"trigger": "CIBlockProperty::CheckFields", "contents": "${1:CIBlockProperty}::CheckFields(${2:&\\$arFields}, ${2:\\$ID=false}, ${4:\\$bFormValidate=false})$0"},
		{"trigger": "CIBlockProperty::Delete", "contents": "${1:CIBlockProperty}::Delete(${2:\\$ID})$0"},
		{"trigger": "CIBlockProperty::DropColumnSQL", "contents": "${1:CIBlockProperty}::DropColumnSQL(${2:\\$strTable}, ${2:\\$arColumns})$0"},
		{"trigger": "CIBlockProperty::FormatNotFoundError", "contents": "${1:CIBlockProperty}::FormatNotFoundError(${2:\\$ID})$0"},
		{"trigger": "CIBlockProperty::FormatUpdateError", "contents": "${1:CIBlockProperty}::FormatUpdateError(${2:\\$ID}, ${2:\\$CODE})$0"},
		{"trigger": "CIBlockProperty::GetByID", "contents": "${1:CIBlockProperty}::GetByID(${2:\\$ID}, ${2:\\$IBLOCK_ID=false}, ${4:\\$IBLOCK_CODE=false})$0"},
		{"trigger": "CIBlockProperty::GetList", "contents": "${1:CIBlockProperty}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CIBlockProperty::GetPropertyarray", "contents": "${1:CIBlockProperty}::GetPropertyarray(${2:\\$ID}, ${2:\\$IBLOCK_ID}, ${4:\\$bCached=true})$0"},
		{"trigger": "CIBlockProperty::GetPropertyEnum", "contents": "${1:CIBlockProperty}::GetPropertyEnum(${2:\\$PROP_ID}, ${2:\\$arOrder = array('SORT'=>'asc')}, ${4:\\$arFilter = array()})$0"},
		{"trigger": "CIBlockProperty::GetUserType", "contents": "${1:CIBlockProperty}::GetUserType(${2:\\$USER_TYPE = false})$0"},
		{"trigger": "CIBlockProperty::Update", "contents": "${1:CIBlockProperty}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlockProperty::UpdateEnum", "contents": "${1:CIBlockProperty}::UpdateEnum(${2:\\$ID}, ${2:\\$arVALUES}, ${4:\\$bForceDelete = true})$0"},
		{"trigger": "CIBlockProperty::_Add", "contents": "${1:CIBlockProperty}::_Add(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlockProperty::_DateTime_GetUserTypeDescription", "contents": "${1:CIBlockProperty}::_DateTime_GetUserTypeDescription()$0"},
		{"trigger": "CIBlockProperty::_ElementAutoComplete_GetUserTypeDescription", "contents": "${1:CIBlockProperty}::_ElementAutoComplete_GetUserTypeDescription()$0"},
		{"trigger": "CIBlockProperty::_ElementList_GetUserTypeDescription", "contents": "${1:CIBlockProperty}::_ElementList_GetUserTypeDescription()$0"},
		{"trigger": "CIBlockProperty::_FileMan_GetUserTypeDescription", "contents": "${1:CIBlockProperty}::_FileMan_GetUserTypeDescription()$0"},
		{"trigger": "CIBlockProperty::_HTML_GetUserTypeDescription", "contents": "${1:CIBlockProperty}::_HTML_GetUserTypeDescription()$0"},
		{"trigger": "CIBlockProperty::_SKU_GetUserTypeDescription", "contents": "${1:CIBlockProperty}::_SKU_GetUserTypeDescription()$0"},
		{"trigger": "CIBlockProperty::_Sequence_GetUserTypeDescription", "contents": "${1:CIBlockProperty}::_Sequence_GetUserTypeDescription()$0"},
		{"trigger": "CIBlockProperty::_Update", "contents": "${1:CIBlockProperty}::_Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlockProperty::_XmlID_GetUserTypeDescription", "contents": "${1:CIBlockProperty}::_XmlID_GetUserTypeDescription()$0"},
		{"trigger": "CIBlockPropertyDateTime::AddFilterFields", "contents": "${1:CIBlockPropertyDateTime}::AddFilterFields(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arFilter}, ${4:&\\$filtered})$0"},
		{"trigger": "CIBlockPropertyDateTime::CheckFields", "contents": "${1:CIBlockPropertyDateTime}::CheckFields(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyDateTime::ConvertFromDB", "contents": "${1:CIBlockPropertyDateTime}::ConvertFromDB(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyDateTime::ConvertToDB", "contents": "${1:CIBlockPropertyDateTime}::ConvertToDB(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyDateTime::GetAdminFilterHTML", "contents": "${1:CIBlockPropertyDateTime}::GetAdminFilterHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyDateTime::GetAdminListViewHTML", "contents": "${1:CIBlockPropertyDateTime}::GetAdminListViewHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyDateTime::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertyDateTime}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyDateTime::GetPublicEditHTML", "contents": "${1:CIBlockPropertyDateTime}::GetPublicEditHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyDateTime::GetPublicFilterHTML", "contents": "${1:CIBlockPropertyDateTime}::GetPublicFilterHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyDateTime::GetPublicViewHTML", "contents": "${1:CIBlockPropertyDateTime}::GetPublicViewHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyDateTime::GetSettingsHTML", "contents": "${1:CIBlockPropertyDateTime}::GetSettingsHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arPropertyFields})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::AddFilterFields", "contents": "${1:CIBlockPropertyElementAutoComplete}::AddFilterFields(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arFilter}, ${4:&\\$filtered})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetAdminFilterHTML", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetAdminFilterHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetAdminListViewHTML", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetAdminListViewHTML(${2:\\$arProperty}, ${2:\\$arValue}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetLinkElement", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetLinkElement(${2:\\$intElementID,\\$intIBlockID})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$arValue}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetPropertyFieldHtmlMulty", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetPropertyFieldHtmlMulty(${2:\\$arProperty}, ${2:\\$arValues}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetPropertyValue", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetPropertyValue(${2:\\$arProperty,\\$arValue})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetPropertyViewsList", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetPropertyViewsList(${2:\\$boolFull})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetPublicViewHTML", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetPublicViewHTML(${2:\\$arProperty}, ${2:\\$arValue}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetReplaceSymList", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetReplaceSymList(${2:\\$boolFull = false})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetSettingsHTML", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetSettingsHTML(${2:\\$arFields,\\$strHTMLControlName}, ${2:&\\$arPropertyFields})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetSymbols", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetSymbols(${2:\\$arSettings})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetUserTypeDescription", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetUserTypeDescription()$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetValueForAutoComplete", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetValueForAutoComplete(${2:\\$arProperty,\\$arValue,\\$arBanSym,\\$arRepSym})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::GetValueForAutoCompleteMulti", "contents": "${1:CIBlockPropertyElementAutoComplete}::GetValueForAutoCompleteMulti(${2:\\$arProperty,\\$arValues,\\$arBanSym,\\$arRepSym})$0"},
		{"trigger": "CIBlockPropertyElementAutoComplete::PrepareSettings", "contents": "${1:CIBlockPropertyElementAutoComplete}::PrepareSettings(${2:\\$arFields})$0"},
		{"trigger": "CIBlockPropertyElementList::GetAdminFilterHTML", "contents": "${1:CIBlockPropertyElementList}::GetAdminFilterHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyElementList::GetElements", "contents": "${1:CIBlockPropertyElementList}::GetElements(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlockPropertyElementList::GetOptionsHtml", "contents": "${1:CIBlockPropertyElementList}::GetOptionsHtml(${2:\\$arProperty}, ${2:\\$values}, ${4:&\\$bWasSelect})$0"},
		{"trigger": "CIBlockPropertyElementList::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertyElementList}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyElementList::GetPropertyFieldHtmlMulty", "contents": "${1:CIBlockPropertyElementList}::GetPropertyFieldHtmlMulty(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyElementList::GetSections", "contents": "${1:CIBlockPropertyElementList}::GetSections(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlockPropertyElementList::GetSettingsHTML", "contents": "${1:CIBlockPropertyElementList}::GetSettingsHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arPropertyFields})$0"},
		{"trigger": "CIBlockPropertyElementList::PrepareSettings", "contents": "${1:CIBlockPropertyElementList}::PrepareSettings(${2:\\$arProperty})$0"},
		{"trigger": "CIBlockPropertyEnum::Add", "contents": "${1:CIBlockPropertyEnum}::Add(${2:\\$arFields})$0"},
		{"trigger": "CIBlockPropertyEnum::Delete", "contents": "${1:CIBlockPropertyEnum}::Delete(${2:\\$ID})$0"},
		{"trigger": "CIBlockPropertyEnum::DeleteByPropertyID", "contents": "${1:CIBlockPropertyEnum}::DeleteByPropertyID(${2:\\$PROPERTY_ID}, ${2:\\$bIgnoreError=false})$0"},
		{"trigger": "CIBlockPropertyEnum::GetByID", "contents": "${1:CIBlockPropertyEnum}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CIBlockPropertyEnum::GetList", "contents": "${1:CIBlockPropertyEnum}::GetList(${2:\\$arOrder=array('SORT'=>'ASC'}, ${2:'VALUE'=>'ASC')}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CIBlockPropertyEnum::Update", "contents": "${1:CIBlockPropertyEnum}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlockPropertyFileMan::ConvertFromDB", "contents": "${1:CIBlockPropertyFileMan}::ConvertFromDB(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyFileMan::ConvertToDB", "contents": "${1:CIBlockPropertyFileMan}::ConvertToDB(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyFileMan::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertyFileMan}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyFileMan::GetUserTypeDescription", "contents": "${1:CIBlockPropertyFileMan}::GetUserTypeDescription()$0"},
		{"trigger": "CIBlockPropertyHTML::Checkarray", "contents": "${1:CIBlockPropertyHTML}::Checkarray(${2:\\$arFields = false})$0"},
		{"trigger": "CIBlockPropertyHTML::ConvertFromDB", "contents": "${1:CIBlockPropertyHTML}::ConvertFromDB(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyHTML::ConvertToDB", "contents": "${1:CIBlockPropertyHTML}::ConvertToDB(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyHTML::GetAdminListViewHTML", "contents": "${1:CIBlockPropertyHTML}::GetAdminListViewHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyHTML::GetLength", "contents": "${1:CIBlockPropertyHTML}::GetLength(${2:\\$arProperty}, ${2:\\$value})$0"},
		{"trigger": "CIBlockPropertyHTML::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertyHTML}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyHTML::GetPublicEditHTML", "contents": "${1:CIBlockPropertyHTML}::GetPublicEditHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyHTML::GetPublicViewHTML", "contents": "${1:CIBlockPropertyHTML}::GetPublicViewHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyHTML::GetSettingsHTML", "contents": "${1:CIBlockPropertyHTML}::GetSettingsHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arPropertyFields})$0"},
		{"trigger": "CIBlockPropertyHTML::PrepareSettings", "contents": "${1:CIBlockPropertyHTML}::PrepareSettings(${2:\\$arProperty})$0"},
		{"trigger": "CIBlockPropertyResult::Fetch", "contents": "${1:CIBlockPropertyResult}::Fetch()$0"},
		{"trigger": "CIBlockPropertySKU::AddFilterFields", "contents": "${1:CIBlockPropertySKU}::AddFilterFields(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arFilter}, ${4:&\\$filtered})$0"},
		{"trigger": "CIBlockPropertySKU::GetAdminFilterHTML", "contents": "${1:CIBlockPropertySKU}::GetAdminFilterHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertySKU::GetAdminListViewHTML", "contents": "${1:CIBlockPropertySKU}::GetAdminListViewHTML(${2:\\$arProperty}, ${2:\\$arValue}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertySKU::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertySKU}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$arValue}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertySKU::GetPublicViewHTML", "contents": "${1:CIBlockPropertySKU}::GetPublicViewHTML(${2:\\$arProperty}, ${2:\\$arValue}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertySKU::GetSettingsHTML", "contents": "${1:CIBlockPropertySKU}::GetSettingsHTML(${2:\\$arFields,\\$strHTMLControlName}, ${2:&\\$arPropertyFields})$0"},
		{"trigger": "CIBlockPropertySKU::GetUserTypeDescription", "contents": "${1:CIBlockPropertySKU}::GetUserTypeDescription()$0"},
		{"trigger": "CIBlockPropertySKU::PrepareSettings", "contents": "${1:CIBlockPropertySKU}::PrepareSettings(${2:\\$arFields})$0"},
		{"trigger": "CIBlockPropertySequence::AddFilterFields", "contents": "${1:CIBlockPropertySequence}::AddFilterFields(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arFilter}, ${4:&\\$filtered})$0"},
		{"trigger": "CIBlockPropertySequence::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertySequence}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertySequence::GetPublicFilterHTML", "contents": "${1:CIBlockPropertySequence}::GetPublicFilterHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertySequence::GetSettingsHTML", "contents": "${1:CIBlockPropertySequence}::GetSettingsHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arPropertyFields})$0"},
		{"trigger": "CIBlockPropertySequence::PrepareSettings", "contents": "${1:CIBlockPropertySequence}::PrepareSettings(${2:\\$arProperty})$0"},
		{"trigger": "CIBlockPropertyXmlID::GetAdminListViewHTML", "contents": "${1:CIBlockPropertyXmlID}::GetAdminListViewHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyXmlID::GetPropertyFieldHtml", "contents": "${1:CIBlockPropertyXmlID}::GetPropertyFieldHtml(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyXmlID::GetPublicViewHTML", "contents": "${1:CIBlockPropertyXmlID}::GetPublicViewHTML(${2:\\$arProperty}, ${2:\\$value}, ${4:\\$strHTMLControlName})$0"},
		{"trigger": "CIBlockPropertyXmlID::GetSettingsHTML", "contents": "${1:CIBlockPropertyXmlID}::GetSettingsHTML(${2:\\$arProperty}, ${2:\\$strHTMLControlName}, ${4:&\\$arPropertyFields})$0"},
		{"trigger": "CIBlockRSS::Add", "contents": "${1:CIBlockRSS}::Add(${2:\\$IBLOCK_ID}, ${2:\\$NODE}, ${4:\\$NODE_VALUE})$0"},
		{"trigger": "CIBlockRSS::Delete", "contents": "${1:CIBlockRSS}::Delete(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlockRSS::ExtractProperties", "contents": "${1:CIBlockRSS}::ExtractProperties(${2:\\$str}, ${2:&\\$arProps}, ${4:&\\$arItem})$0"},
		{"trigger": "CIBlockRSS::Formatarray", "contents": "${1:CIBlockRSS}::Formatarray(${2:&\\$arRes}, ${2:\\$bOutChannel=false})$0"},
		{"trigger": "CIBlockRSS::GetCache", "contents": "${1:CIBlockRSS}::GetCache(${2:\\$cacheKey})$0"},
		{"trigger": "CIBlockRSS::GetNews", "contents": "${1:CIBlockRSS}::GetNews(${2:\\$ID}, ${2:\\$LANG}, ${4:\\$TYPE}, ${4:\\$SITE}, ${6:\\$PORT}, ${6:\\$PATH}, ${8:\\$LIMIT = 0})$0"},
		{"trigger": "CIBlockRSS::GetNewsEx", "contents": "${1:CIBlockRSS}::GetNewsEx(${2:\\$SITE}, ${2:\\$PORT}, ${4:\\$PATH}, ${4:\\$QUERY_STR}, ${6:\\$bOutChannel = False})$0"},
		{"trigger": "CIBlockRSS::GetNodeList", "contents": "${1:CIBlockRSS}::GetNodeList(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlockRSS::GetRSS", "contents": "${1:CIBlockRSS}::GetRSS(${2:\\$ID}, ${2:\\$LANG}, ${4:\\$TYPE}, ${4:\\$LIMIT_NUM = false}, ${6:\\$LIMIT_DAY = false}, ${6:\\$yandex = false})$0"},
		{"trigger": "CIBlockRSS::GetRSSNodes", "contents": "${1:CIBlockRSS}::GetRSSNodes()$0"},
		{"trigger": "CIBlockRSS::GetRSSText", "contents": "${1:CIBlockRSS}::GetRSSText(${2:\\$arIBLOCK}, ${2:\\$LIMIT_NUM = false}, ${4:\\$LIMIT_DAY = false}, ${4:\\$yandex = false})$0"},
		{"trigger": "CIBlockRSS::PreGenerateRSS", "contents": "${1:CIBlockRSS}::PreGenerateRSS(${2:\\$IBLOCK_ID}, ${2:\\$yandex = true})$0"},
		{"trigger": "CIBlockRSS::UpdateCache", "contents": "${1:CIBlockRSS}::UpdateCache(${2:\\$cacheKey}, ${2:\\$CACHE}, ${4:\\$HOURS_CACHE}, ${4:\\$bCACHED})$0"},
		{"trigger": "CIBlockRSS::XMLDate2Dec", "contents": "${1:CIBlockRSS}::XMLDate2Dec(${2:\\$date_XML}, ${2:\\$dateFormat = 'DD.MM.YYYY'})$0"},
		{"trigger": "CIBlockResult::CIBlockResult", "contents": "${1:CIBlockResult}::CIBlockResult(${2:\\$res})$0"},
		{"trigger": "CIBlockResult::Fetch", "contents": "${1:CIBlockResult}::Fetch()$0"},
		{"trigger": "CIBlockResult::GetNavPrint", "contents": "${1:CIBlockResult}::GetNavPrint(${2:\\$title}, ${2:\\$show_allways=true}, ${4:\\$StyleText=''}, ${4:\\$template_path=false}, ${6:\\$arDeleteParam=false})$0"},
		{"trigger": "CIBlockResult::GetNext", "contents": "${1:CIBlockResult}::GetNext(${2:\\$bTextHtmlAuto=true}, ${2:\\$use_tilda=true})$0"},
		{"trigger": "CIBlockResult::GetNextElement", "contents": "${1:CIBlockResult}::GetNextElement(${2:\\$bTextHtmlAuto=true}, ${2:\\$use_tilda=true})$0"},
		{"trigger": "CIBlockResult::NavStart", "contents": "${1:CIBlockResult}::NavStart(${2:\\$nPageSize=20}, ${2:\\$bShowAll=true}, ${4:\\$iNumPage=false})$0"},
		{"trigger": "CIBlockResult::SetIBlockTag", "contents": "${1:CIBlockResult}::SetIBlockTag(${2:\\$iblock_id})$0"},
		{"trigger": "CIBlockResult::SetSectionContext", "contents": "${1:CIBlockResult}::SetSectionContext(${2:\\$arSection})$0"},
		{"trigger": "CIBlockResult::SetTableID", "contents": "${1:CIBlockResult}::SetTableID(${2:\\$table_id})$0"},
		{"trigger": "CIBlockResult::SetUrlTemplates", "contents": "${1:CIBlockResult}::SetUrlTemplates(${2:\\$DetailUrl = ''}, ${2:\\$SectionUrl = ''}, ${4:\\$ListUrl = ''})$0"},
		{"trigger": "CIBlockRights::ChangeParents", "contents": "${1:CIBlockRights}::ChangeParents(${2:\\$arOldParents}, ${2:\\$arNewParents})$0"},
		{"trigger": "CIBlockRights::ConvertGroups", "contents": "${1:CIBlockRights}::ConvertGroups(${2:\\$arGroups})$0"},
		{"trigger": "CIBlockRights::DeleteAllRights", "contents": "${1:CIBlockRights}::DeleteAllRights()$0"},
		{"trigger": "CIBlockRights::GetGroups", "contents": "${1:CIBlockRights}::GetGroups(${2:\\$arOperations = false}, ${2:\\$opMode = false})$0"},
		{"trigger": "CIBlockRights::GetIBlockID", "contents": "${1:CIBlockRights}::GetIBlockID()$0"},
		{"trigger": "CIBlockRights::GetID", "contents": "${1:CIBlockRights}::GetID()$0"},
		{"trigger": "CIBlockRights::GetList", "contents": "${1:CIBlockRights}::GetList(${2:\\$arFilter})$0"},
		{"trigger": "CIBlockRights::GetRights", "contents": "${1:CIBlockRights}::GetRights(${2:\\$arOptions = array()})$0"},
		{"trigger": "CIBlockRights::GetRightsList", "contents": "${1:CIBlockRights}::GetRightsList(${2:\\$bTitle = true})$0"},
		{"trigger": "CIBlockRights::GetUserOperations", "contents": "${1:CIBlockRights}::GetUserOperations(${2:\\$arID}, ${2:\\$USER_ID = 0})$0"},
		{"trigger": "CIBlockRights::LetterToOperations", "contents": "${1:CIBlockRights}::LetterToOperations(${2:\\$letter = ''})$0"},
		{"trigger": "CIBlockRights::LetterToTask", "contents": "${1:CIBlockRights}::LetterToTask(${2:\\$letter = ''})$0"},
		{"trigger": "CIBlockRights::Post2array", "contents": "${1:CIBlockRights}::Post2array(${2:\\$ar})$0"},
		{"trigger": "CIBlockRights::Recalculate", "contents": "${1:CIBlockRights}::Recalculate()$0"},
		{"trigger": "CIBlockRights::SetRights", "contents": "${1:CIBlockRights}::SetRights(${2:\\$arRights})$0"},
		{"trigger": "CIBlockRights::UserHasRightTo", "contents": "${1:CIBlockRights}::UserHasRightTo(${2:\\$IBLOCK_ID}, ${2:\\$ID}, ${4:\\$permission}, ${4:\\$flags = 0})$0"},
		{"trigger": "CIBlockRights::__construct", "contents": "${1:CIBlockRights}::__construct(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CIBlockRights::_add", "contents": "${1:CIBlockRights}::_add(${2:\\$GROUP_CODE}, ${2:\\$bInherit}, ${4:\\$TASK_ID}, ${4:\\$XML_ID})$0"},
		{"trigger": "CIBlockRights::_check_if_user_has_right", "contents": "${1:CIBlockRights}::_check_if_user_has_right(${2:\\$obRights}, ${2:\\$ID}, ${4:\\$permission}, ${4:\\$flags = 0})$0"},
		{"trigger": "CIBlockRights::_delete", "contents": "${1:CIBlockRights}::_delete(${2:\\$RIGHT_ID})$0"},
		{"trigger": "CIBlockRights::_entity_type", "contents": "${1:CIBlockRights}::_entity_type()$0"},
		{"trigger": "CIBlockRights::_get_parent_object", "contents": "${1:CIBlockRights}::_get_parent_object(${2:\\$id})$0"},
		{"trigger": "CIBlockRights::_mk_result", "contents": "${1:CIBlockRights}::_mk_result(${2:\\$ID}, ${2:\\$arOperations}, ${4:\\$bAllow}, ${4:\\$flags})$0"},
		{"trigger": "CIBlockRights::_self_check", "contents": "${1:CIBlockRights}::_self_check()$0"},
		{"trigger": "CIBlockRights::_storage_object", "contents": "${1:CIBlockRights}::_storage_object()$0"},
		{"trigger": "CIBlockRights::_update", "contents": "${1:CIBlockRights}::_update(${2:\\$RIGHT_ID}, ${2:\\$GROUP_CODE}, ${4:\\$bInherit}, ${4:\\$TASK_ID})$0"},
		{"trigger": "CIBlockRightsStorage::AddChildrenSet", "contents": "${1:CIBlockRightsStorage}::AddChildrenSet(${2:\\$RIGHT_ID}, ${2:\\$GROUP_CODE}, ${4:\\$bInherited})$0"},
		{"trigger": "CIBlockRightsStorage::AddSelfSet", "contents": "${1:CIBlockRightsStorage}::AddSelfSet(${2:\\$RIGHT_ID}, ${2:\\$bInherited = false})$0"},
		{"trigger": "CIBlockRightsStorage::CleanUp", "contents": "${1:CIBlockRightsStorage}::CleanUp(${2:\\$bFull = false})$0"},
		{"trigger": "CIBlockRightsStorage::CountOverWrited", "contents": "${1:CIBlockRightsStorage}::CountOverWrited(${2:\\$GROUP_CODE})$0"},
		{"trigger": "CIBlockRightsStorage::DeleteChildrenSet", "contents": "${1:CIBlockRightsStorage}::DeleteChildrenSet(${2:\\$ID}, ${2:\\$TYPE})$0"},
		{"trigger": "CIBlockRightsStorage::DeleteRights", "contents": "${1:CIBlockRightsStorage}::DeleteRights()$0"},
		{"trigger": "CIBlockRightsStorage::DeleteSelfSet", "contents": "${1:CIBlockRightsStorage}::DeleteSelfSet(${2:\\$ID}, ${2:\\$TYPE})$0"},
		{"trigger": "CIBlockRightsStorage::FindParentWithInherit", "contents": "${1:CIBlockRightsStorage}::FindParentWithInherit(${2:\\$GROUP_CODE})$0"},
		{"trigger": "CIBlockRightsStorage::OnGroupDelete", "contents": "${1:CIBlockRightsStorage}::OnGroupDelete(${2:\\$GROUP_ID})$0"},
		{"trigger": "CIBlockRightsStorage::OnTaskOperationsChanged", "contents": "${1:CIBlockRightsStorage}::OnTaskOperationsChanged(${2:\\$TASK_ID}, ${2:\\$arOld}, ${4:\\$arNew})$0"},
		{"trigger": "CIBlockRightsStorage::OnUserDelete", "contents": "${1:CIBlockRightsStorage}::OnUserDelete(${2:\\$USER_ID})$0"},
		{"trigger": "CIBlockRightsStorage::Recalculate", "contents": "${1:CIBlockRightsStorage}::Recalculate()$0"},
		{"trigger": "CIBlockRightsStorage::__construct", "contents": "${1:CIBlockRightsStorage}::__construct(${2:\\$IBLOCK_ID}, ${2:\\$SECTION_ID}, ${4:\\$ELEMENT_ID})$0"},
		{"trigger": "CIBlockRightsStorage::_get_section", "contents": "${1:CIBlockRightsStorage}::_get_section()$0"},
		{"trigger": "CIBlockRightsStorage::_set_section", "contents": "${1:CIBlockRightsStorage}::_set_section(${2:\\$SECTION_ID})$0"},
		{"trigger": "CIBlockSection::Add", "contents": "${1:CIBlockSection}::Add(${2:\\$arFields}, ${2:\\$bResort=true}, ${4:\\$bUpdateSearch=true}, ${4:\\$bResizePictures=false})$0"},
		{"trigger": "CIBlockSection::CheckFields", "contents": "${1:CIBlockSection}::CheckFields(${2:&\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CIBlockSection::Delete", "contents": "${1:CIBlockSection}::Delete(${2:\\$ID}, ${2:\\$bCheckPermissions = true})$0"},
		{"trigger": "CIBlockSection::GetByID", "contents": "${1:CIBlockSection}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CIBlockSection::GetCount", "contents": "${1:CIBlockSection}::GetCount(${2:\\$arFilter=array()})$0"},
		{"trigger": "CIBlockSection::GetFilter", "contents": "${1:CIBlockSection}::GetFilter(${2:\\$arFilter=array()})$0"},
		{"trigger": "CIBlockSection::GetList", "contents": "${1:CIBlockSection}::GetList(${2:\\$arOrder=array('SORT'=>'ASC')}, ${2:\\$arFilter=array()}, ${4:\\$bIncCnt = false}, ${4:\\$arSelect = array()}, ${6:\\$arNavStartParams=false})$0"},
		{"trigger": "CIBlockSection::GetMixedList", "contents": "${1:CIBlockSection}::GetMixedList(${2:\\$arOrder=array('SORT'=>'ASC')}, ${2:\\$arFilter=array()}, ${4:\\$bIncCnt = false}, ${4:\\$arSelectedFields = false})$0"},
		{"trigger": "CIBlockSection::GetNavChain", "contents": "${1:CIBlockSection}::GetNavChain(${2:\\$IBLOCK_ID}, ${2:\\$SECTION_ID})$0"},
		{"trigger": "CIBlockSection::GetSectionElementsCount", "contents": "${1:CIBlockSection}::GetSectionElementsCount(${2:\\$ID}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CIBlockSection::GetTreeList", "contents": "${1:CIBlockSection}::GetTreeList(${2:\\$arFilter=array()})$0"},
		{"trigger": "CIBlockSection::ReSort", "contents": "${1:CIBlockSection}::ReSort(${2:\\$IBLOCK_ID}, ${2:\\$ID=0}, ${4:\\$cnt=0}, ${4:\\$depth=0}, ${6:\\$ACTIVE='Y'})$0"},
		{"trigger": "CIBlockSection::RecalcGlobalActiveFlag", "contents": "${1:CIBlockSection}::RecalcGlobalActiveFlag(${2:\\$arSection})$0"},
		{"trigger": "CIBlockSection::Update", "contents": "${1:CIBlockSection}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$bResort=true}, ${4:\\$bUpdateSearch=true}, ${6:\\$bResizePictures=false})$0"},
		{"trigger": "CIBlockSection::UpdateSearch", "contents": "${1:CIBlockSection}::UpdateSearch(${2:\\$ID}, ${2:\\$bOverWrite=false})$0"},
		{"trigger": "CIBlockSection::UserTypeRightsCheck", "contents": "${1:CIBlockSection}::UserTypeRightsCheck(${2:\\$entity_id})$0"},
		{"trigger": "CIBlockSection::_check_rights_sql", "contents": "${1:CIBlockSection}::_check_rights_sql(${2:\\$min_permission})$0"},
		{"trigger": "CIBlockSectionRights::DeleteAllRights", "contents": "${1:CIBlockSectionRights}::DeleteAllRights()$0"},
		{"trigger": "CIBlockSectionRights::GetList", "contents": "${1:CIBlockSectionRights}::GetList(${2:\\$arFilter})$0"},
		{"trigger": "CIBlockSectionRights::GetRights", "contents": "${1:CIBlockSectionRights}::GetRights(${2:\\$arOptions = array()})$0"},
		{"trigger": "CIBlockSectionRights::GetUserOperations", "contents": "${1:CIBlockSectionRights}::GetUserOperations(${2:\\$arID}, ${2:\\$USER_ID = 0})$0"},
		{"trigger": "CIBlockSectionRights::UserHasRightTo", "contents": "${1:CIBlockSectionRights}::UserHasRightTo(${2:\\$IBLOCK_ID}, ${2:\\$ID}, ${4:\\$permission}, ${4:\\$flags = 0})$0"},
		{"trigger": "CIBlockSectionRights::__construct", "contents": "${1:CIBlockSectionRights}::__construct(${2:\\$IBLOCK_ID}, ${2:\\$SECTION_ID})$0"},
		{"trigger": "CIBlockSectionRights::_entity_type", "contents": "${1:CIBlockSectionRights}::_entity_type()$0"},
		{"trigger": "CIBlockSectionRights::_self_check", "contents": "${1:CIBlockSectionRights}::_self_check()$0"},
		{"trigger": "CIBlockSectionRights::_storage_object", "contents": "${1:CIBlockSectionRights}::_storage_object()$0"},
		{"trigger": "CIBlockSequence::CIBlockSequence", "contents": "${1:CIBlockSequence}::CIBlockSequence(${2:\\$iblock_id}, ${2:\\$property_id = 0})$0"},
		{"trigger": "CIBlockSequence::Drop", "contents": "${1:CIBlockSequence}::Drop(${2:\\$bAll = false})$0"},
		{"trigger": "CIBlockSequence::GetCurrent", "contents": "${1:CIBlockSequence}::GetCurrent()$0"},
		{"trigger": "CIBlockSequence::GetNext", "contents": "${1:CIBlockSequence}::GetNext()$0"},
		{"trigger": "CIBlockSequence::SetNext", "contents": "${1:CIBlockSequence}::SetNext(${2:\\$value})$0"},
		{"trigger": "CIBlockSequence::__construct", "contents": "${1:CIBlockSequence}::__construct(${2:\\$iblock_id}, ${2:\\$property_id = 0})$0"},
		{"trigger": "CIBlockType::Add", "contents": "${1:CIBlockType}::Add(${2:\\$arFields})$0"},
		{"trigger": "CIBlockType::CheckFields", "contents": "${1:CIBlockType}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CIBlockType::Delete", "contents": "${1:CIBlockType}::Delete(${2:\\$ID})$0"},
		{"trigger": "CIBlockType::GetByID", "contents": "${1:CIBlockType}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CIBlockType::GetByIDLang", "contents": "${1:CIBlockType}::GetByIDLang(${2:\\$ID}, ${2:\\$LID}, ${4:\\$bFindAny=true})$0"},
		{"trigger": "CIBlockType::GetList", "contents": "${1:CIBlockType}::GetList(${2:\\$arOrder = array('SORT'=>'ASC')}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CIBlockType::Update", "contents": "${1:CIBlockType}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CIBlockType::_GetCache", "contents": "${1:CIBlockType}::_GetCache(${2:\\$ID})$0"},
		{"trigger": "CIBlockXMLFile::Add", "contents": "${1:CIBlockXMLFile}::Add(${2:\\$arFields})$0"},
		{"trigger": "CIBlockXMLFile::CIBlockXMLFile", "contents": "${1:CIBlockXMLFile}::CIBlockXMLFile(${2:\\$table_name = 'b_xml_tree'})$0"},
		{"trigger": "CIBlockXMLFile::CreateTemporaryTables", "contents": "${1:CIBlockXMLFile}::CreateTemporaryTables(${2:\\$with_sess_id = false})$0"},
		{"trigger": "CIBlockXMLFile::Delete", "contents": "${1:CIBlockXMLFile}::Delete(${2:\\$ID})$0"},
		{"trigger": "CIBlockXMLFile::DropTemporaryTables", "contents": "${1:CIBlockXMLFile}::DropTemporaryTables()$0"},
		{"trigger": "CIBlockXMLFile::EndSession", "contents": "${1:CIBlockXMLFile}::EndSession()$0"},
		{"trigger": "CIBlockXMLFile::GetAllChildrenarray", "contents": "${1:CIBlockXMLFile}::GetAllChildrenarray(${2:\\$arParent})$0"},
		{"trigger": "CIBlockXMLFile::GetFilePosition", "contents": "${1:CIBlockXMLFile}::GetFilePosition()$0"},
		{"trigger": "CIBlockXMLFile::GetList", "contents": "${1:CIBlockXMLFile}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arSelect = array()})$0"},
		{"trigger": "CIBlockXMLFile::GetSessionRoot", "contents": "${1:CIBlockXMLFile}::GetSessionRoot()$0"},
		{"trigger": "CIBlockXMLFile::IndexTemporaryTables", "contents": "${1:CIBlockXMLFile}::IndexTemporaryTables(${2:\\$with_sess_id = false})$0"},
		{"trigger": "CIBlockXMLFile::ReadXMLToDatabase", "contents": "${1:CIBlockXMLFile}::ReadXMLToDatabase(${2:\\$fp}, ${2:&\\$NS}, ${4:\\$time_limit=0}, ${4:\\$read_size = 1024})$0"},
		{"trigger": "CIBlockXMLFile::StartSession", "contents": "${1:CIBlockXMLFile}::StartSession(${2:\\$sess_id})$0"},
		{"trigger": "CIBlockXMLFile::UnZip", "contents": "${1:CIBlockXMLFile}::UnZip(${2:\\$file_name}, ${2:\\$last_zip_entry = ''}, ${4:\\$start_time = 0}, ${4:\\$interval = 0})$0"},
		{"trigger": "CIBlockXMLFile::__construct", "contents": "${1:CIBlockXMLFile}::__construct(${2:\\$table_name = 'b_xml_tree'})$0"},
		{"trigger": "CIBlockXMLFile::_end_element", "contents": "${1:CIBlockXMLFile}::_end_element(${2:\\$xmlChunk})$0"},
		{"trigger": "CIBlockXMLFile::_get_xml_chunk", "contents": "${1:CIBlockXMLFile}::_get_xml_chunk(${2:\\$fp}, ${2:\\$bMB = false})$0"},
		{"trigger": "CIBlockXMLFile::_start_element", "contents": "${1:CIBlockXMLFile}::_start_element(${2:\\$xmlChunk})$0"},
		{"trigger": "CRatingsComponentsIBlock::OnGetRatingContentOwner", "contents": "${1:CRatingsComponentsIBlock}::OnGetRatingContentOwner(${2:\\$arParams})$0"},
		{"trigger": "_CIBElement::GetFields", "contents": "${1:_CIBElement}::GetFields()$0"},
		{"trigger": "_CIBElement::GetGroups", "contents": "${1:_CIBElement}::GetGroups()$0"},
		{"trigger": "_CIBElement::GetProperties", "contents": "${1:_CIBElement}::GetProperties(${2:\\$arOrder = false}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "_CIBElement::GetProperty", "contents": "${1:_CIBElement}::GetProperty(${2:\\$ID})$0"},
		{"trigger": "_CIBlockError::GetErrorText", "contents": "${1:_CIBlockError}::GetErrorText(${2:\\$error = false})$0"},
		{"trigger": "CIdeaManagment::GetCategorySequenceByCode", "contents": "${1:CIdeaManagment}::GetCategorySequenceByCode(${2:\\$CODE}, ${2:\\$arCategoryList = false})$0"},
		{"trigger": "CIdeaManagment::GetRSS", "contents": "${1:CIdeaManagment}::GetRSS(${2:\\$BlogCode}, ${2:\\$type = 'rss2.0'}, ${4:\\$numPosts = 10}, ${4:\\$siteID = SITE_ID}, ${6:\\$arPathTemplates = array()}, ${6:\\$arFilterExt = array()})$0"},
		{"trigger": "CIdeaManagment::GetStatusList", "contents": "${1:CIdeaManagment}::GetStatusList()$0"},
		{"trigger": "CIdeaManagment::GetUserFieldsarray", "contents": "${1:CIdeaManagment}::GetUserFieldsarray()$0"},
		{"trigger": "CIdeaManagment::Idea", "contents": "${1:CIdeaManagment}::Idea(${2:\\$IdeaId = false})$0"},
		{"trigger": "CIdeaManagment::IdeaComment", "contents": "${1:CIdeaManagment}::IdeaComment(${2:\\$CommentId = false})$0"},
		{"trigger": "CIdeaManagment::IsAvailable", "contents": "${1:CIdeaManagment}::IsAvailable()$0"},
		{"trigger": "CIdeaManagment::Notification", "contents": "${1:CIdeaManagment}::Notification(${2:\\$arNotification = array()})$0"},
		{"trigger": "CIdeaManagment::SetCategoryListId", "contents": "${1:CIdeaManagment}::SetCategoryListId(${2:\\$ID})$0"},
		{"trigger": "CIdeaManagment::__clone", "contents": "${1:CIdeaManagment}::__clone()$0"},
		{"trigger": "CIdeaManagment::__construct", "contents": "${1:CIdeaManagment}::__construct()$0"},
		{"trigger": "CIdeaManagment::getInstance", "contents": "${1:CIdeaManagment}::getInstance()$0"},
		{"trigger": "CIdeaManagmentEmailNotify::Add", "contents": "${1:CIdeaManagmentEmailNotify}::Add(${2:\\$Entity}, ${2:\\$UserId = false})$0"},
		{"trigger": "CIdeaManagmentEmailNotify::Delete", "contents": "${1:CIdeaManagmentEmailNotify}::Delete(${2:\\$Entity}, ${2:\\$UserId = false})$0"},
		{"trigger": "CIdeaManagmentEmailNotify::Disable", "contents": "${1:CIdeaManagmentEmailNotify}::Disable()$0"},
		{"trigger": "CIdeaManagmentEmailNotify::Enable", "contents": "${1:CIdeaManagmentEmailNotify}::Enable()$0"},
		{"trigger": "CIdeaManagmentEmailNotify::GetList", "contents": "${1:CIdeaManagmentEmailNotify}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CIdeaManagmentEmailNotify::IsAvailable", "contents": "${1:CIdeaManagmentEmailNotify}::IsAvailable()$0"},
		{"trigger": "CIdeaManagmentEmailNotify::Send", "contents": "${1:CIdeaManagmentEmailNotify}::Send()$0"},
		{"trigger": "CIdeaManagmentEmailNotify::__construct", "contents": "${1:CIdeaManagmentEmailNotify}::__construct(${2:\\$parent})$0"},
		{"trigger": "CIdeaManagmentIdea::BindDublicate", "contents": "${1:CIdeaManagmentIdea}::BindDublicate()$0"},
		{"trigger": "CIdeaManagmentIdea::GetCategoryList", "contents": "${1:CIdeaManagmentIdea}::GetCategoryList(${2:\\$CategoryIB = false})$0"},
		{"trigger": "CIdeaManagmentIdea::GetCategoryListID", "contents": "${1:CIdeaManagmentIdea}::GetCategoryListID()$0"},
		{"trigger": "CIdeaManagmentIdea::GetCategorySequence", "contents": "${1:CIdeaManagmentIdea}::GetCategorySequence(${2:\\$CODE})$0"},
		{"trigger": "CIdeaManagmentIdea::GetDefaultStatus", "contents": "${1:CIdeaManagmentIdea}::GetDefaultStatus(${2:\\$arStatusPriority = array()})$0"},
		{"trigger": "CIdeaManagmentIdea::GetStatusList", "contents": "${1:CIdeaManagmentIdea}::GetStatusList(${2:\\$XML_ID = false})$0"},
		{"trigger": "CIdeaManagmentIdea::GetSubCategoryList", "contents": "${1:CIdeaManagmentIdea}::GetSubCategoryList(${2:\\$CategoryCode})$0"},
		{"trigger": "CIdeaManagmentIdea::IsAvailable", "contents": "${1:CIdeaManagmentIdea}::IsAvailable()$0"},
		{"trigger": "CIdeaManagmentIdea::SetCategoryListID", "contents": "${1:CIdeaManagmentIdea}::SetCategoryListID(${2:\\$ID})$0"},
		{"trigger": "CIdeaManagmentIdea::SetID", "contents": "${1:CIdeaManagmentIdea}::SetID(${2:\\$IdeaId})$0"},
		{"trigger": "CIdeaManagmentIdea::SetStatus", "contents": "${1:CIdeaManagmentIdea}::SetStatus(${2:\\$StatusId})$0"},
		{"trigger": "CIdeaManagmentIdea::UnBindDublicate", "contents": "${1:CIdeaManagmentIdea}::UnBindDublicate()$0"},
		{"trigger": "CIdeaManagmentIdea::__construct", "contents": "${1:CIdeaManagmentIdea}::__construct(${2:\\$IdeaId = false})$0"},
		{"trigger": "CIdeaManagmentIdeaComment::Bind", "contents": "${1:CIdeaManagmentIdeaComment}::Bind()$0"},
		{"trigger": "CIdeaManagmentIdeaComment::Get", "contents": "${1:CIdeaManagmentIdeaComment}::Get()$0"},
		{"trigger": "CIdeaManagmentIdeaComment::IsAvailable", "contents": "${1:CIdeaManagmentIdeaComment}::IsAvailable()$0"},
		{"trigger": "CIdeaManagmentIdeaComment::SetID", "contents": "${1:CIdeaManagmentIdeaComment}::SetID(${2:\\$StatusId})$0"},
		{"trigger": "CIdeaManagmentIdeaComment::UnBind", "contents": "${1:CIdeaManagmentIdeaComment}::UnBind()$0"},
		{"trigger": "CIdeaManagmentIdeaComment::__construct", "contents": "${1:CIdeaManagmentIdeaComment}::__construct(${2:\\$CommentId = false})$0"},
		{"trigger": "CIdeaManagmentNotify::GetEmailNotify", "contents": "${1:CIdeaManagmentNotify}::GetEmailNotify()$0"},
		{"trigger": "CIdeaManagmentNotify::GetNotification", "contents": "${1:CIdeaManagmentNotify}::GetNotification()$0"},
		{"trigger": "CIdeaManagmentNotify::GetNotify", "contents": "${1:CIdeaManagmentNotify}::GetNotify(${2:\\$CustomNotifyClassName})$0"},
		{"trigger": "CIdeaManagmentNotify::GetSonetNotify", "contents": "${1:CIdeaManagmentNotify}::GetSonetNotify()$0"},
		{"trigger": "CIdeaManagmentNotify::SetNotification", "contents": "${1:CIdeaManagmentNotify}::SetNotification(${2:\\$arNotification = array()})$0"},
		{"trigger": "CIdeaManagmentNotify::__construct", "contents": "${1:CIdeaManagmentNotify}::__construct(${2:\\$arNotification = array()})$0"},
		{"trigger": "CIdeaManagmentSonetNotify::AddComment", "contents": "${1:CIdeaManagmentSonetNotify}::AddComment()$0"},
		{"trigger": "CIdeaManagmentSonetNotify::AddLogEvent", "contents": "${1:CIdeaManagmentSonetNotify}::AddLogEvent(${2:&\\$arFields})$0"},
		{"trigger": "CIdeaManagmentSonetNotify::AddMessage", "contents": "${1:CIdeaManagmentSonetNotify}::AddMessage()$0"},
		{"trigger": "CIdeaManagmentSonetNotify::CallBack_AddComment", "contents": "${1:CIdeaManagmentSonetNotify}::CallBack_AddComment(${2:\\$arFields})$0"},
		{"trigger": "CIdeaManagmentSonetNotify::Disable", "contents": "${1:CIdeaManagmentSonetNotify}::Disable()$0"},
		{"trigger": "CIdeaManagmentSonetNotify::Enable", "contents": "${1:CIdeaManagmentSonetNotify}::Enable()$0"},
		{"trigger": "CIdeaManagmentSonetNotify::FormatComment", "contents": "${1:CIdeaManagmentSonetNotify}::FormatComment(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false}, ${4:\\$arLog = array()})$0"},
		{"trigger": "CIdeaManagmentSonetNotify::FormatMessage", "contents": "${1:CIdeaManagmentSonetNotify}::FormatMessage(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CIdeaManagmentSonetNotify::IsAvailable", "contents": "${1:CIdeaManagmentSonetNotify}::IsAvailable()$0"},
		{"trigger": "CIdeaManagmentSonetNotify::Remove", "contents": "${1:CIdeaManagmentSonetNotify}::Remove()$0"},
		{"trigger": "CIdeaManagmentSonetNotify::RemoveComment", "contents": "${1:CIdeaManagmentSonetNotify}::RemoveComment(${2:\\$CommentId = false})$0"},
		{"trigger": "CIdeaManagmentSonetNotify::RemoveMessage", "contents": "${1:CIdeaManagmentSonetNotify}::RemoveMessage(${2:\\$MessageId = false})$0"},
		{"trigger": "CIdeaManagmentSonetNotify::Send", "contents": "${1:CIdeaManagmentSonetNotify}::Send()$0"},
		{"trigger": "CIdeaManagmentSonetNotify::__construct", "contents": "${1:CIdeaManagmentSonetNotify}::__construct(${2:\\$parent})$0"},
		{"trigger": "CIMContactList::GetList", "contents": "${1:CIMContactList}::GetList()$0"},
		{"trigger": "CIMContactList::GetStatus", "contents": "${1:CIMContactList}::GetStatus()$0"},
		{"trigger": "CIMContactList::GetUserData", "contents": "${1:CIMContactList}::GetUserData(${2:\\$arParams = array()})$0"},
		{"trigger": "CIMContactList::SetCurrentTab", "contents": "${1:CIMContactList}::SetCurrentTab(${2:\\$userId})$0"},
		{"trigger": "CIMContactList::__construct", "contents": "${1:CIMContactList}::__construct(${2:\\$user_id = false})$0"},
		{"trigger": "CIMEvent::GetMessageRatingVote", "contents": "${1:CIMEvent}::GetMessageRatingVote(${2:\\$arParams}, ${2:\\$bForMail = false})$0"},
		{"trigger": "CIMEvent::OnAddRatingVote", "contents": "${1:CIMEvent}::OnAddRatingVote(${2:\\$id}, ${2:\\$arParams})$0"},
		{"trigger": "CIMEvent::OnAfterUserUpdate", "contents": "${1:CIMEvent}::OnAfterUserUpdate(${2:\\$arParams})$0"},
		{"trigger": "CIMEvent::OnCancelRatingVote", "contents": "${1:CIMEvent}::OnCancelRatingVote(${2:\\$id}, ${2:\\$arParams})$0"},
		{"trigger": "CIMHistory::GetLastMessage", "contents": "${1:CIMHistory}::GetLastMessage(${2:\\$toUserId}, ${2:\\$fromUserId = false})$0"},
		{"trigger": "CIMHistory::GetMoreMessage", "contents": "${1:CIMHistory}::GetMoreMessage(${2:\\$messageId}, ${2:\\$toUserId}, ${4:\\$fromUserId = false})$0"},
		{"trigger": "CIMHistory::RemoveAllMessage", "contents": "${1:CIMHistory}::RemoveAllMessage(${2:\\$userId})$0"},
		{"trigger": "CIMHistory::RemoveMessage", "contents": "${1:CIMHistory}::RemoveMessage(${2:\\$messageId})$0"},
		{"trigger": "CIMHistory::SearchMessage", "contents": "${1:CIMHistory}::SearchMessage(${2:\\$searchText}, ${2:\\$toUserId}, ${4:\\$fromUserId = false})$0"},
		{"trigger": "CIMHistory::__construct", "contents": "${1:CIMHistory}::__construct(${2:\\$user_id = false})$0"},
		{"trigger": "CIMMail::MailMessageAgent", "contents": "${1:CIMMail}::MailMessageAgent()$0"},
		{"trigger": "CIMMail::MailNotifyAgent", "contents": "${1:CIMMail}::MailNotifyAgent()$0"},
		{"trigger": "CIMMessage::Add", "contents": "${1:CIMMessage}::Add(${2:\\$arParams})$0"},
		{"trigger": "CIMMessage::GetFlashMessage", "contents": "${1:CIMMessage}::GetFlashMessage(${2:\\$arUnreadMessage})$0"},
		{"trigger": "CIMMessage::GetMessageCounter", "contents": "${1:CIMMessage}::GetMessageCounter(${2:\\$arMessages})$0"},
		{"trigger": "CIMMessage::GetUnreadMessage", "contents": "${1:CIMMessage}::GetUnreadMessage()$0"},
		{"trigger": "CIMMessage::SetReadMessage", "contents": "${1:CIMMessage}::SetReadMessage(${2:\\$userId})$0"},
		{"trigger": "CIMMessage::SetReadMessageFromUser", "contents": "${1:CIMMessage}::SetReadMessageFromUser(${2:\\$userId})$0"},
		{"trigger": "CIMMessage::SonetTableExists", "contents": "${1:CIMMessage}::SonetTableExists()$0"},
		{"trigger": "CIMMessage::__construct", "contents": "${1:CIMMessage}::__construct(${2:\\$user_id = false})$0"},
		{"trigger": "CIMMessenger::CheckXmppStatusOnline", "contents": "${1:CIMMessenger}::CheckXmppStatusOnline()$0"},
		{"trigger": "CIMMessenger::GetCurrentTab", "contents": "${1:CIMMessenger}::GetCurrentTab()$0"},
		{"trigger": "CIMMessenger::GetLastUser", "contents": "${1:CIMMessenger}::GetLastUser()$0"},
		{"trigger": "CIMMessenger::GetOpenTabs", "contents": "${1:CIMMessenger}::GetOpenTabs()$0"},
		{"trigger": "CIMMessenger::GetSettings", "contents": "${1:CIMMessenger}::GetSettings()$0"},
		{"trigger": "CIMMessenger::GetTemplateJS", "contents": "${1:CIMMessenger}::GetTemplateJS(${2:\\$arParams}, ${2:\\$arTemplate})$0"},
		{"trigger": "CIMMessenger::SetCurrentTab", "contents": "${1:CIMMessenger}::SetCurrentTab(${2:\\$userId})$0"},
		{"trigger": "CIMMessenger::SetLastUser", "contents": "${1:CIMMessenger}::SetLastUser(${2:\\$userId})$0"},
		{"trigger": "CIMMessenger::SetOpenTabs", "contents": "${1:CIMMessenger}::SetOpenTabs(${2:\\$arTabs})$0"},
		{"trigger": "CIMMessenger::SpeedFileCreate", "contents": "${1:CIMMessenger}::SpeedFileCreate(${2:\\$userID}, ${2:\\$value}, ${4:\\$type = IM_SPEED_MESSAGE})$0"},
		{"trigger": "CIMMessenger::SpeedFileDelete", "contents": "${1:CIMMessenger}::SpeedFileDelete(${2:\\$userID}, ${2:\\$type = IM_SPEED_MESSAGE})$0"},
		{"trigger": "CIMMessenger::SpeedFileExists", "contents": "${1:CIMMessenger}::SpeedFileExists(${2:\\$userID}, ${2:\\$type = IM_SPEED_MESSAGE})$0"},
		{"trigger": "CIMMessenger::SpeedFileGet", "contents": "${1:CIMMessenger}::SpeedFileGet(${2:\\$userID}, ${2:\\$type = IM_SPEED_MESSAGE})$0"},
		{"trigger": "CIMMessenger::__construct", "contents": "${1:CIMMessenger}::__construct(${2:\\$user_id = false})$0"},
		{"trigger": "CIMNotify::Add", "contents": "${1:CIMNotify}::Add(${2:\\$arFields})$0"},
		{"trigger": "CIMNotify::CheckFields", "contents": "${1:CIMNotify}::CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CIMNotify::Confirm", "contents": "${1:CIMNotify}::Confirm(${2:\\$ID}, ${2:\\$VALUE})$0"},
		{"trigger": "CIMNotify::Delete", "contents": "${1:CIMNotify}::Delete(${2:\\$ID})$0"},
		{"trigger": "CIMNotify::DeleteByTag", "contents": "${1:CIMNotify}::DeleteByTag(${2:\\$notifyTag}, ${2:\\$authorId = false})$0"},
		{"trigger": "CIMNotify::GetFlashNotify", "contents": "${1:CIMNotify}::GetFlashNotify(${2:\\$arUnreadNotify})$0"},
		{"trigger": "CIMNotify::GetNotify", "contents": "${1:CIMNotify}::GetNotify(${2:\\$ID})$0"},
		{"trigger": "CIMNotify::GetNotifyCounter", "contents": "${1:CIMNotify}::GetNotifyCounter(${2:\\$arNotify})$0"},
		{"trigger": "CIMNotify::GetNotifyList", "contents": "${1:CIMNotify}::GetNotifyList(${2:\\$arParams})$0"},
		{"trigger": "CIMNotify::GetUnreadNotify", "contents": "${1:CIMNotify}::GetUnreadNotify(${2:\\$bSpeedCheck = true})$0"},
		{"trigger": "CIMNotify::GetUnsendNotify", "contents": "${1:CIMNotify}::GetUnsendNotify()$0"},
		{"trigger": "CIMNotify::MarkNotifyRead", "contents": "${1:CIMNotify}::MarkNotifyRead(${2:\\$id = 0}, ${2:\\$inferior = false})$0"},
		{"trigger": "CIMNotify::SetLastId", "contents": "${1:CIMNotify}::SetLastId(${2:\\$chatId}, ${2:\\$lastId})$0"},
		{"trigger": "CIMNotify::SetLastSendId", "contents": "${1:CIMNotify}::SetLastSendId(${2:\\$chatId}, ${2:\\$lastSendId})$0"},
		{"trigger": "CIMNotify::__construct", "contents": "${1:CIMNotify}::__construct(${2:\\$user_id = false})$0"},
		{"trigger": "CIMNotify::createNotify", "contents": "${1:CIMNotify}::createNotify(${2:\\$arFields})$0"},
		{"trigger": "CIMTableSchema::OnGetTableSchema", "contents": "${1:CIMTableSchema}::OnGetTableSchema()$0"},
		{"trigger": "CIMTableSchema::__construct", "contents": "${1:CIMTableSchema}::__construct()$0"},
		{"trigger": "CLDAP::Bind", "contents": "${1:CLDAP}::Bind(${2:\\$login}, ${2:\\$password})$0"},
		{"trigger": "CLDAP::BindAdmin", "contents": "${1:CLDAP}::BindAdmin()$0"},
		{"trigger": "CLDAP::Connect", "contents": "${1:CLDAP}::Connect(${2:\\$arFields = array()})$0"},
		{"trigger": "CLDAP::Disconnect", "contents": "${1:CLDAP}::Disconnect()$0"},
		{"trigger": "CLDAP::FindUser", "contents": "${1:CLDAP}::FindUser(${2:\\$LOGIN}, ${2:\\$PASSWORD = false})$0"},
		{"trigger": "CLDAP::GetAllMemberOf", "contents": "${1:CLDAP}::GetAllMemberOf(${2:\\$arFindGroups}, ${2:&\\$arUserGroups}, ${4:\\$arAllGroups})$0"},
		{"trigger": "CLDAP::GetDepartmentIdForADUser", "contents": "${1:CLDAP}::GetDepartmentIdForADUser(${2:\\$department}, ${2:\\$managerDN}, ${4:\\$username}, ${4:&\\$cache=FALSE}, ${6:\\$iblockId = FALSE}, ${6:\\$names = FALSE})$0"},
		{"trigger": "CLDAP::GetGroupList", "contents": "${1:CLDAP}::GetGroupList(${2:\\$query = ''})$0"},
		{"trigger": "CLDAP::GetGroupListarray", "contents": "${1:CLDAP}::GetGroupListarray(${2:\\$query = ''})$0"},
		{"trigger": "CLDAP::GetGroupMaps", "contents": "${1:CLDAP}::GetGroupMaps()$0"},
		{"trigger": "CLDAP::GetUserarray", "contents": "${1:CLDAP}::GetUserarray(${2:\\$cn})$0"},
		{"trigger": "CLDAP::GetUserFields", "contents": "${1:CLDAP}::GetUserFields(${2:\\$arLdapUser}, ${2:&\\$departmentCache=FALSE})$0"},
		{"trigger": "CLDAP::GetUserList", "contents": "${1:CLDAP}::GetUserList(${2:\\$arFilter = array()})$0"},
		{"trigger": "CLDAP::NTLMAuth", "contents": "${1:CLDAP}::NTLMAuth()$0"},
		{"trigger": "CLDAP::OnExternalAuthList", "contents": "${1:CLDAP}::OnExternalAuthList()$0"},
		{"trigger": "CLDAP::OnUserLogin", "contents": "${1:CLDAP}::OnUserLogin(${2:\\$arArgs})$0"},
		{"trigger": "CLDAP::Query", "contents": "${1:CLDAP}::Query(${2:\\$str = '(ObjectClass=*)'}, ${2:\\$fields = false})$0"},
		{"trigger": "CLDAP::Queryarray", "contents": "${1:CLDAP}::Queryarray(${2:\\$str = '(ObjectClass=*)'}, ${2:\\$fields = false})$0"},
		{"trigger": "CLDAP::RootDSE", "contents": "${1:CLDAP}::RootDSE()$0"},
		{"trigger": "CLDAP::SetUser", "contents": "${1:CLDAP}::SetUser(${2:\\$arLdapUser}, ${2:\\$bAddNew = true})$0"},
		{"trigger": "CLDAP::WorkAttr", "contents": "${1:CLDAP}::WorkAttr(${2:\\$values})$0"},
		{"trigger": "CLDAP::_RootDSE", "contents": "${1:CLDAP}::_RootDSE(${2:\\$filtr})$0"},
		{"trigger": "CLDAP::specialchars", "contents": "${1:CLDAP}::specialchars(${2:\\$str})$0"},
		{"trigger": "CLdapServer::Add", "contents": "${1:CLdapServer}::Add(${2:\\$arFields})$0"},
		{"trigger": "CLdapServer::CheckFields", "contents": "${1:CLdapServer}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CLdapServer::Delete", "contents": "${1:CLdapServer}::Delete(${2:\\$ID})$0"},
		{"trigger": "CLdapServer::GetByID", "contents": "${1:CLdapServer}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CLdapServer::GetGroupBan", "contents": "${1:CLdapServer}::GetGroupBan(${2:\\$ID})$0"},
		{"trigger": "CLdapServer::GetGroupMap", "contents": "${1:CLdapServer}::GetGroupMap(${2:\\$ID})$0"},
		{"trigger": "CLdapServer::GetList", "contents": "${1:CLdapServer}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CLdapServer::SetGroupMap", "contents": "${1:CLdapServer}::SetGroupMap(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CLdapServer::Sync", "contents": "${1:CLdapServer}::Sync(${2:\\$ldap_server_id})$0"},
		{"trigger": "CLdapServer::SyncAgent", "contents": "${1:CLdapServer}::SyncAgent(${2:\\$id})$0"},
		{"trigger": "CLdapServer::Update", "contents": "${1:CLdapServer}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CLdapServer::__UpdateAgentPeriod", "contents": "${1:CLdapServer}::__UpdateAgentPeriod(${2:\\$server_id}, ${2:\\$time})$0"},
		{"trigger": "CLdapUtil::BinMD5", "contents": "${1:CLdapUtil}::BinMD5(${2:\\$val})$0"},
		{"trigger": "CLdapUtil::ByteXOR", "contents": "${1:CLdapUtil}::ByteXOR(${2:\\$a,\\$b,\\$l})$0"},
		{"trigger": "CLdapUtil::ConvertADDate", "contents": "${1:CLdapUtil}::ConvertADDate(${2:\\$d})$0"},
		{"trigger": "CLdapUtil::Crypt", "contents": "${1:CLdapUtil}::Crypt(${2:\\$str}, ${2:\\$key=false})$0"},
		{"trigger": "CLdapUtil::Decrypt", "contents": "${1:CLdapUtil}::Decrypt(${2:\\$str}, ${2:\\$key=false})$0"},
		{"trigger": "CLdapUtil::FilterCreate", "contents": "${1:CLdapUtil}::FilterCreate(${2:\\$fname}, ${2:\\$vals}, ${4:\\$type}, ${4:\\$cOperationType=false}, ${6:\\$bSkipEmpty = true})$0"},
		{"trigger": "CLdapUtil::FilterCreateEx", "contents": "${1:CLdapUtil}::FilterCreateEx(${2:\\$fname}, ${2:\\$vals}, ${4:\\$type}, ${4:&\\$bFullJoin}, ${6:\\$cOperationType=false}, ${6:\\$bSkipEmpty = true})$0"},
		{"trigger": "CLdapUtil::GetSynFields", "contents": "${1:CLdapUtil}::GetSynFields()$0"},
		{"trigger": "CLdapUtil::IsIpFromNet", "contents": "${1:CLdapUtil}::IsIpFromNet(${2:\\$ip,\\$netsAndMasks})$0"},
		{"trigger": "CLdapUtil::MkOperationFilter", "contents": "${1:CLdapUtil}::MkOperationFilter(${2:\\$key})$0"},
		{"trigger": "CLdapUtil::OnAfterUserAuthorizeHandler", "contents": "${1:CLdapUtil}::OnAfterUserAuthorizeHandler()$0"},
		{"trigger": "CLdapUtil::OnEpilogHandler", "contents": "${1:CLdapUtil}::OnEpilogHandler()$0"},
		{"trigger": "CLdapUtil::SetBitrixVMAuthSupport", "contents": "${1:CLdapUtil}::SetBitrixVMAuthSupport(${2:\\$setOption=false}, ${2:\\$netAndMask=false})$0"},
		{"trigger": "CLdapUtil::SetDepartmentHead", "contents": "${1:CLdapUtil}::SetDepartmentHead(${2:\\$userId}, ${2:\\$sectionId})$0"},
		{"trigger": "CLdapUtil::UnSetBitrixVMAuthSupport", "contents": "${1:CLdapUtil}::UnSetBitrixVMAuthSupport(${2:\\$unSetOption=false})$0"},
		{"trigger": "CLdapUtil::_Upper", "contents": "${1:CLdapUtil}::_Upper(${2:\\$str})$0"},
		{"trigger": "CLdapUtil::getDepartmentListFromSystem", "contents": "${1:CLdapUtil}::getDepartmentListFromSystem(${2:\\$arFilter = array()})$0"},
		{"trigger": "__CLDAPServerDBResult::Fetch", "contents": "${1:__CLDAPServerDBResult}::Fetch()$0"},
		{"trigger": "__CLDAPServerDBResult::GetNextServer", "contents": "${1:__CLDAPServerDBResult}::GetNextServer()$0"},
		{"trigger": "CCertification::Add", "contents": "${1:CCertification}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCertification::Certificate", "contents": "${1:CCertification}::Certificate(${2:\\$STUDENT_ID}, ${2:\\$COURSE_ID})$0"},
		{"trigger": "CCertification::CheckFields", "contents": "${1:CCertification}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CCertification::Delete", "contents": "${1:CCertification}::Delete(${2:\\$ID})$0"},
		{"trigger": "CCertification::GetByID", "contents": "${1:CCertification}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCertification::GetFilter", "contents": "${1:CCertification}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CCertification::GetList", "contents": "${1:CCertification}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CCertification::IsCourseCompleted", "contents": "${1:CCertification}::IsCourseCompleted(${2:\\$STUDENT_ID}, ${2:\\$COURSE_ID})$0"},
		{"trigger": "CCertification::Update", "contents": "${1:CCertification}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CChapter::Add", "contents": "${1:CChapter}::Add(${2:\\$arFields})$0"},
		{"trigger": "CChapter::CheckFields", "contents": "${1:CChapter}::CheckFields(${2:\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CChapter::Delete", "contents": "${1:CChapter}::Delete(${2:\\$ID})$0"},
		{"trigger": "CChapter::GetByID", "contents": "${1:CChapter}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CChapter::GetCount", "contents": "${1:CChapter}::GetCount(${2:\\$arFilter=array()})$0"},
		{"trigger": "CChapter::GetFilter", "contents": "${1:CChapter}::GetFilter(${2:\\$arFilter=array()})$0"},
		{"trigger": "CChapter::GetList", "contents": "${1:CChapter}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()}, ${4:\\$bIncCnt = false})$0"},
		{"trigger": "CChapter::GetNavChain", "contents": "${1:CChapter}::GetNavChain(${2:\\$COURSE_ID}, ${2:\\$CHAPTER_ID})$0"},
		{"trigger": "CChapter::GetTreeList", "contents": "${1:CChapter}::GetTreeList(${2:\\$COURSE_ID}, ${2:\\$CHAPTER_ID = 0})$0"},
		{"trigger": "CChapter::Update", "contents": "${1:CChapter}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CChapter::_RecursiveGetTree", "contents": "${1:CChapter}::_RecursiveGetTree(${2:&\\$resElements}, ${2:\\$CHAPTER_ID = 0}, ${4:\\$DEPTH_LEVEL = 1})$0"},
		{"trigger": "CCourse::Add", "contents": "${1:CCourse}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCourse::CheckFields", "contents": "${1:CCourse}::CheckFields(${2:\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CCourse::Delete", "contents": "${1:CCourse}::Delete(${2:\\$ID})$0"},
		{"trigger": "CCourse::FilterCreate", "contents": "${1:CCourse}::FilterCreate(${2:\\$fname}, ${2:\\$vals}, ${4:\\$type}, ${4:&\\$bFullJoin}, ${6:\\$cOperationType=false}, ${6:\\$bSkipEmpty = true})$0"},
		{"trigger": "CCourse::GetByID", "contents": "${1:CCourse}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CCourse::GetCourseContent", "contents": "${1:CCourse}::GetCourseContent(${2:\\$COURSE_ID}, ${2:\\$arAddSelectFileds = array('DETAIL_TEXT'}, ${4:'DETAIL_TEXT_TYPE'}, ${4:'DETAIL_PICTURE')})$0"},
		{"trigger": "CCourse::GetGroupPermissions", "contents": "${1:CCourse}::GetGroupPermissions(${2:\\$COURSE_ID})$0"},
		{"trigger": "CCourse::GetList", "contents": "${1:CCourse}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()}, ${4:\\$bIncCnt = false})$0"},
		{"trigger": "CCourse::GetPermission", "contents": "${1:CCourse}::GetPermission(${2:\\$COURSE_ID})$0"},
		{"trigger": "CCourse::GetSite", "contents": "${1:CCourse}::GetSite(${2:\\$COURSE_ID})$0"},
		{"trigger": "CCourse::IsHaveCourse", "contents": "${1:CCourse}::IsHaveCourse(${2:\\$MIN_PERMISSION = 'W'})$0"},
		{"trigger": "CCourse::MkOperationFilter", "contents": "${1:CCourse}::MkOperationFilter(${2:\\$key})$0"},
		{"trigger": "CCourse::OnBeforeLangDelete", "contents": "${1:CCourse}::OnBeforeLangDelete(${2:\\$lang})$0"},
		{"trigger": "CCourse::OnGroupDelete", "contents": "${1:CCourse}::OnGroupDelete(${2:\\$GROUP_ID})$0"},
		{"trigger": "CCourse::OnSearchReindex", "contents": "${1:CCourse}::OnSearchReindex()$0"},
		{"trigger": "CCourse::OnUserDelete", "contents": "${1:CCourse}::OnUserDelete(${2:\\$user_id})$0"},
		{"trigger": "CCourse::SetPermission", "contents": "${1:CCourse}::SetPermission(${2:\\$COURSE_ID}, ${2:\\$arGROUP_ID})$0"},
		{"trigger": "CCourse::TimeToStr", "contents": "${1:CCourse}::TimeToStr(${2:\\$seconds})$0"},
		{"trigger": "CCourse::Update", "contents": "${1:CCourse}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CCourse::_RecursiveCourseContent", "contents": "${1:CCourse}::_RecursiveCourseContent(${2:&\\$resElements}, ${2:&\\$arReturn}, ${4:\\$CHAPTER_ID = 0}, ${4:\\$DEPTH_LEVEL = 1})$0"},
		{"trigger": "CCourse::_Upper", "contents": "${1:CCourse}::_Upper(${2:\\$str})$0"},
		{"trigger": "CCourseImport::CCourseImport", "contents": "${1:CCourseImport}::CCourseImport(${2:\\$PACKAGE_DIR}, ${2:\\$arSITE_ID})$0"},
		{"trigger": "CCourseImport::CreateContent", "contents": "${1:CCourseImport}::CreateContent(${2:\\$arItems = array()}, ${2:\\$PARENT_ID = 0})$0"},
		{"trigger": "CCourseImport::CreateCourse", "contents": "${1:CCourseImport}::CreateCourse()$0"},
		{"trigger": "CCourseImport::ImageTypeToMimeType", "contents": "${1:CCourseImport}::ImageTypeToMimeType(${2:\\$type})$0"},
		{"trigger": "CCourseImport::ImportPackage", "contents": "${1:CCourseImport}::ImportPackage()$0"},
		{"trigger": "CCourseImport::_MakeFields", "contents": "${1:CCourseImport}::_MakeFields(${2:&\\$arFields})$0"},
		{"trigger": "CCourseImport::_MakeItems", "contents": "${1:CCourseImport}::_MakeItems(${2:\\$TITLE}, ${2:\\$TYPE}, ${4:\\$RES_ID}, ${4:\\$PARENT_ID})$0"},
		{"trigger": "CCoursePackage::CCoursePackage", "contents": "${1:CCoursePackage}::CCoursePackage(${2:\\$COURSE_ID})$0"},
		{"trigger": "CCoursePackage::CreateManifest", "contents": "${1:CCoursePackage}::CreateManifest()$0"},
		{"trigger": "CCoursePackage::CreatePackage", "contents": "${1:CCoursePackage}::CreatePackage(${2:\\$PACKAGE_DIR})$0"},
		{"trigger": "CCoursePackage::CreateQTI", "contents": "${1:CCoursePackage}::CreateQTI(${2:\\$arParams}, ${2:\\$res_id = 1})$0"},
		{"trigger": "CCoursePackage::_CreateContent", "contents": "${1:CCoursePackage}::_CreateContent(${2:\\$TYPE}, ${2:\\$arParams}, ${4:\\$res_id})$0"},
		{"trigger": "CCoursePackage::_CreateCourseToc", "contents": "${1:CCoursePackage}::_CreateCourseToc()$0"},
		{"trigger": "CCoursePackage::_GetCourseContent", "contents": "${1:CCoursePackage}::_GetCourseContent(${2:\\$CHAPTER_ID = 0}, ${2:\\$DEPTH_LEVEL = 1})$0"},
		{"trigger": "CCoursePackage::_GetResourceFiles", "contents": "${1:CCoursePackage}::_GetResourceFiles(${2:\\$res_id})$0"},
		{"trigger": "CCoursePackage::_ReplaceImages", "contents": "${1:CCoursePackage}::_ReplaceImages(${2:\\$text}, ${2:\\$res_id})$0"},
		{"trigger": "CCoursePackage::_replace_img", "contents": "${1:CCoursePackage}::_replace_img(${2:\\$m0}, ${2:\\$m1,\\$m2,\\$m3,\\$m4}, ${4:\\$m5}, ${4:\\$res_id})$0"},
		{"trigger": "CCourseSCORM::CCourseSCORM", "contents": "${1:CCourseSCORM}::CCourseSCORM(${2:\\$PACKAGE_DIR}, ${2:\\$arSITE_ID})$0"},
		{"trigger": "CCourseSCORM::CreateContent", "contents": "${1:CCourseSCORM}::CreateContent(${2:\\$arItems = array()}, ${2:\\$PARENT_ID = 0})$0"},
		{"trigger": "CCourseSCORM::CreateCourse", "contents": "${1:CCourseSCORM}::CreateCourse()$0"},
		{"trigger": "CCourseSCORM::ImportPackage", "contents": "${1:CCourseSCORM}::ImportPackage()$0"},
		{"trigger": "CCourseSCORM::_MakeItems", "contents": "${1:CCourseSCORM}::_MakeItems(${2:\\$TITLE}, ${2:\\$TYPE}, ${4:\\$LAUNCH}, ${4:\\$PARENT_ID})$0"},
		{"trigger": "CGradeBook::Add", "contents": "${1:CGradeBook}::Add(${2:\\$arFields})$0"},
		{"trigger": "CGradeBook::AddExtraAttempts", "contents": "${1:CGradeBook}::AddExtraAttempts(${2:\\$STUDENT_ID}, ${2:\\$TEST_ID}, ${4:\\$COUNT = 1})$0"},
		{"trigger": "CGradeBook::CheckFields", "contents": "${1:CGradeBook}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CGradeBook::Delete", "contents": "${1:CGradeBook}::Delete(${2:\\$ID})$0"},
		{"trigger": "CGradeBook::GetByID", "contents": "${1:CGradeBook}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CGradeBook::GetExtraAttempts", "contents": "${1:CGradeBook}::GetExtraAttempts(${2:\\$STUDENT_ID}, ${2:\\$TEST_ID})$0"},
		{"trigger": "CGradeBook::GetFilter", "contents": "${1:CGradeBook}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CGradeBook::GetList", "contents": "${1:CGradeBook}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CGradeBook::RecountAttempts", "contents": "${1:CGradeBook}::RecountAttempts(${2:\\$STUDENT_ID,\\$TEST_ID})$0"},
		{"trigger": "CGradeBook::Update", "contents": "${1:CGradeBook}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CLAnswer::Add", "contents": "${1:CLAnswer}::Add(${2:\\$arFields})$0"},
		{"trigger": "CLAnswer::CheckFields", "contents": "${1:CLAnswer}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CLAnswer::Delete", "contents": "${1:CLAnswer}::Delete(${2:\\$ID})$0"},
		{"trigger": "CLAnswer::GetByID", "contents": "${1:CLAnswer}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CLAnswer::GetFilter", "contents": "${1:CLAnswer}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CLAnswer::GetList", "contents": "${1:CLAnswer}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CLAnswer::GetStats", "contents": "${1:CLAnswer}::GetStats(${2:\\$ID})$0"},
		{"trigger": "CLAnswer::Update", "contents": "${1:CLAnswer}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CLQuestion::Add", "contents": "${1:CLQuestion}::Add(${2:\\$arFields})$0"},
		{"trigger": "CLQuestion::CheckFields", "contents": "${1:CLQuestion}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CLQuestion::Delete", "contents": "${1:CLQuestion}::Delete(${2:\\$ID})$0"},
		{"trigger": "CLQuestion::GetByID", "contents": "${1:CLQuestion}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CLQuestion::GetCount", "contents": "${1:CLQuestion}::GetCount(${2:\\$arFilter=array()})$0"},
		{"trigger": "CLQuestion::GetFilter", "contents": "${1:CLQuestion}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CLQuestion::GetList", "contents": "${1:CLQuestion}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CLQuestion::Update", "contents": "${1:CLQuestion}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CLesson::Add", "contents": "${1:CLesson}::Add(${2:\\$arFields})$0"},
		{"trigger": "CLesson::CheckFields", "contents": "${1:CLesson}::CheckFields(${2:\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CLesson::Delete", "contents": "${1:CLesson}::Delete(${2:\\$ID})$0"},
		{"trigger": "CLesson::DoInsert", "contents": "${1:CLesson}::DoInsert(${2:\\$arInsert}, ${2:\\$arFields})$0"},
		{"trigger": "CLesson::GetByID", "contents": "${1:CLesson}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CLesson::GetFilter", "contents": "${1:CLesson}::GetFilter(${2:\\$arFilter=array()})$0"},
		{"trigger": "CLesson::GetList", "contents": "${1:CLesson}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CLesson::Update", "contents": "${1:CLesson}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingsComponentsLearning::OnAddRatingVote", "contents": "${1:CRatingsComponentsLearning}::OnAddRatingVote(${2:\\$id}, ${2:\\$arParams})$0"},
		{"trigger": "CRatingsComponentsLearning::OnCancelRatingVote", "contents": "${1:CRatingsComponentsLearning}::OnCancelRatingVote(${2:\\$id}, ${2:\\$arParams})$0"},
		{"trigger": "CRatingsComponentsLearning::OnGetRatingContentOwner", "contents": "${1:CRatingsComponentsLearning}::OnGetRatingContentOwner(${2:\\$arParams})$0"},
		{"trigger": "CSitePath::Add", "contents": "${1:CSitePath}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSitePath::CheckFields", "contents": "${1:CSitePath}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSitePath::Delete", "contents": "${1:CSitePath}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSitePath::DeleteBySiteID", "contents": "${1:CSitePath}::DeleteBySiteID(${2:\\$siteID})$0"},
		{"trigger": "CSitePath::GetByID", "contents": "${1:CSitePath}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSitePath::GetBySiteID", "contents": "${1:CSitePath}::GetBySiteID(${2:\\$siteID})$0"},
		{"trigger": "CSitePath::GetFilterOperation", "contents": "${1:CSitePath}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CSitePath::GetList", "contents": "${1:CSitePath}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSitePath::PrepareSql", "contents": "${1:CSitePath}::PrepareSql(${2:&\\$arFields}, ${2:\\$arOrder}, ${4:\\$arFilter}, ${4:\\$arGroupBy}, ${6:\\$arSelectFields}, ${6:\\$obUserFieldsSql = false})$0"},
		{"trigger": "CSitePath::Update", "contents": "${1:CSitePath}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CStudent::Add", "contents": "${1:CStudent}::Add(${2:\\$arFields})$0"},
		{"trigger": "CStudent::CheckFields", "contents": "${1:CStudent}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CStudent::Delete", "contents": "${1:CStudent}::Delete(${2:\\$ID})$0"},
		{"trigger": "CStudent::GenerateTranscipt", "contents": "${1:CStudent}::GenerateTranscipt(${2:\\$TranscriptLength = 8})$0"},
		{"trigger": "CStudent::GetByID", "contents": "${1:CStudent}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CStudent::GetFilter", "contents": "${1:CStudent}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CStudent::GetList", "contents": "${1:CStudent}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CStudent::Update", "contents": "${1:CStudent}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CTest::Add", "contents": "${1:CTest}::Add(${2:\\$arFields})$0"},
		{"trigger": "CTest::CheckFields", "contents": "${1:CTest}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CTest::Delete", "contents": "${1:CTest}::Delete(${2:\\$ID})$0"},
		{"trigger": "CTest::GetByID", "contents": "${1:CTest}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CTest::GetCount", "contents": "${1:CTest}::GetCount(${2:\\$arFilter = array()})$0"},
		{"trigger": "CTest::GetFilter", "contents": "${1:CTest}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CTest::GetList", "contents": "${1:CTest}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CTest::GetRandFunction", "contents": "${1:CTest}::GetRandFunction()$0"},
		{"trigger": "CTest::GetStats", "contents": "${1:CTest}::GetStats(${2:\\$ID})$0"},
		{"trigger": "CTest::Update", "contents": "${1:CTest}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CTest::isPrevPassed", "contents": "${1:CTest}::isPrevPassed(${2:\\$ID}, ${2:\\$SCORE})$0"},
		{"trigger": "CTestAttempt::Add", "contents": "${1:CTestAttempt}::Add(${2:\\$arFields})$0"},
		{"trigger": "CTestAttempt::AttemptFinished", "contents": "${1:CTestAttempt}::AttemptFinished(${2:\\$ATTEMPT_ID})$0"},
		{"trigger": "CTestAttempt::CheckFields", "contents": "${1:CTestAttempt}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CTestAttempt::CreateAttemptQuestions", "contents": "${1:CTestAttempt}::CreateAttemptQuestions(${2:\\$ATTEMPT_ID})$0"},
		{"trigger": "CTestAttempt::Delete", "contents": "${1:CTestAttempt}::Delete(${2:\\$ID})$0"},
		{"trigger": "CTestAttempt::DoInsert", "contents": "${1:CTestAttempt}::DoInsert(${2:\\$arInsert}, ${2:\\$arFields})$0"},
		{"trigger": "CTestAttempt::GetByID", "contents": "${1:CTestAttempt}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CTestAttempt::GetCount", "contents": "${1:CTestAttempt}::GetCount(${2:\\$TEST_ID}, ${2:\\$STUDENT_ID})$0"},
		{"trigger": "CTestAttempt::GetFilter", "contents": "${1:CTestAttempt}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CTestAttempt::GetList", "contents": "${1:CTestAttempt}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()}, ${4:\\$arSelect = array()})$0"},
		{"trigger": "CTestAttempt::IsTestCompleted", "contents": "${1:CTestAttempt}::IsTestCompleted(${2:\\$ATTEMPT_ID}, ${2:\\$PERCENT})$0"},
		{"trigger": "CTestAttempt::IsTestFailed", "contents": "${1:CTestAttempt}::IsTestFailed(${2:\\$ATTEMPT_ID}, ${2:\\$PERCENT})$0"},
		{"trigger": "CTestAttempt::OnAttemptChange", "contents": "${1:CTestAttempt}::OnAttemptChange(${2:\\$ATTEMPT_ID}, ${2:\\$bCOMPLETED = false})$0"},
		{"trigger": "CTestAttempt::RecountQuestions", "contents": "${1:CTestAttempt}::RecountQuestions(${2:\\$ATTEMPT_ID})$0"},
		{"trigger": "CTestAttempt::Update", "contents": "${1:CTestAttempt}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CTestMark::Add", "contents": "${1:CTestMark}::Add(${2:\\$arFields})$0"},
		{"trigger": "CTestMark::CheckFields", "contents": "${1:CTestMark}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CTestMark::Delete", "contents": "${1:CTestMark}::Delete(${2:\\$ID})$0"},
		{"trigger": "CTestMark::GetByID", "contents": "${1:CTestMark}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CTestMark::GetByPercent", "contents": "${1:CTestMark}::GetByPercent(${2:\\$TEST_ID}, ${2:\\$PERCENT})$0"},
		{"trigger": "CTestMark::GetFilter", "contents": "${1:CTestMark}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CTestMark::GetList", "contents": "${1:CTestMark}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CTestMark::Update", "contents": "${1:CTestMark}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CTestResult::Add", "contents": "${1:CTestResult}::Add(${2:\\$arFields})$0"},
		{"trigger": "CTestResult::AddResponse", "contents": "${1:CTestResult}::AddResponse(${2:\\$TEST_RESULT_ID}, ${2:\\$RESPONSE})$0"},
		{"trigger": "CTestResult::CheckFields", "contents": "${1:CTestResult}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CTestResult::Delete", "contents": "${1:CTestResult}::Delete(${2:\\$ID})$0"},
		{"trigger": "CTestResult::GetByID", "contents": "${1:CTestResult}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CTestResult::GetCorrectCount", "contents": "${1:CTestResult}::GetCorrectCount(${2:\\$ATTEMPT_ID})$0"},
		{"trigger": "CTestResult::GetCount", "contents": "${1:CTestResult}::GetCount(${2:\\$ATTEMPT_ID})$0"},
		{"trigger": "CTestResult::GetFilter", "contents": "${1:CTestResult}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CTestResult::GetList", "contents": "${1:CTestResult}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CTestResult::GetPercent", "contents": "${1:CTestResult}::GetPercent(${2:\\$ATTEMPT_ID})$0"},
		{"trigger": "CTestResult::GetProgress", "contents": "${1:CTestResult}::GetProgress(${2:\\$ATTEMPT_ID})$0"},
		{"trigger": "CTestResult::OnTestResultChange", "contents": "${1:CTestResult}::OnTestResultChange(${2:\\$TEST_RESULT_ID})$0"},
		{"trigger": "CTestResult::Update", "contents": "${1:CTestResult}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CList::ActualizeDocumentAdminPage", "contents": "${1:CList}::ActualizeDocumentAdminPage(${2:\\$url})$0"},
		{"trigger": "CList::AddField", "contents": "${1:CList}::AddField(${2:\\$arFields})$0"},
		{"trigger": "CList::DeleteField", "contents": "${1:CList}::DeleteField(${2:\\$field_id})$0"},
		{"trigger": "CList::GetAllTypes", "contents": "${1:CList}::GetAllTypes()$0"},
		{"trigger": "CList::GetAvailableTypes", "contents": "${1:CList}::GetAvailableTypes(${2:\\$ID = ''})$0"},
		{"trigger": "CList::GetFields", "contents": "${1:CList}::GetFields()$0"},
		{"trigger": "CList::GetNewID", "contents": "${1:CList}::GetNewID(${2:\\$TEMP_ID})$0"},
		{"trigger": "CList::OnGetDocumentAdminPage", "contents": "${1:CList}::OnGetDocumentAdminPage(${2:\\$arElement})$0"},
		{"trigger": "CList::Save", "contents": "${1:CList}::Save()$0"},
		{"trigger": "CList::UpdateField", "contents": "${1:CList}::UpdateField(${2:\\$field_id}, ${2:\\$arFields})$0"},
		{"trigger": "CList::UpdatePropertyList", "contents": "${1:CList}::UpdatePropertyList(${2:\\$prop_id}, ${2:\\$list})$0"},
		{"trigger": "CList::__construct", "contents": "${1:CList}::__construct(${2:\\$iblock_id})$0"},
		{"trigger": "CList::is_field", "contents": "${1:CList}::is_field(${2:\\$type_id})$0"},
		{"trigger": "CList::is_readonly", "contents": "${1:CList}::is_readonly(${2:\\$field_id})$0"},
		{"trigger": "CListElementField::Add", "contents": "${1:CListElementField}::Add(${2:\\$iblock_id}, ${2:\\$arFields})$0"},
		{"trigger": "CListElementField::Delete", "contents": "${1:CListElementField}::Delete()$0"},
		{"trigger": "CListElementField::Getarray", "contents": "${1:CListElementField}::Getarray()$0"},
		{"trigger": "CListElementField::GetDefaultValue", "contents": "${1:CListElementField}::GetDefaultValue()$0"},
		{"trigger": "CListElementField::IsMultiple", "contents": "${1:CListElementField}::IsMultiple()$0"},
		{"trigger": "CListElementField::IsRequired", "contents": "${1:CListElementField}::IsRequired()$0"},
		{"trigger": "CListElementField::SetSort", "contents": "${1:CListElementField}::SetSort(${2:\\$sort})$0"},
		{"trigger": "CListElementField::Update", "contents": "${1:CListElementField}::Update(${2:\\$arFields})$0"},
		{"trigger": "CListElementField::__construct", "contents": "${1:CListElementField}::__construct(${2:\\$iblock_id}, ${2:\\$field_id}, ${4:\\$label}, ${4:\\$sort})$0"},
		{"trigger": "CListField::Add", "contents": "${1:CListField}::Add(${2:\\$iblock_id}, ${2:\\$arFields})$0"},
		{"trigger": "CListField::Delete", "contents": "${1:CListField}::Delete()$0"},
		{"trigger": "CListField::Getarray", "contents": "${1:CListField}::Getarray()$0"},
		{"trigger": "CListField::GetDefaultValue", "contents": "${1:CListField}::GetDefaultValue()$0"},
		{"trigger": "CListField::GetID", "contents": "${1:CListField}::GetID()$0"},
		{"trigger": "CListField::GetLabel", "contents": "${1:CListField}::GetLabel()$0"},
		{"trigger": "CListField::GetSettings", "contents": "${1:CListField}::GetSettings()$0"},
		{"trigger": "CListField::GetSettingsDefaults", "contents": "${1:CListField}::GetSettingsDefaults()$0"},
		{"trigger": "CListField::GetSort", "contents": "${1:CListField}::GetSort()$0"},
		{"trigger": "CListField::GetTypeID", "contents": "${1:CListField}::GetTypeID()$0"},
		{"trigger": "CListField::IsMultiple", "contents": "${1:CListField}::IsMultiple()$0"},
		{"trigger": "CListField::IsReadOnly", "contents": "${1:CListField}::IsReadOnly()$0"},
		{"trigger": "CListField::IsRequired", "contents": "${1:CListField}::IsRequired()$0"},
		{"trigger": "CListField::SetSettings", "contents": "${1:CListField}::SetSettings(${2:\\$arSettings})$0"},
		{"trigger": "CListField::SetSort", "contents": "${1:CListField}::SetSort(${2:\\$sort})$0"},
		{"trigger": "CListField::Update", "contents": "${1:CListField}::Update(${2:\\$arFields})$0"},
		{"trigger": "CListField::__construct", "contents": "${1:CListField}::__construct(${2:\\$iblock_id}, ${2:\\$field_id}, ${4:\\$label}, ${4:\\$sort})$0"},
		{"trigger": "CListField::_clear_cache", "contents": "${1:CListField}::_clear_cache()$0"},
		{"trigger": "CListField::_read_from_cache", "contents": "${1:CListField}::_read_from_cache(${2:\\$field_id})$0"},
		{"trigger": "CListFieldList::AddField", "contents": "${1:CListFieldList}::AddField(${2:\\$arFields})$0"},
		{"trigger": "CListFieldList::DeleteField", "contents": "${1:CListFieldList}::DeleteField(${2:\\$field_id})$0"},
		{"trigger": "CListFieldList::DeleteFields", "contents": "${1:CListFieldList}::DeleteFields(${2:\\$iblock_id})$0"},
		{"trigger": "CListFieldList::GetarrayByID", "contents": "${1:CListFieldList}::GetarrayByID(${2:\\$field_id})$0"},
		{"trigger": "CListFieldList::GetByID", "contents": "${1:CListFieldList}::GetByID(${2:\\$field_id})$0"},
		{"trigger": "CListFieldList::GetFields", "contents": "${1:CListFieldList}::GetFields()$0"},
		{"trigger": "CListFieldList::Order", "contents": "${1:CListFieldList}::Order(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CListFieldList::UpdateField", "contents": "${1:CListFieldList}::UpdateField(${2:\\$field_id}, ${2:\\$arFields})$0"},
		{"trigger": "CListFieldList::__construct", "contents": "${1:CListFieldList}::__construct(${2:\\$iblock_id})$0"},
		{"trigger": "CListFieldList::_read_form_settings", "contents": "${1:CListFieldList}::_read_form_settings(${2:\\$form_id})$0"},
		{"trigger": "CListFieldList::_resort", "contents": "${1:CListFieldList}::_resort()$0"},
		{"trigger": "CListFieldList::_save_form_settings", "contents": "${1:CListFieldList}::_save_form_settings(${2:\\$form_id})$0"},
		{"trigger": "CListFieldType::GetID", "contents": "${1:CListFieldType}::GetID()$0"},
		{"trigger": "CListFieldType::GetName", "contents": "${1:CListFieldType}::GetName()$0"},
		{"trigger": "CListFieldType::IsField", "contents": "${1:CListFieldType}::IsField()$0"},
		{"trigger": "CListFieldType::IsReadonly", "contents": "${1:CListFieldType}::IsReadonly()$0"},
		{"trigger": "CListFieldType::__construct", "contents": "${1:CListFieldType}::__construct(${2:\\$id}, ${2:\\$name}, ${4:\\$is_field}, ${4:\\$is_readonly})$0"},
		{"trigger": "CListFieldTypeList::GetByID", "contents": "${1:CListFieldTypeList}::GetByID(${2:\\$type_id})$0"},
		{"trigger": "CListFieldTypeList::GetTypesNames", "contents": "${1:CListFieldTypeList}::GetTypesNames()$0"},
		{"trigger": "CListFieldTypeList::IsExists", "contents": "${1:CListFieldTypeList}::IsExists(${2:\\$type_id})$0"},
		{"trigger": "CListFieldTypeList::IsField", "contents": "${1:CListFieldTypeList}::IsField(${2:\\$type_id})$0"},
		{"trigger": "CListFieldTypeList::_init", "contents": "${1:CListFieldTypeList}::_init()$0"},
		{"trigger": "CListFile::GetHeight", "contents": "${1:CListFile}::GetHeight()$0"},
		{"trigger": "CListFile::GetImgHtml", "contents": "${1:CListFile}::GetImgHtml(${2:\\$params = array()})$0"},
		{"trigger": "CListFile::GetImgSrc", "contents": "${1:CListFile}::GetImgSrc(${2:\\$params = array()})$0"},
		{"trigger": "CListFile::GetInfoHTML", "contents": "${1:CListFile}::GetInfoHTML()$0"},
		{"trigger": "CListFile::GetInputHTML", "contents": "${1:CListFile}::GetInputHTML(${2:\\$params = array()})$0"},
		{"trigger": "CListFile::GetLinkHtml", "contents": "${1:CListFile}::GetLinkHtml(${2:\\$params = array()})$0"},
		{"trigger": "CListFile::GetSize", "contents": "${1:CListFile}::GetSize()$0"},
		{"trigger": "CListFile::GetWidth", "contents": "${1:CListFile}::GetWidth()$0"},
		{"trigger": "CListFile::IsImage", "contents": "${1:CListFile}::IsImage()$0"},
		{"trigger": "CListFile::SetSocnetGroup", "contents": "${1:CListFile}::SetSocnetGroup(${2:\\$socnet_group_id})$0"},
		{"trigger": "CListFile::__construct", "contents": "${1:CListFile}::__construct(${2:\\$list_id}, ${2:\\$section_id}, ${4:\\$element_id}, ${4:\\$field_id}, ${6:\\$file_id})$0"},
		{"trigger": "CListFileControl::GetHTML", "contents": "${1:CListFileControl}::GetHTML(${2:\\$params})$0"},
		{"trigger": "CListFileControl::__construct", "contents": "${1:CListFileControl}::__construct(${2:\\$obFile}, ${2:\\$input_name})$0"},
		{"trigger": "CListPermissions::CheckAccess", "contents": "${1:CListPermissions}::CheckAccess(${2:\\$USER}, ${2:\\$iblock_type_id}, ${4:\\$iblock_id = false}, ${4:\\$socnet_group_id = 0})$0"},
		{"trigger": "CListPermissions::MergeRights", "contents": "${1:CListPermissions}::MergeRights(${2:\\$IBLOCK_TYPE_ID}, ${2:$DB}, ${4:\\$POST})$0"},
		{"trigger": "CListPermissions::_iblock_check", "contents": "${1:CListPermissions}::_iblock_check(${2:\\$iblock_type_id}, ${2:\\$iblock_id})$0"},
		{"trigger": "CListPermissions::_lists_check", "contents": "${1:CListPermissions}::_lists_check(${2:\\$USER}, ${2:\\$iblock_type_id}, ${4:\\$iblock_id})$0"},
		{"trigger": "CListPermissions::_lists_type_check", "contents": "${1:CListPermissions}::_lists_type_check(${2:\\$USER}, ${2:\\$iblock_type_id})$0"},
		{"trigger": "CListPermissions::_socnet_check", "contents": "${1:CListPermissions}::_socnet_check(${2:\\$USER}, ${2:\\$iblock_type_id}, ${4:\\$iblock_id}, ${4:\\$socnet_group_id})$0"},
		{"trigger": "CListPermissions::_socnet_type_check", "contents": "${1:CListPermissions}::_socnet_type_check(${2:\\$USER}, ${2:\\$iblock_type_id}, ${4:\\$socnet_group_id})$0"},
		{"trigger": "CListPropertyField::Add", "contents": "${1:CListPropertyField}::Add(${2:\\$iblock_id}, ${2:\\$arFields})$0"},
		{"trigger": "CListPropertyField::Delete", "contents": "${1:CListPropertyField}::Delete()$0"},
		{"trigger": "CListPropertyField::Getarray", "contents": "${1:CListPropertyField}::Getarray()$0"},
		{"trigger": "CListPropertyField::GetDefaultValue", "contents": "${1:CListPropertyField}::GetDefaultValue()$0"},
		{"trigger": "CListPropertyField::IsMultiple", "contents": "${1:CListPropertyField}::IsMultiple()$0"},
		{"trigger": "CListPropertyField::IsRequired", "contents": "${1:CListPropertyField}::IsRequired()$0"},
		{"trigger": "CListPropertyField::SetSort", "contents": "${1:CListPropertyField}::SetSort(${2:\\$sort})$0"},
		{"trigger": "CListPropertyField::Update", "contents": "${1:CListPropertyField}::Update(${2:\\$arFields})$0"},
		{"trigger": "CListPropertyField::__construct", "contents": "${1:CListPropertyField}::__construct(${2:\\$iblock_id}, ${2:\\$field_id}, ${4:\\$label}, ${4:\\$sort})$0"},
		{"trigger": "CLists::EnableSocnet", "contents": "${1:CLists}::EnableSocnet(${2:\\$bActive = false})$0"},
		{"trigger": "CLists::GetDefaultSocnetPermission", "contents": "${1:CLists}::GetDefaultSocnetPermission()$0"},
		{"trigger": "CLists::GetIBlockPermission", "contents": "${1:CLists}::GetIBlockPermission(${2:\\$iblock_id}, ${2:\\$user_id})$0"},
		{"trigger": "CLists::GetIBlockTypes", "contents": "${1:CLists}::GetIBlockTypes(${2:\\$language_id = false})$0"},
		{"trigger": "CLists::GetIBlocks", "contents": "${1:CLists}::GetIBlocks(${2:\\$iblock_type_id}, ${2:\\$check_permissions}, ${4:\\$socnet_group_id = false})$0"},
		{"trigger": "CLists::GetPermission", "contents": "${1:CLists}::GetPermission(${2:\\$iblock_type_id = false})$0"},
		{"trigger": "CLists::GetSocnetPermission", "contents": "${1:CLists}::GetSocnetPermission(${2:\\$iblock_id})$0"},
		{"trigger": "CLists::IsEnabledSocnet", "contents": "${1:CLists}::IsEnabledSocnet()$0"},
		{"trigger": "CLists::OnIBlockDelete", "contents": "${1:CLists}::OnIBlockDelete(${2:\\$iblock_id})$0"},
		{"trigger": "CLists::OnSharepointCheckAccess", "contents": "${1:CLists}::OnSharepointCheckAccess(${2:\\$iblock_id})$0"},
		{"trigger": "CLists::OnSharepointCreateProperty", "contents": "${1:CLists}::OnSharepointCreateProperty(${2:\\$arInputFields})$0"},
		{"trigger": "CLists::SetPermission", "contents": "${1:CLists}::SetPermission(${2:\\$iblock_type_id}, ${2:\\$arGroups})$0"},
		{"trigger": "CLists::SetSocnetPermission", "contents": "${1:CLists}::SetSocnetPermission(${2:\\$iblock_id}, ${2:\\$arRoles})$0"},
		{"trigger": "CListsParameters::GetPathTemplateMenuItems", "contents": "${1:CListsParameters}::GetPathTemplateMenuItems(${2:\\$menuType}, ${2:\\$action_function}, ${4:\\$menuID}, ${4:\\$inputID = ''})$0"},
		{"trigger": "CListsParameters::GetPathTemplateParam", "contents": "${1:CListsParameters}::GetPathTemplateParam(${2:\\$menuType}, ${2:\\$ID}, ${4:\\$parameterName}, ${4:\\$defaultValue = ''}, ${6:\\$parentID = 'URL_TEMPLATES'})$0"},
		{"trigger": "CListsSocnet::FormatEvent_Lists", "contents": "${1:CListsSocnet}::FormatEvent_Lists(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CListsSocnet::OnFillSocNetFeaturesList", "contents": "${1:CListsSocnet}::OnFillSocNetFeaturesList(${2:&\\$arSocNetFeaturesSettings})$0"},
		{"trigger": "CListsSocnet::OnFillSocNetMenu", "contents": "${1:CListsSocnet}::OnFillSocNetMenu(${2:&\\$arResult}, ${2:\\$arParams = array()})$0"},
		{"trigger": "CListsSocnet::OnInitSocNetComponentVariables", "contents": "${1:CListsSocnet}::OnInitSocNetComponentVariables(${2:&\\$arVariableAliases}, ${2:&\\$arCustomPagesPath})$0"},
		{"trigger": "CListsSocnet::OnParseSocNetComponentPath", "contents": "${1:CListsSocnet}::OnParseSocNetComponentPath(${2:&\\$arUrlTemplates}, ${2:&\\$arCustomPagesPath}, ${4:\\$arParams})$0"},
		{"trigger": "CMailAttachment::Delete", "contents": "${1:CMailAttachment}::Delete(${2:\\$id})$0"},
		{"trigger": "CMailAttachment::GetByID", "contents": "${1:CMailAttachment}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CMailAttachment::GetList", "contents": "${1:CMailAttachment}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CMailBox::Add", "contents": "${1:CMailBox}::Add(${2:\\$arFields})$0"},
		{"trigger": "CMailBox::Check", "contents": "${1:CMailBox}::Check(${2:\\$server}, ${2:\\$port}, ${4:\\$use_tls}, ${4:\\$login}, ${6:\\$passw})$0"},
		{"trigger": "CMailBox::CheckFields", "contents": "${1:CMailBox}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CMailBox::CheckMail", "contents": "${1:CMailBox}::CheckMail(${2:\\$mailbox_id = false})$0"},
		{"trigger": "CMailBox::CheckMailAgent", "contents": "${1:CMailBox}::CheckMailAgent(${2:\\$ID})$0"},
		{"trigger": "CMailBox::Connect", "contents": "${1:CMailBox}::Connect(${2:\\$mailbox_id})$0"},
		{"trigger": "CMailBox::Delete", "contents": "${1:CMailBox}::Delete(${2:\\$ID})$0"},
		{"trigger": "CMailBox::DeleteMessage", "contents": "${1:CMailBox}::DeleteMessage(${2:\\$msgnum})$0"},
		{"trigger": "CMailBox::GetByID", "contents": "${1:CMailBox}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CMailBox::GetList", "contents": "${1:CMailBox}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CMailBox::GetMessage", "contents": "${1:CMailBox}::GetMessage(${2:\\$mailbox_id}, ${2:\\$msgnum}, ${4:\\$msguid}, ${4:\\$session_id})$0"},
		{"trigger": "CMailBox::GetPassword", "contents": "${1:CMailBox}::GetPassword(${2:\\$p})$0"},
		{"trigger": "CMailBox::GetResponse", "contents": "${1:CMailBox}::GetResponse(${2:\\$bMultiline = false}, ${2:\\$bSkipFirst = true})$0"},
		{"trigger": "CMailBox::GetResponseBody", "contents": "${1:CMailBox}::GetResponseBody()$0"},
		{"trigger": "CMailBox::GetResponseString", "contents": "${1:CMailBox}::GetResponseString()$0"},
		{"trigger": "CMailBox::SMTPReload", "contents": "${1:CMailBox}::SMTPReload()$0"},
		{"trigger": "CMailBox::SendCommand", "contents": "${1:CMailBox}::SendCommand(${2:\\$command})$0"},
		{"trigger": "CMailBox::Update", "contents": "${1:CMailBox}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CMailError::ErrCount", "contents": "${1:CMailError}::ErrCount()$0"},
		{"trigger": "CMailError::GetErrors", "contents": "${1:CMailError}::GetErrors()$0"},
		{"trigger": "CMailError::GetErrorsText", "contents": "${1:CMailError}::GetErrorsText(${2:\\$delim=''})$0"},
		{"trigger": "CMailError::GetLastError", "contents": "${1:CMailError}::GetLastError(${2:\\$type=false})$0"},
		{"trigger": "CMailError::ResetErrors", "contents": "${1:CMailError}::ResetErrors()$0"},
		{"trigger": "CMailError::SetError", "contents": "${1:CMailError}::SetError(${2:\\$ID}, ${2:\\$TITLE=''}, ${4:\\$DESC=''})$0"},
		{"trigger": "CMailFilter::Add", "contents": "${1:CMailFilter}::Add(${2:\\$arFields})$0"},
		{"trigger": "CMailFilter::CheckFields", "contents": "${1:CMailFilter}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CMailFilter::CheckPHP", "contents": "${1:CMailFilter}::CheckPHP(${2:\\$code}, ${2:\\$field_name})$0"},
		{"trigger": "CMailFilter::Delete", "contents": "${1:CMailFilter}::Delete(${2:\\$ID})$0"},
		{"trigger": "CMailFilter::DeleteFromSpamBase", "contents": "${1:CMailFilter}::DeleteFromSpamBase(${2:\\$message}, ${2:\\$bIsSPAM = true})$0"},
		{"trigger": "CMailFilter::DoPHPAction", "contents": "${1:CMailFilter}::DoPHPAction(${2:\\$id}, ${2:\\$action}, ${4:&\\$arMessageFields})$0"},
		{"trigger": "CMailFilter::Filter", "contents": "${1:CMailFilter}::Filter(${2:\\$arFields}, ${2:\\$event}, ${4:\\$FILTER_ID=false}, ${4:\\$PARENT_FILTER_ID = false})$0"},
		{"trigger": "CMailFilter::FilterMessage", "contents": "${1:CMailFilter}::FilterMessage(${2:\\$message_id}, ${2:\\$event}, ${4:\\$FILTER_ID=false})$0"},
		{"trigger": "CMailFilter::GetByID", "contents": "${1:CMailFilter}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CMailFilter::GetFilterList", "contents": "${1:CMailFilter}::GetFilterList(${2:\\$id = ''})$0"},
		{"trigger": "CMailFilter::GetList", "contents": "${1:CMailFilter}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()}, ${4:\\$bCnt=false})$0"},
		{"trigger": "CMailFilter::GetSpamRating", "contents": "${1:CMailFilter}::GetSpamRating(${2:\\$message})$0"},
		{"trigger": "CMailFilter::MarkAsSpam", "contents": "${1:CMailFilter}::MarkAsSpam(${2:\\$message}, ${2:\\$bIsSPAM = true})$0"},
		{"trigger": "CMailFilter::RecalcSpamRating", "contents": "${1:CMailFilter}::RecalcSpamRating()$0"},
		{"trigger": "CMailFilter::SpamAction", "contents": "${1:CMailFilter}::SpamAction(${2:\\$message}, ${2:\\$bIsSPAM}, ${4:\\$bDelete = false})$0"},
		{"trigger": "CMailFilter::Update", "contents": "${1:CMailFilter}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CMailFilterCondition::Add", "contents": "${1:CMailFilterCondition}::Add(${2:\\$arFields})$0"},
		{"trigger": "CMailFilterCondition::Delete", "contents": "${1:CMailFilterCondition}::Delete(${2:\\$ID})$0"},
		{"trigger": "CMailFilterCondition::GetByID", "contents": "${1:CMailFilterCondition}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CMailFilterCondition::GetList", "contents": "${1:CMailFilterCondition}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CMailFilterCondition::SetConditions", "contents": "${1:CMailFilterCondition}::SetConditions(${2:\\$FILTER_ID}, ${2:\\$CONDITIONS}, ${4:\\$bClearOther = true})$0"},
		{"trigger": "CMailFilterCondition::Update", "contents": "${1:CMailFilterCondition}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CMailHeader::ConvertHeader", "contents": "${1:CMailHeader}::ConvertHeader(${2:\\$encoding}, ${2:\\$type}, ${4:\\$str}, ${4:\\$charset})$0"},
		{"trigger": "CMailHeader::DecodeHeader", "contents": "${1:CMailHeader}::DecodeHeader(${2:\\$str}, ${2:\\$charset_to}, ${4:\\$charset_document})$0"},
		{"trigger": "CMailHeader::GetBoundary", "contents": "${1:CMailHeader}::GetBoundary()$0"},
		{"trigger": "CMailHeader::GetHeader", "contents": "${1:CMailHeader}::GetHeader(${2:\\$type})$0"},
		{"trigger": "CMailHeader::IsMultipart", "contents": "${1:CMailHeader}::IsMultipart()$0"},
		{"trigger": "CMailHeader::MultipartType", "contents": "${1:CMailHeader}::MultipartType()$0"},
		{"trigger": "CMailHeader::Parse", "contents": "${1:CMailHeader}::Parse(${2:\\$message_header}, ${2:\\$charset})$0"},
		{"trigger": "CMailLog::AddMessage", "contents": "${1:CMailLog}::AddMessage(${2:\\$arFields})$0"},
		{"trigger": "CMailLog::ConvertRow", "contents": "${1:CMailLog}::ConvertRow(${2:\\$arr_log})$0"},
		{"trigger": "CMailLog::Delete", "contents": "${1:CMailLog}::Delete(${2:\\$ID})$0"},
		{"trigger": "CMailLog::GetList", "contents": "${1:CMailLog}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CMailMessage::Add", "contents": "${1:CMailMessage}::Add(${2:\\$arFields})$0"},
		{"trigger": "CMailMessage::AddAttachment", "contents": "${1:CMailMessage}::AddAttachment(${2:\\$arFields})$0"},
		{"trigger": "CMailMessage::AddMessage", "contents": "${1:CMailMessage}::AddMessage(${2:\\$mailbox_id}, ${2:\\$message}, ${4:\\$charset})$0"},
		{"trigger": "CMailMessage::Delete", "contents": "${1:CMailMessage}::Delete(${2:\\$id})$0"},
		{"trigger": "CMailMessage::GetByID", "contents": "${1:CMailMessage}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CMailMessage::GetList", "contents": "${1:CMailMessage}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$bCnt = false})$0"},
		{"trigger": "CMailMessage::GetSpamRating", "contents": "${1:CMailMessage}::GetSpamRating(${2:\\$msgid}, ${2:\\$arRow=false})$0"},
		{"trigger": "CMailMessage::MarkAsSpam", "contents": "${1:CMailMessage}::MarkAsSpam(${2:\\$ID}, ${2:\\$bIsSPAM = true}, ${4:\\$arRow = false})$0"},
		{"trigger": "CMailMessage::ParseHeader", "contents": "${1:CMailMessage}::ParseHeader(${2:\\$message_header}, ${2:\\$charset})$0"},
		{"trigger": "CMailMessage::Update", "contents": "${1:CMailMessage}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CMailUtil::BinMD5", "contents": "${1:CMailUtil}::BinMD5(${2:\\$val})$0"},
		{"trigger": "CMailUtil::ByteXOR", "contents": "${1:CMailUtil}::ByteXOR(${2:\\$a,\\$b,\\$l})$0"},
		{"trigger": "CMailUtil::ConvertCharset", "contents": "${1:CMailUtil}::ConvertCharset(${2:\\$str}, ${2:\\$from}, ${4:\\$to})$0"},
		{"trigger": "CMailUtil::Crypt", "contents": "${1:CMailUtil}::Crypt(${2:\\$str}, ${2:\\$key=false})$0"},
		{"trigger": "CMailUtil::Decrypt", "contents": "${1:CMailUtil}::Decrypt(${2:\\$str}, ${2:\\$key=false})$0"},
		{"trigger": "CMailUtil::ExtractAllMailAddresses", "contents": "${1:CMailUtil}::ExtractAllMailAddresses(${2:\\$emails})$0"},
		{"trigger": "CMailUtil::ExtractMailAddress", "contents": "${1:CMailUtil}::ExtractMailAddress(${2:\\$email})$0"},
		{"trigger": "CMailUtil::FilterCreate", "contents": "${1:CMailUtil}::FilterCreate(${2:\\$fname}, ${2:\\$vals}, ${4:\\$type}, ${4:\\$cOperationType=false}, ${6:\\$bSkipEmpty = true})$0"},
		{"trigger": "CMailUtil::FilterCreateEx", "contents": "${1:CMailUtil}::FilterCreateEx(${2:\\$fname}, ${2:\\$vals}, ${4:\\$type}, ${4:&\\$bFullJoin}, ${6:\\$cOperationType=false}, ${6:\\$bSkipEmpty = true})$0"},
		{"trigger": "CMailUtil::IsSizeAllowed", "contents": "${1:CMailUtil}::IsSizeAllowed(${2:\\$size})$0"},
		{"trigger": "CMailUtil::MkOperationFilter", "contents": "${1:CMailUtil}::MkOperationFilter(${2:\\$key})$0"},
		{"trigger": "CMailUtil::uue_decode", "contents": "${1:CMailUtil}::uue_decode(${2:\\$str})$0"},
		{"trigger": "CMailbox::CleanUp", "contents": "${1:CMailbox}::CleanUp()$0"},
		{"trigger": "CSMTPConnection::Authorize", "contents": "${1:CSMTPConnection}::Authorize(${2:\\$login}, ${2:\\$password})$0"},
		{"trigger": "CSMTPConnection::CSMTPConnection", "contents": "${1:CSMTPConnection}::CSMTPConnection(${2:\\$id}, ${2:\\$sock}, ${4:\\$serv})$0"},
		{"trigger": "CSMTPConnection::CheckRelaying", "contents": "${1:CSMTPConnection}::CheckRelaying(${2:\\$email})$0"},
		{"trigger": "CSMTPConnection::Disconnect", "contents": "${1:CSMTPConnection}::Disconnect()$0"},
		{"trigger": "CSMTPConnection::Receive", "contents": "${1:CSMTPConnection}::Receive()$0"},
		{"trigger": "CSMTPConnection::Send", "contents": "${1:CSMTPConnection}::Send(${2:\\$code}, ${2:\\$text = ''})$0"},
		{"trigger": "CSMTPConnection::WriteToLog", "contents": "${1:CSMTPConnection}::WriteToLog(${2:\\$txt}, ${2:\\$level})$0"},
		{"trigger": "CSMTPConnection::__AuthLoginHandler", "contents": "${1:CSMTPConnection}::__AuthLoginHandler()$0"},
		{"trigger": "CSMTPConnection::__AuthPlainHandler", "contents": "${1:CSMTPConnection}::__AuthPlainHandler()$0"},
		{"trigger": "CSMTPConnection::__DataHandler", "contents": "${1:CSMTPConnection}::__DataHandler()$0"},
		{"trigger": "CSMTPConnection::__ParseBuffer", "contents": "${1:CSMTPConnection}::__ParseBuffer()$0"},
		{"trigger": "CSMTPConnection::__ProcessCommand", "contents": "${1:CSMTPConnection}::__ProcessCommand(${2:\\$command}, ${2:\\$arg = ''})$0"},
		{"trigger": "CSMTPConnection::__Send", "contents": "${1:CSMTPConnection}::__Send(${2:\\$message})$0"},
		{"trigger": "CSMTPServer::FindServerConnection", "contents": "${1:CSMTPServer}::FindServerConnection(${2:\\$s})$0"},
		{"trigger": "CSMTPServer::FindServerSocket", "contents": "${1:CSMTPServer}::FindServerSocket(${2:\\$s})$0"},
		{"trigger": "CSMTPServer::Listen", "contents": "${1:CSMTPServer}::Listen()$0"},
		{"trigger": "CSMTPServer::ReloadServers", "contents": "${1:CSMTPServer}::ReloadServers()$0"},
		{"trigger": "CSMTPServer::RemoveHost", "contents": "${1:CSMTPServer}::RemoveHost(${2:\\$i})$0"},
		{"trigger": "CSMTPServer::Run", "contents": "${1:CSMTPServer}::Run()$0"},
		{"trigger": "CSMTPServer::Start", "contents": "${1:CSMTPServer}::Start()$0"},
		{"trigger": "CSMTPServer::Stop", "contents": "${1:CSMTPServer}::Stop()$0"},
		{"trigger": "CSMTPServer::WriteToLog", "contents": "${1:CSMTPServer}::WriteToLog(${2:\\$txt}, ${2:\\$level})$0"},
		{"trigger": "CSMTPServerHost::AddConnection", "contents": "${1:CSMTPServerHost}::AddConnection()$0"},
		{"trigger": "CSMTPServerHost::CSMTPServerHost", "contents": "${1:CSMTPServerHost}::CSMTPServerHost(${2:\\$server}, ${2:\\$arFields})$0"},
		{"trigger": "CSMTPServerHost::CheckTimeout", "contents": "${1:CSMTPServerHost}::CheckTimeout(${2:\\$timeout})$0"},
		{"trigger": "CSMTPServerHost::FindConnection", "contents": "${1:CSMTPServerHost}::FindConnection(${2:\\$s})$0"},
		{"trigger": "CSMTPServerHost::GetSockets", "contents": "${1:CSMTPServerHost}::GetSockets()$0"},
		{"trigger": "CSMTPServerHost::RemoveConnection", "contents": "${1:CSMTPServerHost}::RemoveConnection(${2:\\$id})$0"},
		{"trigger": "CSMTPServerHost::Start", "contents": "${1:CSMTPServerHost}::Start()$0"},
		{"trigger": "CSMTPServerHost::Stop", "contents": "${1:CSMTPServerHost}::Stop(${2:\\$num})$0"},
		{"trigger": "CSMTPServerHost::WriteToLog", "contents": "${1:CSMTPServerHost}::WriteToLog(${2:\\$txt}, ${2:\\$level})$0"},
		{"trigger": "CSMTPServerHost::_Stop", "contents": "${1:CSMTPServerHost}::_Stop()$0"},
		{"trigger": "_CMailBoxDBRes::Fetch", "contents": "${1:_CMailBoxDBRes}::Fetch()$0"},
		{"trigger": "_CMailBoxDBRes::_CMailBoxDBRes", "contents": "${1:_CMailBoxDBRes}::_CMailBoxDBRes(${2:\\$res})$0"},
		{"trigger": "_CMailLogDBRes::Fetch", "contents": "${1:_CMailLogDBRes}::Fetch()$0"},
		{"trigger": "_CMailLogDBRes::_CMailLogDBRes", "contents": "${1:_CMailLogDBRes}::_CMailLogDBRes(${2:\\$res})$0"},
		{"trigger": "CASNReader::GetSequence", "contents": "${1:CASNReader}::GetSequence()$0"},
		{"trigger": "CASNReader::GetValue", "contents": "${1:CASNReader}::GetValue()$0"},
		{"trigger": "CASNReader::Read", "contents": "${1:CASNReader}::Read(${2:&\\$buf})$0"},
		{"trigger": "CASNReader::ReadByte", "contents": "${1:CASNReader}::ReadByte(${2:&\\$buf})$0"},
		{"trigger": "CASNReader::ReadBytes", "contents": "${1:CASNReader}::ReadBytes(${2:&\\$buf}, ${2:\\$len})$0"},
		{"trigger": "CASNReader::ToInt", "contents": "${1:CASNReader}::ToInt(${2:\\$bin})$0"},
		{"trigger": "CASNReader::__construct", "contents": "${1:CASNReader}::__construct(${2:\\$value=''})$0"},
		{"trigger": "CAccess::AjaxRequest", "contents": "${1:CAccess}::AjaxRequest(${2:\\$arParams})$0"},
		{"trigger": "CAccess::CheckUserCodes", "contents": "${1:CAccess}::CheckUserCodes(${2:\\$provider}, ${2:\\$USER_ID})$0"},
		{"trigger": "CAccess::ClearStat", "contents": "${1:CAccess}::ClearStat(${2:\\$provider=false}, ${2:\\$USER_ID=false})$0"},
		{"trigger": "CAccess::Cmp", "contents": "${1:CAccess}::Cmp(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CAccess::CmpNames", "contents": "${1:CAccess}::CmpNames(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CAccess::DeleteByUser", "contents": "${1:CAccess}::DeleteByUser(${2:\\$USER_ID})$0"},
		{"trigger": "CAccess::GetFormHtml", "contents": "${1:CAccess}::GetFormHtml(${2:\\$arParams=false})$0"},
		{"trigger": "CAccess::GetLastRecentlyUsed", "contents": "${1:CAccess}::GetLastRecentlyUsed(${2:\\$provider})$0"},
		{"trigger": "CAccess::GetNames", "contents": "${1:CAccess}::GetNames(${2:\\$arCodes}, ${2:\\$bSort=false})$0"},
		{"trigger": "CAccess::GetProviderNames", "contents": "${1:CAccess}::GetProviderNames()$0"},
		{"trigger": "CAccess::GetProviders", "contents": "${1:CAccess}::GetProviders()$0"},
		{"trigger": "CAccess::GetUserCodes", "contents": "${1:CAccess}::GetUserCodes(${2:\\$USER_ID}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CAccess::OnUserDelete", "contents": "${1:CAccess}::OnUserDelete(${2:\\$ID})$0"},
		{"trigger": "CAccess::SaveLastRecentlyUsed", "contents": "${1:CAccess}::SaveLastRecentlyUsed(${2:\\$arLRU})$0"},
		{"trigger": "CAccess::UpdateCodes", "contents": "${1:CAccess}::UpdateCodes(${2:\\$arParams=false})$0"},
		{"trigger": "CAccess::UpdateStat", "contents": "${1:CAccess}::UpdateStat(${2:\\$provider}, ${2:\\$USER_ID})$0"},
		{"trigger": "CAccess::__construct", "contents": "${1:CAccess}::__construct(${2:\\$arParams=false})$0"},
		{"trigger": "CAdminCalendar::Calendar", "contents": "${1:CAdminCalendar}::Calendar(${2:\\$sFieldName}, ${2:\\$sFromName=''}, ${4:\\$sToName=''}, ${4:\\$bTime=false})$0"},
		{"trigger": "CAdminChain::AddItem", "contents": "${1:CAdminChain}::AddItem(${2:\\$item})$0"},
		{"trigger": "CAdminContextMenu::BeginBar", "contents": "${1:CAdminContextMenu}::BeginBar()$0"},
		{"trigger": "CAdminContextMenu::Show", "contents": "${1:CAdminContextMenu}::Show()$0"},
		{"trigger": "CAdminException::AddMessage", "contents": "${1:CAdminException}::AddMessage(${2:\\$message})$0"},
		{"trigger": "CAdminException::CAdminException", "contents": "${1:CAdminException}::CAdminException(${2:\\$messages}, ${2:\\$id = false})$0"},
		{"trigger": "CAdminException::GetMessages", "contents": "${1:CAdminException}::GetMessages()$0"},
		{"trigger": "CAdminFileDialog::AppendLangMess", "contents": "${1:CAdminFileDialog}::AppendLangMess()$0"},
		{"trigger": "CAdminFileDialog::AttachJSScripts", "contents": "${1:CAdminFileDialog}::AttachJSScripts()$0"},
		{"trigger": "CAdminFileDialog::BuildDialog", "contents": "${1:CAdminFileDialog}::BuildDialog(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::CheckFileName", "contents": "${1:CAdminFileDialog}::CheckFileName(${2:\\$str})$0"},
		{"trigger": "CAdminFileDialog::EchoActionStatus", "contents": "${1:CAdminFileDialog}::EchoActionStatus(${2:\\$strWarning = ''})$0"},
		{"trigger": "CAdminFileDialog::GetItems", "contents": "${1:CAdminFileDialog}::GetItems(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::GetItemsRecursively", "contents": "${1:CAdminFileDialog}::GetItemsRecursively(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::GetMenuTypes", "contents": "${1:CAdminFileDialog}::GetMenuTypes(${2:\\$site}, ${2:\\$path}, ${4:\\$bEchoResult = false})$0"},
		{"trigger": "CAdminFileDialog::LoadItems", "contents": "${1:CAdminFileDialog}::LoadItems(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::MakeNewDir", "contents": "${1:CAdminFileDialog}::MakeNewDir(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::PreviewFlash", "contents": "${1:CAdminFileDialog}::PreviewFlash(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::Remove", "contents": "${1:CAdminFileDialog}::Remove(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::Rename", "contents": "${1:CAdminFileDialog}::Rename(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::SetUserConfig", "contents": "${1:CAdminFileDialog}::SetUserConfig(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::ShowJS", "contents": "${1:CAdminFileDialog}::ShowJS(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::ShowScript", "contents": "${1:CAdminFileDialog}::ShowScript(${2:\\$arConfig})$0"},
		{"trigger": "CAdminFileDialog::ShowUploadForm", "contents": "${1:CAdminFileDialog}::ShowUploadForm(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::Start", "contents": "${1:CAdminFileDialog}::Start(${2:\\$Params})$0"},
		{"trigger": "CAdminFileDialog::UploadFile", "contents": "${1:CAdminFileDialog}::UploadFile(${2:\\$Params})$0"},
		{"trigger": "CAdminFilter::Begin", "contents": "${1:CAdminFilter}::Begin()$0"},
		{"trigger": "CAdminFilter::UnEscape", "contents": "${1:CAdminFilter}::UnEscape(${2:\\$aFilter})$0"},
		{"trigger": "CAdminForm::AddFileField", "contents": "${1:CAdminForm}::AddFileField(${2:\\$id}, ${2:\\$label}, ${4:\\$value}, ${4:\\$arParams=array()}, ${6:\\$required=false})$0"},
		{"trigger": "CAdminForm::AddSection", "contents": "${1:CAdminForm}::AddSection(${2:\\$id}, ${2:\\$content}, ${4:\\$required = false})$0"},
		{"trigger": "CAdminForm::AddTextField", "contents": "${1:CAdminForm}::AddTextField(${2:\\$id}, ${2:\\$label}, ${4:\\$value}, ${4:\\$arParams=array()}, ${6:\\$required=false})$0"},
		{"trigger": "CAdminForm::Begin", "contents": "${1:CAdminForm}::Begin(${2:\\$arParams = array()})$0"},
		{"trigger": "CAdminForm::BeginCustomField", "contents": "${1:CAdminForm}::BeginCustomField(${2:\\$id}, ${2:\\$content}, ${4:\\$required = false})$0"},
		{"trigger": "CAdminForm::BeginNextFormTab", "contents": "${1:CAdminForm}::BeginNextFormTab()$0"},
		{"trigger": "CAdminForm::BeginPrologContent", "contents": "${1:CAdminForm}::BeginPrologContent()$0"},
		{"trigger": "CAdminForm::CAdminForm", "contents": "${1:CAdminForm}::CAdminForm(${2:\\$name}, ${2:\\$tabs}, ${4:\\$bCanExpand = true}, ${4:\\$bDenyAutosave = false})$0"},
		{"trigger": "CAdminForm::EndEpilogContent", "contents": "${1:CAdminForm}::EndEpilogContent()$0"},
		{"trigger": "CAdminForm::EndPrologContent", "contents": "${1:CAdminForm}::EndPrologContent()$0"},
		{"trigger": "CAdminForm::GetFieldValue", "contents": "${1:CAdminForm}::GetFieldValue(${2:\\$field_name})$0"},
		{"trigger": "CAdminForm::GetHTMLFieldValue", "contents": "${1:CAdminForm}::GetHTMLFieldValue(${2:\\$field_name})$0"},
		{"trigger": "CAdminForm::SetFieldValue", "contents": "${1:CAdminForm}::SetFieldValue(${2:\\$field_name}, ${2:\\$bVarsFromForm}, ${4:$DB_record}, ${4:\\$default_value = false})$0"},
		{"trigger": "CAdminForm::Show", "contents": "${1:CAdminForm}::Show()$0"},
		{"trigger": "CAdminForm::ShowSettings", "contents": "${1:CAdminForm}::ShowSettings()$0"},
		{"trigger": "CAdminList::ActionAjaxReload", "contents": "${1:CAdminList}::ActionAjaxReload(${2:\\$url})$0"},
		{"trigger": "CAdminList::ActionDoGroup", "contents": "${1:CAdminList}::ActionDoGroup(${2:\\$id}, ${2:\\$action_id}, ${4:\\$add_params=''})$0"},
		{"trigger": "CAdminList::ActionRedirect", "contents": "${1:CAdminList}::ActionRedirect(${2:\\$url})$0"},
		{"trigger": "CAdminList::AddFooter", "contents": "${1:CAdminList}::AddFooter(${2:\\$aFooter})$0"},
		{"trigger": "CAdminList::AddGroupActionTable", "contents": "${1:CAdminList}::AddGroupActionTable(${2:\\$arActions}, ${2:\\$arParams=array()})$0"},
		{"trigger": "CAdminList::AddHeaders", "contents": "${1:CAdminList}::AddHeaders(${2:\\$aParams})$0"},
		{"trigger": "CAdminList::AddUpdateError", "contents": "${1:CAdminList}::AddUpdateError(${2:\\$strError}, ${2:\\$id = false})$0"},
		{"trigger": "CAdminList::BeginCustomContent", "contents": "${1:CAdminList}::BeginCustomContent()$0"},
		{"trigger": "CAdminList::BeginEpilogContent", "contents": "${1:CAdminList}::BeginEpilogContent()$0"},
		{"trigger": "CAdminList::CreateChain", "contents": "${1:CAdminList}::CreateChain()$0"},
		{"trigger": "CAdminList::Display", "contents": "${1:CAdminList}::Display()$0"},
		{"trigger": "CAdminList::DisplayExcel", "contents": "${1:CAdminList}::DisplayExcel()$0"},
		{"trigger": "CAdminList::EditAction", "contents": "${1:CAdminList}::EditAction()$0"},
		{"trigger": "CAdminList::EndCustomContent", "contents": "${1:CAdminList}::EndCustomContent()$0"},
		{"trigger": "CAdminList::InitFilter", "contents": "${1:CAdminList}::InitFilter(${2:\\$arFilterFields})$0"},
		{"trigger": "CAdminList::IsUpdated", "contents": "${1:CAdminList}::IsUpdated(${2:\\$ID})$0"},
		{"trigger": "CAdminList::NavText", "contents": "${1:CAdminList}::NavText(${2:\\$sNavText})$0"},
		{"trigger": "CAdminListRow::AddCalendarField", "contents": "${1:CAdminListRow}::AddCalendarField(${2:\\$id}, ${2:\\$arAttributes = array()})$0"},
		{"trigger": "CAdminListRow::AddEditField", "contents": "${1:CAdminListRow}::AddEditField(${2:\\$id}, ${2:\\$sHTML})$0"},
		{"trigger": "CAdminListRow::AddField", "contents": "${1:CAdminListRow}::AddField(${2:\\$id}, ${2:\\$text}, ${4:\\$edit=false})$0"},
		{"trigger": "CAdminListRow::CAdminListRow", "contents": "${1:CAdminListRow}::CAdminListRow(${2:&\\$aHeaders}, ${2:\\$table_id})$0"},
		{"trigger": "CAdminListRow::SetFeatures", "contents": "${1:CAdminListRow}::SetFeatures(${2:\\$aFeatures})$0"},
		{"trigger": "CAdminListRow::__AttrGen", "contents": "${1:CAdminListRow}::__AttrGen(${2:\\$attr})$0"},
		{"trigger": "CAdminMainChain::Show", "contents": "${1:CAdminMainChain}::Show()$0"},
		{"trigger": "CAdminMenu::GetOpenedSections", "contents": "${1:CAdminMenu}::GetOpenedSections()$0"},
		{"trigger": "CAdminMenu::IsSectionActive", "contents": "${1:CAdminMenu}::IsSectionActive(${2:\\$section})$0"},
		{"trigger": "CAdminMenu::ShowIcons", "contents": "${1:CAdminMenu}::ShowIcons(${2:\\$aMenu})$0"},
		{"trigger": "CAdminMenu::ShowList", "contents": "${1:CAdminMenu}::ShowList(${2:\\$aMenu})$0"},
		{"trigger": "CAdminMenu::ShowSubmenu", "contents": "${1:CAdminMenu}::ShowSubmenu(${2:\\$menu_id}, ${2:\\$mode='menu'})$0"},
		{"trigger": "CAdminMenu::_IncludeMenu", "contents": "${1:CAdminMenu}::_IncludeMenu(${2:\\$fname})$0"},
		{"trigger": "CAdminMessage::CAdminMessage", "contents": "${1:CAdminMessage}::CAdminMessage(${2:\\$message}, ${2:\\$exception=false})$0"},
		{"trigger": "CAdminMessage::Show", "contents": "${1:CAdminMessage}::Show()$0"},
		{"trigger": "CAdminMessage::ShowMessage", "contents": "${1:CAdminMessage}::ShowMessage(${2:\\$message})$0"},
		{"trigger": "CAdminMessage::ShowOldStyleError", "contents": "${1:CAdminMessage}::ShowOldStyleError(${2:\\$message})$0"},
		{"trigger": "CAdminNotify::CheckFields", "contents": "${1:CAdminNotify}::CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CAdminNotify::Delete", "contents": "${1:CAdminNotify}::Delete(${2:\\$ID})$0"},
		{"trigger": "CAdminNotify::DeleteByModule", "contents": "${1:CAdminNotify}::DeleteByModule(${2:\\$moduleId})$0"},
		{"trigger": "CAdminNotify::DeleteByTag", "contents": "${1:CAdminNotify}::DeleteByTag(${2:\\$tagId})$0"},
		{"trigger": "CAdminNotify::GetHtml", "contents": "${1:CAdminNotify}::GetHtml()$0"},
		{"trigger": "CAdminNotify::GetList", "contents": "${1:CAdminNotify}::GetList(${2:\\$arSort=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CAdminNotify::err_mess", "contents": "${1:CAdminNotify}::err_mess()$0"},
		{"trigger": "CAdminPage::CAdminPage", "contents": "${1:CAdminPage}::CAdminPage()$0"},
		{"trigger": "CAdminPage::ShowCSS", "contents": "${1:CAdminPage}::ShowCSS()$0"},
		{"trigger": "CAdminPage::ShowSectionIndex", "contents": "${1:CAdminPage}::ShowSectionIndex(${2:\\$menu_id}, ${2:\\$module_id=false}, ${4:\\$mode=false})$0"},
		{"trigger": "CAdminPopup::CAdminPopup", "contents": "${1:CAdminPopup}::CAdminPopup(${2:\\$name}, ${2:\\$id}, ${4:\\$items=false}, ${4:\\$params=false})$0"},
		{"trigger": "CAdminPopup::Show", "contents": "${1:CAdminPopup}::Show(${2:\\$bReturnValue=false})$0"},
		{"trigger": "CAdminResult::CAdminResult", "contents": "${1:CAdminResult}::CAdminResult(${2:\\$res}, ${2:\\$table_id})$0"},
		{"trigger": "CAdminResult::NavStart", "contents": "${1:CAdminResult}::NavStart(${2:\\$nPageSize=20}, ${2:\\$bShowAll=true}, ${4:\\$iNumPage=false})$0"},
		{"trigger": "CAdminTabControl::ActiveTabParam", "contents": "${1:CAdminTabControl}::ActiveTabParam()$0"},
		{"trigger": "CAdminTabControl::AddTabs", "contents": "${1:CAdminTabControl}::AddTabs(${2:&\\$customTabber})$0"},
		{"trigger": "CAdminTabControl::BeginNextTab", "contents": "${1:CAdminTabControl}::BeginNextTab()$0"},
		{"trigger": "CAdminTabControl::EndTab", "contents": "${1:CAdminTabControl}::EndTab()$0"},
		{"trigger": "CAdminTabControl::ShowWarnings", "contents": "${1:CAdminTabControl}::ShowWarnings(${2:\\$form}, ${2:\\$messages}, ${4:\\$aFields=false})$0"},
		{"trigger": "CAdminTabEngine::CAdminTabEngine", "contents": "${1:CAdminTabEngine}::CAdminTabEngine(${2:\\$name}, ${2:\\$arArgs = array()})$0"},
		{"trigger": "CAdminTabEngine::GetTabs", "contents": "${1:CAdminTabEngine}::GetTabs()$0"},
		{"trigger": "CAdminTheme::GetCurrentTheme", "contents": "${1:CAdminTheme}::GetCurrentTheme()$0"},
		{"trigger": "CAdminTheme::GetList", "contents": "${1:CAdminTheme}::GetList()$0"},
		{"trigger": "CAdminViewTabControl::Begin", "contents": "${1:CAdminViewTabControl}::Begin()$0"},
		{"trigger": "CAdminViewTabControl::EndTab", "contents": "${1:CAdminViewTabControl}::EndTab()$0"},
		{"trigger": "CAgent::AddAgent", "contents": "${1:CAgent}::AddAgent(${2:N/A})$0"},
		{"trigger": "CAgent::CheckAgents", "contents": "${1:CAgent}::CheckAgents()$0"},
		{"trigger": "CAgent::CheckFields", "contents": "${1:CAgent}::CheckFields(${2:&\\$arFields}, ${2:\\$ign_name = false})$0"},
		{"trigger": "CAgent::Delete", "contents": "${1:CAgent}::Delete(${2:\\$id})$0"},
		{"trigger": "CAgent::ExecuteAgents", "contents": "${1:CAgent}::ExecuteAgents(${2:\\$str_crontab})$0"},
		{"trigger": "CAgent::GetById", "contents": "${1:CAgent}::GetById(${2:\\$ID})$0"},
		{"trigger": "CAgent::GetList", "contents": "${1:CAgent}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CAgent::RemoveAgent", "contents": "${1:CAgent}::RemoveAgent(${2:\\$name}, ${2:\\$module=''}, ${4:\\$user_id=false})$0"},
		{"trigger": "CAgent::RemoveModuleAgents", "contents": "${1:CAgent}::RemoveModuleAgents(${2:\\$module})$0"},
		{"trigger": "CAgent::Update", "contents": "${1:CAgent}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CAjax::AddSessionParam", "contents": "${1:CAjax}::AddSessionParam(${2:\\$url}, ${2:\\$ajax_id = false})$0"},
		{"trigger": "CAjax::GetComponentID", "contents": "${1:CAjax}::GetComponentID(${2:\\$componentName}, ${2:\\$componentTemplate}, ${4:\\$additionalID})$0"},
		{"trigger": "CAjax::GetFormEventValue", "contents": "${1:CAjax}::GetFormEventValue(${2:\\$container_id}, ${2:\\$bReplace = true}, ${4:\\$bShadow = true}, ${4:\\$event_delimiter = '\\''})$0"},
		{"trigger": "CAjax::GetLinkEx", "contents": "${1:CAjax}::GetLinkEx(${2:\\$real_url}, ${2:\\$public_url}, ${4:\\$text}, ${4:\\$container_id}, ${6:\\$additional = ''})$0"},
		{"trigger": "CAjax::GetSessionParam", "contents": "${1:CAjax}::GetSessionParam(${2:\\$ajax_id = false})$0"},
		{"trigger": "CAjax::decodeURI", "contents": "${1:CAjax}::decodeURI(${2:\\$str})$0"},
		{"trigger": "CApplicationException::GetID", "contents": "${1:CApplicationException}::GetID()$0"},
		{"trigger": "CApplicationException::GetString", "contents": "${1:CApplicationException}::GetString()$0"},
		{"trigger": "CArchiver::Add", "contents": "${1:CArchiver}::Add(${2:\\$vFileList}, ${2:\\$strAddPath = false}, ${4:\\$strRemovePath = false})$0"},
		{"trigger": "CArchiver::GetErrors", "contents": "${1:CArchiver}::GetErrors()$0"},
		{"trigger": "CArchiver::GetOptions", "contents": "${1:CArchiver}::GetOptions()$0"},
		{"trigger": "CArchiver::GetStartFile", "contents": "${1:CArchiver}::GetStartFile()$0"},
		{"trigger": "CArchiver::Pack", "contents": "${1:CArchiver}::Pack(${2:\\$arFileList}, ${2:\\$startFile = ''})$0"},
		{"trigger": "CArchiver::SetOptions", "contents": "${1:CArchiver}::SetOptions(${2:\\$arOptions})$0"},
		{"trigger": "CArchiver::Unpack", "contents": "${1:CArchiver}::Unpack(${2:\\$strPath})$0"},
		{"trigger": "CArchiver::__construct", "contents": "${1:CArchiver}::__construct(${2:\\$strArchiveName}, ${2:\\$bCompress = false}, ${4:\\$start_time = -1}, ${4:\\$max_exec_time = -1}, ${6:\\$pos = 0}, ${6:\\$stepped = false})$0"},
		{"trigger": "CArchiver::_addFile", "contents": "${1:CArchiver}::_addFile(${2:\\$strFilename}, ${2:&\\$arHeaders}, ${4:\\$strAddPath}, ${4:\\$strRemovePath})$0"},
		{"trigger": "CArchiver::_addFileList", "contents": "${1:CArchiver}::_addFileList(${2:\\$arFileList}, ${2:\\$strAddPath}, ${4:\\$strRemovePath})$0"},
		{"trigger": "CArchiver::_addString", "contents": "${1:CArchiver}::_addString(${2:\\$strFilename}, ${2:\\$strFileContent})$0"},
		{"trigger": "CArchiver::_cleanFile", "contents": "${1:CArchiver}::_cleanFile()$0"},
		{"trigger": "CArchiver::_close", "contents": "${1:CArchiver}::_close()$0"},
		{"trigger": "CArchiver::_dirCheck", "contents": "${1:CArchiver}::_dirCheck(${2:\\$p_dir})$0"},
		{"trigger": "CArchiver::_extractList", "contents": "${1:CArchiver}::_extractList(${2:\\$p_path}, ${2:&\\$p_list_detail}, ${4:\\$p_mode}, ${4:\\$p_file_list}, ${6:\\$p_remove_path})$0"},
		{"trigger": "CArchiver::_haveTime", "contents": "${1:CArchiver}::_haveTime()$0"},
		{"trigger": "CArchiver::_jumpBlock", "contents": "${1:CArchiver}::_jumpBlock(${2:\\$p_len = false})$0"},
		{"trigger": "CArchiver::_normalizePath", "contents": "${1:CArchiver}::_normalizePath(${2:\\$strPath})$0"},
		{"trigger": "CArchiver::_openAppend", "contents": "${1:CArchiver}::_openAppend()$0"},
		{"trigger": "CArchiver::_openAppendFast", "contents": "${1:CArchiver}::_openAppendFast()$0"},
		{"trigger": "CArchiver::_openRead", "contents": "${1:CArchiver}::_openRead()$0"},
		{"trigger": "CArchiver::_openReadWrite", "contents": "${1:CArchiver}::_openReadWrite()$0"},
		{"trigger": "CArchiver::_openWrite", "contents": "${1:CArchiver}::_openWrite()$0"},
		{"trigger": "CArchiver::_processFiles", "contents": "${1:CArchiver}::_processFiles(${2:\\$arFileList}, ${2:\\$strAddPath}, ${4:\\$strRemovePath}, ${4:\\$startFile = ''})$0"},
		{"trigger": "CArchiver::_readBlock", "contents": "${1:CArchiver}::_readBlock()$0"},
		{"trigger": "CArchiver::_readHeader", "contents": "${1:CArchiver}::_readHeader(${2:\\$v_binary_data}, ${2:&\\$v_header})$0"},
		{"trigger": "CArchiver::_readLongHeader", "contents": "${1:CArchiver}::_readLongHeader(${2:&\\$v_header})$0"},
		{"trigger": "CArchiver::_writeBlock", "contents": "${1:CArchiver}::_writeBlock(${2:\\$v_binary_data}, ${2:\\$iLen = false})$0"},
		{"trigger": "CArchiver::_writeFooter", "contents": "${1:CArchiver}::_writeFooter()$0"},
		{"trigger": "CArchiver::_writeHeader", "contents": "${1:CArchiver}::_writeHeader(${2:\\$strFilename}, ${2:\\$strFilename_stored})$0"},
		{"trigger": "CArchiver::_writeHeaderBlock", "contents": "${1:CArchiver}::_writeHeaderBlock(${2:\\$strFilename}, ${2:\\$iSize}, ${4:\\$p_mtime=0}, ${4:\\$p_perms=0}, ${6:\\$p_type=''}, ${6:\\$p_uid=0}, ${8:\\$p_gid=0})$0"},
		{"trigger": "CArchiver::_writeLongHeader", "contents": "${1:CArchiver}::_writeLongHeader(${2:\\$strFilename})$0"},
		{"trigger": "CArchiver::addFile", "contents": "${1:CArchiver}::addFile(${2:\\$strFilename}, ${2:\\$strAddPath}, ${4:\\$strRemovePath})$0"},
		{"trigger": "CArchiver::addString", "contents": "${1:CArchiver}::addString(${2:\\$strFilename}, ${2:\\$strFileContent})$0"},
		{"trigger": "CArchiver::extractContent", "contents": "${1:CArchiver}::extractContent()$0"},
		{"trigger": "CArchiver::extractFiles", "contents": "${1:CArchiver}::extractFiles(${2:\\$strPath}, ${2:\\$vFileList = false})$0"},
		{"trigger": "CArchiver::getFilePos", "contents": "${1:CArchiver}::getFilePos()$0"},
		{"trigger": "CAuthProvider::DeleteAll", "contents": "${1:CAuthProvider}::DeleteAll()$0"},
		{"trigger": "CAuthProvider::DeleteByUser", "contents": "${1:CAuthProvider}::DeleteByUser(${2:\\$USER_ID})$0"},
		{"trigger": "CAutoCheck::CheckBackup", "contents": "${1:CAutoCheck}::CheckBackup()$0"},
		{"trigger": "CAutoCheck::CheckCustomComponents", "contents": "${1:CAutoCheck}::CheckCustomComponents(${2:\\$arParams})$0"},
		{"trigger": "CAutoCheck::CheckDBPassword", "contents": "${1:CAutoCheck}::CheckDBPassword()$0"},
		{"trigger": "CAutoCheck::CheckErrorReport", "contents": "${1:CAutoCheck}::CheckErrorReport()$0"},
		{"trigger": "CAutoCheck::CheckKernel", "contents": "${1:CAutoCheck}::CheckKernel(${2:\\$arParams})$0"},
		{"trigger": "CAutoCheck::CheckPerfomance", "contents": "${1:CAutoCheck}::CheckPerfomance(${2:\\$arParams})$0"},
		{"trigger": "CAutoCheck::CheckQueryString", "contents": "${1:CAutoCheck}::CheckQueryString(${2:\\$arParams = array()})$0"},
		{"trigger": "CAutoCheck::CheckSecurity", "contents": "${1:CAutoCheck}::CheckSecurity(${2:\\$arParams})$0"},
		{"trigger": "CAutoCheck::CheckTemplates", "contents": "${1:CAutoCheck}::CheckTemplates(${2:\\$arParams})$0"},
		{"trigger": "CAutoCheck::IsCacheOn", "contents": "${1:CAutoCheck}::IsCacheOn()$0"},
		{"trigger": "CAutoCheck::KeyCheck", "contents": "${1:CAutoCheck}::KeyCheck()$0"},
		{"trigger": "CAutoSave::Allowed", "contents": "${1:CAutoSave}::Allowed()$0"},
		{"trigger": "CAutoSave::GetID", "contents": "${1:CAutoSave}::GetID()$0"},
		{"trigger": "CAutoSave::Init", "contents": "${1:CAutoSave}::Init(${2:\\$admin = true})$0"},
		{"trigger": "CAutoSave::Reset", "contents": "${1:CAutoSave}::Reset()$0"},
		{"trigger": "CAutoSave::Restore", "contents": "${1:CAutoSave}::Restore(${2:\\$arFields})$0"},
		{"trigger": "CAutoSave::Set", "contents": "${1:CAutoSave}::Set(${2:\\$data})$0"},
		{"trigger": "CAutoSave::_GetFormID", "contents": "${1:CAutoSave}::_GetFormID()$0"},
		{"trigger": "CAutoSave::_Restore", "contents": "${1:CAutoSave}::_Restore(${2:\\$arFields})$0"},
		{"trigger": "CAutoSave::__construct", "contents": "${1:CAutoSave}::__construct()$0"},
		{"trigger": "CAutoSave::checkRestore", "contents": "${1:CAutoSave}::checkRestore()$0"},
		{"trigger": "CBXAllShortUri::AddError", "contents": "${1:CBXAllShortUri}::AddError(${2:\\$error})$0"},
		{"trigger": "CBXAllShortUri::ClearErrors", "contents": "${1:CBXAllShortUri}::ClearErrors()$0"},
		{"trigger": "CBXAllShortUri::Crc32", "contents": "${1:CBXAllShortUri}::Crc32(${2:\\$str})$0"},
		{"trigger": "CBXAllShortUri::Delete", "contents": "${1:CBXAllShortUri}::Delete(${2:\\$id})$0"},
		{"trigger": "CBXAllShortUri::GenerateShortUri", "contents": "${1:CBXAllShortUri}::GenerateShortUri()$0"},
		{"trigger": "CBXAllShortUri::GetErrors", "contents": "${1:CBXAllShortUri}::GetErrors()$0"},
		{"trigger": "CBXAllShortUri::GetHttpStatusCodeText", "contents": "${1:CBXAllShortUri}::GetHttpStatusCodeText(${2:\\$code})$0"},
		{"trigger": "CBXAllShortUri::GetShortUri", "contents": "${1:CBXAllShortUri}::GetShortUri(${2:\\$uri})$0"},
		{"trigger": "CBXAllShortUri::GetUri", "contents": "${1:CBXAllShortUri}::GetUri(${2:\\$shortUri})$0"},
		{"trigger": "CBXAllShortUri::ParseFields", "contents": "${1:CBXAllShortUri}::ParseFields(${2:&\\$arFields}, ${2:\\$id = 0})$0"},
		{"trigger": "CBXAllShortUri::SelectBox", "contents": "${1:CBXAllShortUri}::SelectBox(${2:\\$fieldName}, ${2:\\$value}, ${4:\\$defaultValue = ''}, ${4:\\$field = 'class=\\'typeselect\\''})$0"},
		{"trigger": "CBXAllShortUri::SetLastUsed", "contents": "${1:CBXAllShortUri}::SetLastUsed(${2:\\$id})$0"},
		{"trigger": "CBXAllShortUri::Update", "contents": "${1:CBXAllShortUri}::Update(${2:\\$id}, ${2:\\$arFields})$0"},
		{"trigger": "CBXArchive::DetectTypeByFilename", "contents": "${1:CBXArchive}::DetectTypeByFilename(${2:\\$filename})$0"},
		{"trigger": "CBXArchive::GetArchive", "contents": "${1:CBXArchive}::GetArchive(${2:\\$strArcName}, ${2:\\$strType = ''})$0"},
		{"trigger": "CBXArchive::GetArchiveExtensions", "contents": "${1:CBXArchive}::GetArchiveExtensions()$0"},
		{"trigger": "CBXArchive::GetAvailableFormats", "contents": "${1:CBXArchive}::GetAvailableFormats()$0"},
		{"trigger": "CBXArchive::HasAccess", "contents": "${1:CBXArchive}::HasAccess(${2:\\$strFilename}, ${2:\\$isFile})$0"},
		{"trigger": "CBXArchive::IsArchive", "contents": "${1:CBXArchive}::IsArchive(${2:\\$strFilename})$0"},
		{"trigger": "CBXArchive::__construct", "contents": "${1:CBXArchive}::__construct()$0"},
		{"trigger": "CBXPunycode::Adapt", "contents": "${1:CBXPunycode}::Adapt(${2:\\$delta}, ${2:\\$numPoints}, ${4:\\$isFirst})$0"},
		{"trigger": "CBXPunycode::AddError", "contents": "${1:CBXPunycode}::AddError(${2:\\$error}, ${2:\\$errorCode = null})$0"},
		{"trigger": "CBXPunycode::ByteLength", "contents": "${1:CBXPunycode}::ByteLength(${2:\\$string})$0"},
		{"trigger": "CBXPunycode::CheckASCII", "contents": "${1:CBXPunycode}::CheckASCII(${2:\\$domainName})$0"},
		{"trigger": "CBXPunycode::ClearErrors", "contents": "${1:CBXPunycode}::ClearErrors()$0"},
		{"trigger": "CBXPunycode::Combine", "contents": "${1:CBXPunycode}::Combine(${2:\\$input})$0"},
		{"trigger": "CBXPunycode::ComposeKorean", "contents": "${1:CBXPunycode}::ComposeKorean(${2:\\$input})$0"},
		{"trigger": "CBXPunycode::Decode", "contents": "${1:CBXPunycode}::Decode(${2:\\$domainName})$0"},
		{"trigger": "CBXPunycode::DecomposeKorean", "contents": "${1:CBXPunycode}::DecomposeKorean(${2:\\$char})$0"},
		{"trigger": "CBXPunycode::DoDecodeUcs4", "contents": "${1:CBXPunycode}::DoDecodeUcs4(${2:\\$input})$0"},
		{"trigger": "CBXPunycode::DoEncodeUcs4", "contents": "${1:CBXPunycode}::DoEncodeUcs4(${2:\\$input})$0"},
		{"trigger": "CBXPunycode::Encode", "contents": "${1:CBXPunycode}::Encode(${2:\\$domainName})$0"},
		{"trigger": "CBXPunycode::ExplodeDomainName", "contents": "${1:CBXPunycode}::ExplodeDomainName(${2:\\$domainNameUcs4})$0"},
		{"trigger": "CBXPunycode::GetConverter", "contents": "${1:CBXPunycode}::GetConverter()$0"},
		{"trigger": "CBXPunycode::GetErrors", "contents": "${1:CBXPunycode}::GetErrors()$0"},
		{"trigger": "CBXPunycode::ImplodeDomainName", "contents": "${1:CBXPunycode}::ImplodeDomainName(${2:\\$arDomainNameUcs4})$0"},
		{"trigger": "CBXPunycode::IsEncoded", "contents": "${1:CBXPunycode}::IsEncoded(${2:\\$domainName})$0"},
		{"trigger": "CBXPunycode::NamePrepUcs4", "contents": "${1:CBXPunycode}::NamePrepUcs4(${2:\\$input})$0"},
		{"trigger": "CBXPunycode::ToASCII", "contents": "${1:CBXPunycode}::ToASCII(${2:\\$domainName}, ${2:&\\$arErrors})$0"},
		{"trigger": "CBXPunycode::ToUnicode", "contents": "${1:CBXPunycode}::ToUnicode(${2:\\$domainName}, ${2:&\\$arErrors})$0"},
		{"trigger": "CBXPunycode::Ucs4ToUtf8", "contents": "${1:CBXPunycode}::Ucs4ToUtf8(${2:\\$input})$0"},
		{"trigger": "CBXPunycode::Utf8ToUcs4", "contents": "${1:CBXPunycode}::Utf8ToUcs4(${2:\\$input})$0"},
		{"trigger": "CBXPunycode::__construct", "contents": "${1:CBXPunycode}::__construct(${2:\\$encoding = null})$0"},
		{"trigger": "CBXSanitizer::AddTags", "contents": "${1:CBXSanitizer}::AddTags(${2:\\$arTags})$0"},
		{"trigger": "CBXSanitizer::ApplyHtmlSpecChars", "contents": "${1:CBXSanitizer}::ApplyHtmlSpecChars(${2:\\$bApply=true})$0"},
		{"trigger": "CBXSanitizer::CleanTable", "contents": "${1:CBXSanitizer}::CleanTable(${2:&\\$seg,&\\$openTagsStack,\\$segIndex,\\$delTextBetweenTags=true})$0"},
		{"trigger": "CBXSanitizer::Decode", "contents": "${1:CBXSanitizer}::Decode(${2:\\$str})$0"},
		{"trigger": "CBXSanitizer::DelAllTags", "contents": "${1:CBXSanitizer}::DelAllTags()$0"},
		{"trigger": "CBXSanitizer::DelTags", "contents": "${1:CBXSanitizer}::DelTags(${2:\\$arTagNames})$0"},
		{"trigger": "CBXSanitizer::DeleteSanitizedTags", "contents": "${1:CBXSanitizer}::DeleteSanitizedTags(${2:\\$bApply=true})$0"},
		{"trigger": "CBXSanitizer::GetTags", "contents": "${1:CBXSanitizer}::GetTags()$0"},
		{"trigger": "CBXSanitizer::IsValidAttr", "contents": "${1:CBXSanitizer}::IsValidAttr(${2:&\\$arAttr})$0"},
		{"trigger": "CBXSanitizer::Sanitize", "contents": "${1:CBXSanitizer}::Sanitize(${2:\\$html}, ${2:\\$secLevel='HIGH'}, ${4:\\$htmlspecialchars=true}, ${4:\\$delTags=true})$0"},
		{"trigger": "CBXSanitizer::SanitizeHtml", "contents": "${1:CBXSanitizer}::SanitizeHtml(${2:\\$html})$0"},
		{"trigger": "CBXSanitizer::SetLevel", "contents": "${1:CBXSanitizer}::SetLevel(${2:\\$secLevel})$0"},
		{"trigger": "CBXSanitizer::SetTags", "contents": "${1:CBXSanitizer}::SetTags(${2:\\$arTags})$0"},
		{"trigger": "CBXSanitizer::UpdateTags", "contents": "${1:CBXSanitizer}::UpdateTags(${2:\\$arTags})$0"},
		{"trigger": "CBXSanitizer::__construct", "contents": "${1:CBXSanitizer}::__construct()$0"},
		{"trigger": "CBXSanitizer::_decode", "contents": "${1:CBXSanitizer}::_decode(${2:\\$str})$0"},
		{"trigger": "CBXSanitizer::_decode_cb", "contents": "${1:CBXSanitizer}::_decode_cb(${2:\\$in})$0"},
		{"trigger": "CBXSanitizer::_decode_cb_hex", "contents": "${1:CBXSanitizer}::_decode_cb_hex(${2:\\$in})$0"},
		{"trigger": "CBXShortUri::Add", "contents": "${1:CBXShortUri}::Add(${2:\\$arFields})$0"},
		{"trigger": "CBXShortUri::GetList", "contents": "${1:CBXShortUri}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arNavStartParams = false})$0"},
		{"trigger": "CBXVirtualDirectory::Create", "contents": "${1:CBXVirtualDirectory}::Create()$0"},
		{"trigger": "CBXVirtualDirectory::GetChildren", "contents": "${1:CBXVirtualDirectory}::GetChildren()$0"},
		{"trigger": "CBXVirtualDirectory::IsDirectory", "contents": "${1:CBXVirtualDirectory}::IsDirectory()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::AddError", "contents": "${1:CBXVirtualDirectoryFileSystem}::AddError(${2:\\$error}, ${2:\\$errorCode = ''})$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::ClearErrors", "contents": "${1:CBXVirtualDirectoryFileSystem}::ClearErrors()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::Create", "contents": "${1:CBXVirtualDirectoryFileSystem}::Create()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::GetChildren", "contents": "${1:CBXVirtualDirectoryFileSystem}::GetChildren()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::GetErrors", "contents": "${1:CBXVirtualDirectoryFileSystem}::GetErrors()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::GetLastAccessTime", "contents": "${1:CBXVirtualDirectoryFileSystem}::GetLastAccessTime()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::GetModificationTime", "contents": "${1:CBXVirtualDirectoryFileSystem}::GetModificationTime()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::GetPathWithNameEncoded", "contents": "${1:CBXVirtualDirectoryFileSystem}::GetPathWithNameEncoded()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::GetPermissions", "contents": "${1:CBXVirtualDirectoryFileSystem}::GetPermissions()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::IsExists", "contents": "${1:CBXVirtualDirectoryFileSystem}::IsExists()$0"},
		{"trigger": "CBXVirtualDirectoryFileSystem::MarkWritable", "contents": "${1:CBXVirtualDirectoryFileSystem}::MarkWritable()$0"},
		{"trigger": "CBXVirtualFile::GetContents", "contents": "${1:CBXVirtualFile}::GetContents()$0"},
		{"trigger": "CBXVirtualFile::GetExtension", "contents": "${1:CBXVirtualFile}::GetExtension()$0"},
		{"trigger": "CBXVirtualFile::GetFileSize", "contents": "${1:CBXVirtualFile}::GetFileSize()$0"},
		{"trigger": "CBXVirtualFile::GetType", "contents": "${1:CBXVirtualFile}::GetType()$0"},
		{"trigger": "CBXVirtualFile::IsDirectory", "contents": "${1:CBXVirtualFile}::IsDirectory()$0"},
		{"trigger": "CBXVirtualFile::IsReadable", "contents": "${1:CBXVirtualFile}::IsReadable()$0"},
		{"trigger": "CBXVirtualFile::IsWritable", "contents": "${1:CBXVirtualFile}::IsWritable()$0"},
		{"trigger": "CBXVirtualFile::Open", "contents": "${1:CBXVirtualFile}::Open(${2:\\$mode})$0"},
		{"trigger": "CBXVirtualFile::PutContents", "contents": "${1:CBXVirtualFile}::PutContents(${2:\\$data})$0"},
		{"trigger": "CBXVirtualFile::ReadFile", "contents": "${1:CBXVirtualFile}::ReadFile()$0"},
		{"trigger": "CBXVirtualFileBase::GetLastAccessTime", "contents": "${1:CBXVirtualFileBase}::GetLastAccessTime()$0"},
		{"trigger": "CBXVirtualFileBase::GetModificationTime", "contents": "${1:CBXVirtualFileBase}::GetModificationTime()$0"},
		{"trigger": "CBXVirtualFileBase::GetName", "contents": "${1:CBXVirtualFileBase}::GetName()$0"},
		{"trigger": "CBXVirtualFileBase::GetPath", "contents": "${1:CBXVirtualFileBase}::GetPath()$0"},
		{"trigger": "CBXVirtualFileBase::GetPathWithName", "contents": "${1:CBXVirtualFileBase}::GetPathWithName()$0"},
		{"trigger": "CBXVirtualFileBase::GetPermissions", "contents": "${1:CBXVirtualFileBase}::GetPermissions()$0"},
		{"trigger": "CBXVirtualFileBase::IsDirectory", "contents": "${1:CBXVirtualFileBase}::IsDirectory()$0"},
		{"trigger": "CBXVirtualFileBase::IsExists", "contents": "${1:CBXVirtualFileBase}::IsExists()$0"},
		{"trigger": "CBXVirtualFileBase::MarkWritable", "contents": "${1:CBXVirtualFileBase}::MarkWritable()$0"},
		{"trigger": "CBXVirtualFileBase::__construct", "contents": "${1:CBXVirtualFileBase}::__construct(${2:\\$path})$0"},
		{"trigger": "CBXVirtualFileFileSystem::AddError", "contents": "${1:CBXVirtualFileFileSystem}::AddError(${2:\\$error}, ${2:\\$errorCode = ''})$0"},
		{"trigger": "CBXVirtualFileFileSystem::ClearErrors", "contents": "${1:CBXVirtualFileFileSystem}::ClearErrors()$0"},
		{"trigger": "CBXVirtualFileFileSystem::GetContents", "contents": "${1:CBXVirtualFileFileSystem}::GetContents()$0"},
		{"trigger": "CBXVirtualFileFileSystem::GetErrors", "contents": "${1:CBXVirtualFileFileSystem}::GetErrors()$0"},
		{"trigger": "CBXVirtualFileFileSystem::GetFileSize", "contents": "${1:CBXVirtualFileFileSystem}::GetFileSize()$0"},
		{"trigger": "CBXVirtualFileFileSystem::GetLastAccessTime", "contents": "${1:CBXVirtualFileFileSystem}::GetLastAccessTime()$0"},
		{"trigger": "CBXVirtualFileFileSystem::GetModificationTime", "contents": "${1:CBXVirtualFileFileSystem}::GetModificationTime()$0"},
		{"trigger": "CBXVirtualFileFileSystem::GetPathWithNameEncoded", "contents": "${1:CBXVirtualFileFileSystem}::GetPathWithNameEncoded()$0"},
		{"trigger": "CBXVirtualFileFileSystem::GetPermissions", "contents": "${1:CBXVirtualFileFileSystem}::GetPermissions()$0"},
		{"trigger": "CBXVirtualFileFileSystem::IsExists", "contents": "${1:CBXVirtualFileFileSystem}::IsExists()$0"},
		{"trigger": "CBXVirtualFileFileSystem::IsReadable", "contents": "${1:CBXVirtualFileFileSystem}::IsReadable()$0"},
		{"trigger": "CBXVirtualFileFileSystem::IsWritable", "contents": "${1:CBXVirtualFileFileSystem}::IsWritable()$0"},
		{"trigger": "CBXVirtualFileFileSystem::MarkWritable", "contents": "${1:CBXVirtualFileFileSystem}::MarkWritable()$0"},
		{"trigger": "CBXVirtualFileFileSystem::Open", "contents": "${1:CBXVirtualFileFileSystem}::Open(${2:\\$mode})$0"},
		{"trigger": "CBXVirtualFileFileSystem::PutContents", "contents": "${1:CBXVirtualFileFileSystem}::PutContents(${2:\\$data})$0"},
		{"trigger": "CBXVirtualFileFileSystem::ReadFile", "contents": "${1:CBXVirtualFileFileSystem}::ReadFile()$0"},
		{"trigger": "CBXVirtualIo::ClearCache", "contents": "${1:CBXVirtualIo}::ClearCache()$0"},
		{"trigger": "CBXVirtualIo::CombinePath", "contents": "${1:CBXVirtualIo}::CombinePath()$0"},
		{"trigger": "CBXVirtualIo::Copy", "contents": "${1:CBXVirtualIo}::Copy(${2:\\$source}, ${2:\\$target}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "CBXVirtualIo::CreateDirectory", "contents": "${1:CBXVirtualIo}::CreateDirectory(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::Delete", "contents": "${1:CBXVirtualIo}::Delete(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::DirectoryExists", "contents": "${1:CBXVirtualIo}::DirectoryExists(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::ExtractNameFromPath", "contents": "${1:CBXVirtualIo}::ExtractNameFromPath(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::ExtractPathFromPath", "contents": "${1:CBXVirtualIo}::ExtractPathFromPath(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::FileExists", "contents": "${1:CBXVirtualIo}::FileExists(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::GetDirectory", "contents": "${1:CBXVirtualIo}::GetDirectory(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::GetErrors", "contents": "${1:CBXVirtualIo}::GetErrors()$0"},
		{"trigger": "CBXVirtualIo::GetFile", "contents": "${1:CBXVirtualIo}::GetFile(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::GetInstance", "contents": "${1:CBXVirtualIo}::GetInstance()$0"},
		{"trigger": "CBXVirtualIo::GetLogicalName", "contents": "${1:CBXVirtualIo}::GetLogicalName(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::GetPhysicalName", "contents": "${1:CBXVirtualIo}::GetPhysicalName(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::Move", "contents": "${1:CBXVirtualIo}::Move(${2:\\$source}, ${2:\\$target}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "CBXVirtualIo::OpenFile", "contents": "${1:CBXVirtualIo}::OpenFile(${2:\\$path}, ${2:\\$mode})$0"},
		{"trigger": "CBXVirtualIo::RelativeToAbsolutePath", "contents": "${1:CBXVirtualIo}::RelativeToAbsolutePath(${2:\\$relativePath})$0"},
		{"trigger": "CBXVirtualIo::Rename", "contents": "${1:CBXVirtualIo}::Rename(${2:\\$source}, ${2:\\$target})$0"},
		{"trigger": "CBXVirtualIo::SiteRelativeToAbsolutePath", "contents": "${1:CBXVirtualIo}::SiteRelativeToAbsolutePath(${2:\\$relativePath}, ${2:\\$site = null})$0"},
		{"trigger": "CBXVirtualIo::ValidateFilenameString", "contents": "${1:CBXVirtualIo}::ValidateFilenameString(${2:\\$filename})$0"},
		{"trigger": "CBXVirtualIo::ValidatePathString", "contents": "${1:CBXVirtualIo}::ValidatePathString(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIo::__construct", "contents": "${1:CBXVirtualIo}::__construct()$0"},
		{"trigger": "CBXVirtualIoFileSystem::AddError", "contents": "${1:CBXVirtualIoFileSystem}::AddError(${2:\\$error}, ${2:\\$errorCode = ''})$0"},
		{"trigger": "CBXVirtualIoFileSystem::ClearCache", "contents": "${1:CBXVirtualIoFileSystem}::ClearCache()$0"},
		{"trigger": "CBXVirtualIoFileSystem::ClearErrors", "contents": "${1:CBXVirtualIoFileSystem}::ClearErrors()$0"},
		{"trigger": "CBXVirtualIoFileSystem::CombinePath", "contents": "${1:CBXVirtualIoFileSystem}::CombinePath()$0"},
		{"trigger": "CBXVirtualIoFileSystem::ConvertCharset", "contents": "${1:CBXVirtualIoFileSystem}::ConvertCharset(${2:\\$string}, ${2:\\$direction = 1})$0"},
		{"trigger": "CBXVirtualIoFileSystem::Copy", "contents": "${1:CBXVirtualIoFileSystem}::Copy(${2:\\$source}, ${2:\\$target}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "CBXVirtualIoFileSystem::CopyDirFiles", "contents": "${1:CBXVirtualIoFileSystem}::CopyDirFiles(${2:\\$pathFrom}, ${2:\\$pathTo}, ${4:\\$bRewrite = true}, ${4:\\$bDeleteAfterCopy = false})$0"},
		{"trigger": "CBXVirtualIoFileSystem::CreateDirectory", "contents": "${1:CBXVirtualIoFileSystem}::CreateDirectory(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::Delete", "contents": "${1:CBXVirtualIoFileSystem}::Delete(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::DirectoryExists", "contents": "${1:CBXVirtualIoFileSystem}::DirectoryExists(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::ExtractNameFromPath", "contents": "${1:CBXVirtualIoFileSystem}::ExtractNameFromPath(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::ExtractPathFromPath", "contents": "${1:CBXVirtualIoFileSystem}::ExtractPathFromPath(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::FileExists", "contents": "${1:CBXVirtualIoFileSystem}::FileExists(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::FormatPath", "contents": "${1:CBXVirtualIoFileSystem}::FormatPath(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::GetDirectory", "contents": "${1:CBXVirtualIoFileSystem}::GetDirectory(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::GetErrors", "contents": "${1:CBXVirtualIoFileSystem}::GetErrors()$0"},
		{"trigger": "CBXVirtualIoFileSystem::GetFile", "contents": "${1:CBXVirtualIoFileSystem}::GetFile(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::GetLogicalName", "contents": "${1:CBXVirtualIoFileSystem}::GetLogicalName(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::GetPhysicalName", "contents": "${1:CBXVirtualIoFileSystem}::GetPhysicalName(${2:\\$path})$0"},
		{"trigger": "CBXVirtualIoFileSystem::Move", "contents": "${1:CBXVirtualIoFileSystem}::Move(${2:\\$source}, ${2:\\$target}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "CBXVirtualIoFileSystem::OpenFile", "contents": "${1:CBXVirtualIoFileSystem}::OpenFile(${2:\\$path}, ${2:\\$mode})$0"},
		{"trigger": "CBXVirtualIoFileSystem::RelativeToAbsolutePath", "contents": "${1:CBXVirtualIoFileSystem}::RelativeToAbsolutePath(${2:\\$relativePath})$0"},
		{"trigger": "CBXVirtualIoFileSystem::Rename", "contents": "${1:CBXVirtualIoFileSystem}::Rename(${2:\\$source}, ${2:\\$target})$0"},
		{"trigger": "CBXVirtualIoFileSystem::SiteRelativeToAbsolutePath", "contents": "${1:CBXVirtualIoFileSystem}::SiteRelativeToAbsolutePath(${2:\\$relativePath}, ${2:\\$site = null})$0"},
		{"trigger": "CBXVirtualIoFileSystem::ValidateFilenameString", "contents": "${1:CBXVirtualIoFileSystem}::ValidateFilenameString(${2:\\$filename})$0"},
		{"trigger": "CBXVirtualIoFileSystem::ValidatePathString", "contents": "${1:CBXVirtualIoFileSystem}::ValidatePathString(${2:\\$path})$0"},
		{"trigger": "CBaseEntity::GetDBTableName", "contents": "${1:CBaseEntity}::GetDBTableName()$0"},
		{"trigger": "CBaseEntity::GetField", "contents": "${1:CBaseEntity}::GetField(${2:\\$name})$0"},
		{"trigger": "CBaseEntity::GetFields", "contents": "${1:CBaseEntity}::GetFields()$0"},
		{"trigger": "CBaseEntity::GetFilePath", "contents": "${1:CBaseEntity}::GetFilePath()$0"},
		{"trigger": "CBaseEntity::GetInstance", "contents": "${1:CBaseEntity}::GetInstance(${2:\\$entityName})$0"},
		{"trigger": "CBaseEntity::GetInstanceDirect", "contents": "${1:CBaseEntity}::GetInstanceDirect(${2:\\$className})$0"},
		{"trigger": "CBaseEntity::GetList", "contents": "${1:CBaseEntity}::GetList(${2:\\$select}, ${2:\\$filter = array()}, ${4:\\$group = array()}, ${4:\\$order = array()}, ${6:\\$limit = array()}, ${6:\\$options = array()}, ${8:\\$runtime = array()})$0"},
		{"trigger": "CBaseEntity::GetName", "contents": "${1:CBaseEntity}::GetName()$0"},
		{"trigger": "CBaseEntity::GetPrimary", "contents": "${1:CBaseEntity}::GetPrimary()$0"},
		{"trigger": "CBaseEntity::GetPrimaryarray", "contents": "${1:CBaseEntity}::GetPrimaryarray()$0"},
		{"trigger": "CBaseEntity::GetReferencesCountTo", "contents": "${1:CBaseEntity}::GetReferencesCountTo(${2:\\$refEntityName})$0"},
		{"trigger": "CBaseEntity::GetReferencesTo", "contents": "${1:CBaseEntity}::GetReferencesTo(${2:\\$refEntityName})$0"},
		{"trigger": "CBaseEntity::HasField", "contents": "${1:CBaseEntity}::HasField(${2:\\$name})$0"},
		{"trigger": "CBaseEntity::IsExists", "contents": "${1:CBaseEntity}::IsExists(${2:\\$name})$0"},
		{"trigger": "CBaseEntity::IsUtm", "contents": "${1:CBaseEntity}::IsUtm()$0"},
		{"trigger": "CBaseEntity::IsUts", "contents": "${1:CBaseEntity}::IsUts()$0"},
		{"trigger": "CBaseEntity::PostInitialize", "contents": "${1:CBaseEntity}::PostInitialize()$0"},
		{"trigger": "CBaseEntity::camel2snake", "contents": "${1:CBaseEntity}::camel2snake(${2:\\$str})$0"},
		{"trigger": "CBaseEntity::getUField", "contents": "${1:CBaseEntity}::getUField(${2:\\$name})$0"},
		{"trigger": "CBaseEntity::hasUField", "contents": "${1:CBaseEntity}::hasUField(${2:\\$name})$0"},
		{"trigger": "CBaseEntity::initializeField", "contents": "${1:CBaseEntity}::initializeField(${2:\\$fieldName}, ${2:\\$fieldInfo})$0"},
		{"trigger": "CBaseEntity::snake2camel", "contents": "${1:CBaseEntity}::snake2camel(${2:\\$str})$0"},
		{"trigger": "CBitrixComponent::AbortResultCache", "contents": "${1:CBitrixComponent}::AbortResultCache()$0"},
		{"trigger": "CBitrixComponent::AddDeleteAction", "contents": "${1:CBitrixComponent}::AddDeleteAction(${2:\\$entryId}, ${2:\\$deleteLink}, ${4:\\$deleteTitle = false}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CBitrixComponent::AddEditAction", "contents": "${1:CBitrixComponent}::AddEditAction(${2:\\$entryId}, ${2:\\$editLink}, ${4:\\$editTitle = false}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CBitrixComponent::AddIncludeAreaIcon", "contents": "${1:CBitrixComponent}::AddIncludeAreaIcon(${2:\\$arIcon})$0"},
		{"trigger": "CBitrixComponent::AddIncludeAreaIcons", "contents": "${1:CBitrixComponent}::AddIncludeAreaIcons(${2:\\$arIcons})$0"},
		{"trigger": "CBitrixComponent::ClearResultCache", "contents": "${1:CBitrixComponent}::ClearResultCache(${2:\\$additionalCacheID = False}, ${2:\\$cachePath = False})$0"},
		{"trigger": "CBitrixComponent::EndResultCache", "contents": "${1:CBitrixComponent}::EndResultCache()$0"},
		{"trigger": "CBitrixComponent::GetCacheID", "contents": "${1:CBitrixComponent}::GetCacheID(${2:\\$additionalCacheID = False})$0"},
		{"trigger": "CBitrixComponent::GetCachePath", "contents": "${1:CBitrixComponent}::GetCachePath()$0"},
		{"trigger": "CBitrixComponent::GetEditAreaId", "contents": "${1:CBitrixComponent}::GetEditAreaId(${2:\\$entryId})$0"},
		{"trigger": "CBitrixComponent::GetName", "contents": "${1:CBitrixComponent}::GetName()$0"},
		{"trigger": "CBitrixComponent::GetPath", "contents": "${1:CBitrixComponent}::GetPath()$0"},
		{"trigger": "CBitrixComponent::GetRelativePath", "contents": "${1:CBitrixComponent}::GetRelativePath()$0"},
		{"trigger": "CBitrixComponent::GetTemplateCachedData", "contents": "${1:CBitrixComponent}::GetTemplateCachedData()$0"},
		{"trigger": "CBitrixComponent::GetTemplateName", "contents": "${1:CBitrixComponent}::GetTemplateName()$0"},
		{"trigger": "CBitrixComponent::GetTemplatePage", "contents": "${1:CBitrixComponent}::GetTemplatePage()$0"},
		{"trigger": "CBitrixComponent::IncludeComponent", "contents": "${1:CBitrixComponent}::IncludeComponent(${2:\\$componentTemplate}, ${2:\\$arParams}, ${4:\\$parentComponent})$0"},
		{"trigger": "CBitrixComponent::IncludeComponentEpilog", "contents": "${1:CBitrixComponent}::IncludeComponentEpilog(${2:\\$arEpilogInfo})$0"},
		{"trigger": "CBitrixComponent::IncludeComponentLang", "contents": "${1:CBitrixComponent}::IncludeComponentLang(${2:\\$relativePath = ''}, ${2:\\$lang = False})$0"},
		{"trigger": "CBitrixComponent::IncludeComponentTemplate", "contents": "${1:CBitrixComponent}::IncludeComponentTemplate(${2:\\$templatePage = ''}, ${2:\\$customTemplatePath = ''})$0"},
		{"trigger": "CBitrixComponent::InitComponent", "contents": "${1:CBitrixComponent}::InitComponent(${2:\\$componentName}, ${2:\\$componentTemplate = False})$0"},
		{"trigger": "CBitrixComponent::InitComponentTemplate", "contents": "${1:CBitrixComponent}::InitComponentTemplate(${2:\\$templatePage = ''}, ${2:\\$siteTemplate = false}, ${4:\\$customTemplatePath = ''})$0"},
		{"trigger": "CBitrixComponent::SetResultCacheKeys", "contents": "${1:CBitrixComponent}::SetResultCacheKeys(${2:\\$arResultCacheKeys})$0"},
		{"trigger": "CBitrixComponent::SetTemplateCachedData", "contents": "${1:CBitrixComponent}::SetTemplateCachedData(${2:\\$templateCachedData})$0"},
		{"trigger": "CBitrixComponent::SetTemplateEpilog", "contents": "${1:CBitrixComponent}::SetTemplateEpilog(${2:\\$arEpilogInfo})$0"},
		{"trigger": "CBitrixComponent::SetTemplateName", "contents": "${1:CBitrixComponent}::SetTemplateName(${2:\\$templateName})$0"},
		{"trigger": "CBitrixComponent::ShowComponentTemplate", "contents": "${1:CBitrixComponent}::ShowComponentTemplate()$0"},
		{"trigger": "CBitrixComponent::StartResultCache", "contents": "${1:CBitrixComponent}::StartResultCache(${2:\\$cacheTime = False}, ${2:\\$additionalCacheID = False}, ${4:\\$cachePath = False})$0"},
		{"trigger": "CBitrixComponent::__IncludeComponent", "contents": "${1:CBitrixComponent}::__IncludeComponent()$0"},
		{"trigger": "CBitrixComponent::__PrepareComponentParams", "contents": "${1:CBitrixComponent}::__PrepareComponentParams(${2:&\\$arParams})$0"},
		{"trigger": "CBitrixComponent::__ShowError", "contents": "${1:CBitrixComponent}::__ShowError(${2:\\$errorMessage}, ${2:\\$errorCode = ''})$0"},
		{"trigger": "CBitrixComponentTemplate::AddDeleteAction", "contents": "${1:CBitrixComponentTemplate}::AddDeleteAction(${2:\\$entryId}, ${2:\\$deleteLink}, ${4:\\$deleteTitle = false}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CBitrixComponentTemplate::AddEditAction", "contents": "${1:CBitrixComponentTemplate}::AddEditAction(${2:\\$entryId}, ${2:\\$editLink}, ${4:\\$editTitle = false}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CBitrixComponentTemplate::ApplyCachedData", "contents": "${1:CBitrixComponentTemplate}::ApplyCachedData(${2:\\$arData})$0"},
		{"trigger": "CBitrixComponentTemplate::CBitrixComponentTemplate", "contents": "${1:CBitrixComponentTemplate}::CBitrixComponentTemplate()$0"},
		{"trigger": "CBitrixComponentTemplate::CheckName", "contents": "${1:CBitrixComponentTemplate}::CheckName(${2:\\$name})$0"},
		{"trigger": "CBitrixComponentTemplate::EndViewTarget", "contents": "${1:CBitrixComponentTemplate}::EndViewTarget()$0"},
		{"trigger": "CBitrixComponentTemplate::GetEditAreaId", "contents": "${1:CBitrixComponentTemplate}::GetEditAreaId(${2:\\$entryId})$0"},
		{"trigger": "CBitrixComponentTemplate::GetFile", "contents": "${1:CBitrixComponentTemplate}::GetFile()$0"},
		{"trigger": "CBitrixComponentTemplate::GetFolder", "contents": "${1:CBitrixComponentTemplate}::GetFolder()$0"},
		{"trigger": "CBitrixComponentTemplate::GetName", "contents": "${1:CBitrixComponentTemplate}::GetName()$0"},
		{"trigger": "CBitrixComponentTemplate::GetPageName", "contents": "${1:CBitrixComponentTemplate}::GetPageName()$0"},
		{"trigger": "CBitrixComponentTemplate::GetSiteTemplate", "contents": "${1:CBitrixComponentTemplate}::GetSiteTemplate()$0"},
		{"trigger": "CBitrixComponentTemplate::IncludeLangFile", "contents": "${1:CBitrixComponentTemplate}::IncludeLangFile()$0"},
		{"trigger": "CBitrixComponentTemplate::IncludeTemplate", "contents": "${1:CBitrixComponentTemplate}::IncludeTemplate(${2:&\\$arResult})$0"},
		{"trigger": "CBitrixComponentTemplate::Init", "contents": "${1:CBitrixComponentTemplate}::Init(${2:&\\$component}, ${2:\\$siteTemplate = false}, ${4:\\$customTemplatePath = ''})$0"},
		{"trigger": "CBitrixComponentTemplate::InitTemplateEngines", "contents": "${1:CBitrixComponentTemplate}::InitTemplateEngines(${2:\\$arTemplateEngines = array()})$0"},
		{"trigger": "CBitrixComponentTemplate::IsInTheme", "contents": "${1:CBitrixComponentTemplate}::IsInTheme()$0"},
		{"trigger": "CBitrixComponentTemplate::SetViewTarget", "contents": "${1:CBitrixComponentTemplate}::SetViewTarget(${2:\\$target}, ${2:\\$pos = 500})$0"},
		{"trigger": "CBitrixComponentTemplate::__GetTemplateEngine", "contents": "${1:CBitrixComponentTemplate}::__GetTemplateEngine()$0"},
		{"trigger": "CBitrixComponentTemplate::__GetTemplateExtension", "contents": "${1:CBitrixComponentTemplate}::__GetTemplateExtension(${2:\\$templateName})$0"},
		{"trigger": "CBitrixComponentTemplate::__IncludeCSSFile", "contents": "${1:CBitrixComponentTemplate}::__IncludeCSSFile()$0"},
		{"trigger": "CBitrixComponentTemplate::__IncludeJSFile", "contents": "${1:CBitrixComponentTemplate}::__IncludeJSFile()$0"},
		{"trigger": "CBitrixComponentTemplate::__IncludeLangFile", "contents": "${1:CBitrixComponentTemplate}::__IncludeLangFile(${2:\\$path})$0"},
		{"trigger": "CBitrixComponentTemplate::__IncludeMutatorFile", "contents": "${1:CBitrixComponentTemplate}::__IncludeMutatorFile(${2:&\\$arResult}, ${2:&\\$arParams})$0"},
		{"trigger": "CBitrixComponentTemplate::__IncludePHPTemplate", "contents": "${1:CBitrixComponentTemplate}::__IncludePHPTemplate(${2:&\\$arResult}, ${2:&\\$arParams}, ${4:\\$parentTemplateFolder = ''})$0"},
		{"trigger": "CBitrixComponentTemplate::__SearchTemplate", "contents": "${1:CBitrixComponentTemplate}::__SearchTemplate(${2:\\$customTemplatePath = ''})$0"},
		{"trigger": "CBitrixComponentTemplate::__SearchTemplateFile", "contents": "${1:CBitrixComponentTemplate}::__SearchTemplateFile(${2:\\$path}, ${2:\\$fileName})$0"},
		{"trigger": "CBooleanEntityField::__construct", "contents": "${1:CBooleanEntityField}::__construct(${2:\\$name}, ${2:\\$dataType}, ${4:CBaseEntity \\$entity}, ${4:\\$parameters = array()})$0"},
		{"trigger": "CBooleanEntityField::getValues", "contents": "${1:CBooleanEntityField}::getValues()$0"},
		{"trigger": "CBooleanEntityField::normalizeValue", "contents": "${1:CBooleanEntityField}::normalizeValue(${2:\\$value})$0"},
		{"trigger": "CCSVData::CCSVData", "contents": "${1:CCSVData}::CCSVData(${2:\\$fields_type = 'R'}, ${2:\\$first_header = false})$0"},
		{"trigger": "CCSVData::CheckUTF8BOM", "contents": "${1:CCSVData}::CheckUTF8BOM()$0"},
		{"trigger": "CCSVData::Fetch", "contents": "${1:CCSVData}::Fetch()$0"},
		{"trigger": "CCSVData::FetchDelimiter", "contents": "${1:CCSVData}::FetchDelimiter()$0"},
		{"trigger": "CCSVData::FetchWidth", "contents": "${1:CCSVData}::FetchWidth()$0"},
		{"trigger": "CCSVData::GetFirstHeader", "contents": "${1:CCSVData}::GetFirstHeader()$0"},
		{"trigger": "CCSVData::GetPos", "contents": "${1:CCSVData}::GetPos()$0"},
		{"trigger": "CCSVData::IncCurPos", "contents": "${1:CCSVData}::IncCurPos()$0"},
		{"trigger": "CCSVData::LoadFile", "contents": "${1:CCSVData}::LoadFile(${2:\\$filename})$0"},
		{"trigger": "CCSVData::MoveFirst", "contents": "${1:CCSVData}::MoveFirst()$0"},
		{"trigger": "CCSVData::SaveFile", "contents": "${1:CCSVData}::SaveFile(${2:\\$filename}, ${2:\\$arFields})$0"},
		{"trigger": "CCSVData::SetDelimiter", "contents": "${1:CCSVData}::SetDelimiter(${2:\\$delimiter = ';'})$0"},
		{"trigger": "CCSVData::SetFieldsType", "contents": "${1:CCSVData}::SetFieldsType(${2:\\$fields_type = 'R'})$0"},
		{"trigger": "CCSVData::SetFirstHeader", "contents": "${1:CCSVData}::SetFirstHeader(${2:\\$first_header = false})$0"},
		{"trigger": "CCSVData::SetPos", "contents": "${1:CCSVData}::SetPos(${2:\\$iCurPos = 0})$0"},
		{"trigger": "CCSVData::SetWidthMap", "contents": "${1:CCSVData}::SetWidthMap(${2:\\$arMap})$0"},
		{"trigger": "CCacheManager::AbortTagCache", "contents": "${1:CCacheManager}::AbortTagCache()$0"},
		{"trigger": "CCacheManager::Clean", "contents": "${1:CCacheManager}::Clean(${2:\\$uniqid}, ${2:\\$table_id=false})$0"},
		{"trigger": "CCacheManager::CleanAll", "contents": "${1:CCacheManager}::CleanAll()$0"},
		{"trigger": "CCacheManager::CleanDir", "contents": "${1:CCacheManager}::CleanDir(${2:\\$table_id})$0"},
		{"trigger": "CCacheManager::ClearByTag", "contents": "${1:CCacheManager}::ClearByTag(${2:\\$tag})$0"},
		{"trigger": "CCacheManager::EndTagCache", "contents": "${1:CCacheManager}::EndTagCache()$0"},
		{"trigger": "CCacheManager::Get", "contents": "${1:CCacheManager}::Get(${2:\\$uniqid})$0"},
		{"trigger": "CCacheManager::GetCompCachePath", "contents": "${1:CCacheManager}::GetCompCachePath(${2:\\$relativePath})$0"},
		{"trigger": "CCacheManager::InitCompSalt", "contents": "${1:CCacheManager}::InitCompSalt()$0"},
		{"trigger": "CCacheManager::InitDBCache", "contents": "${1:CCacheManager}::InitDBCache()$0"},
		{"trigger": "CCacheManager::Read", "contents": "${1:CCacheManager}::Read(${2:\\$ttl}, ${2:\\$uniqid}, ${4:\\$table_id=false})$0"},
		{"trigger": "CCacheManager::RegisterTag", "contents": "${1:CCacheManager}::RegisterTag(${2:\\$tag})$0"},
		{"trigger": "CCacheManager::Set", "contents": "${1:CCacheManager}::Set(${2:\\$uniqid}, ${2:\\$val})$0"},
		{"trigger": "CCacheManager::SetImmediate", "contents": "${1:CCacheManager}::SetImmediate(${2:\\$uniqid}, ${2:\\$val})$0"},
		{"trigger": "CCacheManager::StartTagCache", "contents": "${1:CCacheManager}::StartTagCache(${2:\\$relativePath})$0"},
		{"trigger": "CCacheManager::_Finalize", "contents": "${1:CCacheManager}::_Finalize()$0"},
		{"trigger": "CCaptcha::Add", "contents": "${1:CCaptcha}::Add(${2:\\$arFields})$0"},
		{"trigger": "CCaptcha::CCaptcha", "contents": "${1:CCaptcha}::CCaptcha()$0"},
		{"trigger": "CCaptcha::CheckCaptchaCode", "contents": "${1:CCaptcha}::CheckCaptchaCode(${2:\\$userCode}, ${2:\\$sid}, ${4:\\$bUpperCode = true})$0"},
		{"trigger": "CCaptcha::CheckCode", "contents": "${1:CCaptcha}::CheckCode(${2:\\$userCode}, ${2:\\$sid}, ${4:\\$bUpperCode = True})$0"},
		{"trigger": "CCaptcha::CheckCodeCrypt", "contents": "${1:CCaptcha}::CheckCodeCrypt(${2:\\$userCode}, ${2:\\$codeCrypt}, ${4:\\$password = ''}, ${4:\\$bUpperCode = True})$0"},
		{"trigger": "CCaptcha::CreateImage", "contents": "${1:CCaptcha}::CreateImage()$0"},
		{"trigger": "CCaptcha::CreateImageError", "contents": "${1:CCaptcha}::CreateImageError(${2:\\$arMsg})$0"},
		{"trigger": "CCaptcha::CryptData", "contents": "${1:CCaptcha}::CryptData(${2:\\$data}, ${2:\\$type}, ${4:\\$pwdString})$0"},
		{"trigger": "CCaptcha::Delete", "contents": "${1:CCaptcha}::Delete(${2:\\$sid})$0"},
		{"trigger": "CCaptcha::DestroyImage", "contents": "${1:CCaptcha}::DestroyImage()$0"},
		{"trigger": "CCaptcha::DrawEllipses", "contents": "${1:CCaptcha}::DrawEllipses()$0"},
		{"trigger": "CCaptcha::DrawLines", "contents": "${1:CCaptcha}::DrawLines()$0"},
		{"trigger": "CCaptcha::DrawText", "contents": "${1:CCaptcha}::DrawText()$0"},
		{"trigger": "CCaptcha::EmptyText", "contents": "${1:CCaptcha}::EmptyText()$0"},
		{"trigger": "CCaptcha::Generate32RandomString", "contents": "${1:CCaptcha}::Generate32RandomString()$0"},
		{"trigger": "CCaptcha::GetCodeCrypt", "contents": "${1:CCaptcha}::GetCodeCrypt()$0"},
		{"trigger": "CCaptcha::GetColor", "contents": "${1:CCaptcha}::GetColor(${2:\\$arColor})$0"},
		{"trigger": "CCaptcha::GetSID", "contents": "${1:CCaptcha}::GetSID()$0"},
		{"trigger": "CCaptcha::GetTTFFontsPath", "contents": "${1:CCaptcha}::GetTTFFontsPath()$0"},
		{"trigger": "CCaptcha::InitCaptchaCode", "contents": "${1:CCaptcha}::InitCaptchaCode(${2:\\$sid})$0"},
		{"trigger": "CCaptcha::InitCode", "contents": "${1:CCaptcha}::InitCode(${2:\\$sid})$0"},
		{"trigger": "CCaptcha::InitCodeCrypt", "contents": "${1:CCaptcha}::InitCodeCrypt(${2:\\$codeCrypt}, ${2:\\$password = ''})$0"},
		{"trigger": "CCaptcha::InitImage", "contents": "${1:CCaptcha}::InitImage(${2:\\$width = false}, ${2:\\$height = false})$0"},
		{"trigger": "CCaptcha::Output", "contents": "${1:CCaptcha}::Output()$0"},
		{"trigger": "CCaptcha::OutputError", "contents": "${1:CCaptcha}::OutputError()$0"},
		{"trigger": "CCaptcha::SetBGColor", "contents": "${1:CCaptcha}::SetBGColor(${2:\\$arColor})$0"},
		{"trigger": "CCaptcha::SetBGColorRGB", "contents": "${1:CCaptcha}::SetBGColorRGB(${2:\\$color_1}, ${2:\\$color_2})$0"},
		{"trigger": "CCaptcha::SetBorderColor", "contents": "${1:CCaptcha}::SetBorderColor(${2:\\$arColor})$0"},
		{"trigger": "CCaptcha::SetBorderColorRGB", "contents": "${1:CCaptcha}::SetBorderColorRGB(${2:\\$color})$0"},
		{"trigger": "CCaptcha::SetCaptchaCode", "contents": "${1:CCaptcha}::SetCaptchaCode(${2:\\$sid = false})$0"},
		{"trigger": "CCaptcha::SetCode", "contents": "${1:CCaptcha}::SetCode()$0"},
		{"trigger": "CCaptcha::SetCodeChars", "contents": "${1:CCaptcha}::SetCodeChars(${2:\\$arChars})$0"},
		{"trigger": "CCaptcha::SetCodeCrypt", "contents": "${1:CCaptcha}::SetCodeCrypt(${2:\\$password = ''})$0"},
		{"trigger": "CCaptcha::SetCodeLength", "contents": "${1:CCaptcha}::SetCodeLength(${2:\\$length})$0"},
		{"trigger": "CCaptcha::SetColor", "contents": "${1:CCaptcha}::SetColor(${2:\\$arColor})$0"},
		{"trigger": "CCaptcha::SetEllipseColor", "contents": "${1:CCaptcha}::SetEllipseColor(${2:\\$arColor})$0"},
		{"trigger": "CCaptcha::SetEllipseColorRGB", "contents": "${1:CCaptcha}::SetEllipseColorRGB(${2:\\$color_1}, ${2:\\$color_2})$0"},
		{"trigger": "CCaptcha::SetEllipsesNumber", "contents": "${1:CCaptcha}::SetEllipsesNumber(${2:\\$num})$0"},
		{"trigger": "CCaptcha::SetEmptyText", "contents": "${1:CCaptcha}::SetEmptyText(${2:\\$bEmptyText})$0"},
		{"trigger": "CCaptcha::SetImageSize", "contents": "${1:CCaptcha}::SetImageSize(${2:\\$width}, ${2:\\$height})$0"},
		{"trigger": "CCaptcha::SetLineColor", "contents": "${1:CCaptcha}::SetLineColor(${2:\\$arColor})$0"},
		{"trigger": "CCaptcha::SetLineColorRGB", "contents": "${1:CCaptcha}::SetLineColorRGB(${2:\\$color_1}, ${2:\\$color_2})$0"},
		{"trigger": "CCaptcha::SetLinesNumber", "contents": "${1:CCaptcha}::SetLinesNumber(${2:\\$num})$0"},
		{"trigger": "CCaptcha::SetLinesOverText", "contents": "${1:CCaptcha}::SetLinesOverText(${2:\\$bLinesOverText})$0"},
		{"trigger": "CCaptcha::SetTTFFonts", "contents": "${1:CCaptcha}::SetTTFFonts(${2:\\$arFonts})$0"},
		{"trigger": "CCaptcha::SetTTFFontsPath", "contents": "${1:CCaptcha}::SetTTFFontsPath(${2:\\$ttfFilesPath})$0"},
		{"trigger": "CCaptcha::SetTextColor", "contents": "${1:CCaptcha}::SetTextColor(${2:\\$arColor})$0"},
		{"trigger": "CCaptcha::SetTextColorRGB", "contents": "${1:CCaptcha}::SetTextColorRGB(${2:\\$color_1}, ${2:\\$color_2})$0"},
		{"trigger": "CCaptcha::SetTextTransparent", "contents": "${1:CCaptcha}::SetTextTransparent(${2:\\$bTransparentText}, ${2:\\$transparentTextPercent = 10})$0"},
		{"trigger": "CCaptcha::SetTextWriting", "contents": "${1:CCaptcha}::SetTextWriting(${2:\\$angleFrom}, ${2:\\$angleTo}, ${4:\\$startX}, ${4:\\$distanceFrom}, ${6:\\$distanceTo}, ${6:\\$fontSize})$0"},
		{"trigger": "CCaptcha::SetWaveTransformation", "contents": "${1:CCaptcha}::SetWaveTransformation(${2:\\$bWaveTransformation})$0"},
		{"trigger": "CCaptcha::ShowImage", "contents": "${1:CCaptcha}::ShowImage()$0"},
		{"trigger": "CCaptcha::Wave", "contents": "${1:CCaptcha}::Wave()$0"},
		{"trigger": "CCaptcha::__construct", "contents": "${1:CCaptcha}::__construct()$0"},
		{"trigger": "CCaptchaAgent::DeleteOldCaptcha", "contents": "${1:CCaptchaAgent}::DeleteOldCaptcha(${2:\\$sec = 3600})$0"},
		{"trigger": "CCheckList::AddReport", "contents": "${1:CCheckList}::AddReport(${2:\\$arReportFields = array()})$0"},
		{"trigger": "CCheckList::AutoCheck", "contents": "${1:CCheckList}::AutoCheck(${2:\\$arTestID,\\$arParams = array()})$0"},
		{"trigger": "CCheckList::GetCurrentState", "contents": "${1:CCheckList}::GetCurrentState()$0"},
		{"trigger": "CCheckList::GetDescription", "contents": "${1:CCheckList}::GetDescription(${2:\\$ID})$0"},
		{"trigger": "CCheckList::GetPoints", "contents": "${1:CCheckList}::GetPoints(${2:\\$arSectionCode = false})$0"},
		{"trigger": "CCheckList::GetReportInfo", "contents": "${1:CCheckList}::GetReportInfo()$0"},
		{"trigger": "CCheckList::GetSectionStat", "contents": "${1:CCheckList}::GetSectionStat(${2:\\$ID = false})$0"},
		{"trigger": "CCheckList::GetSections", "contents": "${1:CCheckList}::GetSections(${2:\\$arFilter = array()})$0"},
		{"trigger": "CCheckList::GetStructure", "contents": "${1:CCheckList}::GetStructure()$0"},
		{"trigger": "CCheckList::PointUpdate", "contents": "${1:CCheckList}::PointUpdate(${2:\\$arTestID}, ${2:\\$arPointFields = array()})$0"},
		{"trigger": "CCheckList::Save", "contents": "${1:CCheckList}::Save()$0"},
		{"trigger": "CCheckList::__construct", "contents": "${1:CCheckList}::__construct(${2:\\$ID = false})$0"},
		{"trigger": "CCheckListResult::Delete", "contents": "${1:CCheckListResult}::Delete(${2:\\$ID})$0"},
		{"trigger": "CCheckListResult::GetList", "contents": "${1:CCheckListResult}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CCheckListResult::Save", "contents": "${1:CCheckListResult}::Save(${2:\\$arFields = array()})$0"},
		{"trigger": "CCheckListTools::AdminPolicyLevel", "contents": "${1:CCheckListTools}::AdminPolicyLevel()$0"},
		{"trigger": "CCheckListTools::__scandir", "contents": "${1:CCheckListTools}::__scandir(${2:\\$pwd,&\\$arFiles,\\$arExept = false})$0"},
		{"trigger": "CComponentAjax::CComponentAjax", "contents": "${1:CComponentAjax}::CComponentAjax(${2:\\$componentName}, ${2:\\$componentTemplate}, ${4:&\\$arParams}, ${4:\\$parentComponent})$0"},
		{"trigger": "CComponentAjax::CheckSession", "contents": "${1:CComponentAjax}::CheckSession()$0"},
		{"trigger": "CComponentAjax::LocalRedirectHandler", "contents": "${1:CComponentAjax}::LocalRedirectHandler(${2:&\\$url})$0"},
		{"trigger": "CComponentAjax::RestartBufferHandler", "contents": "${1:CComponentAjax}::RestartBufferHandler()$0"},
		{"trigger": "CComponentAjax::__BufferDelimiter", "contents": "${1:CComponentAjax}::__BufferDelimiter()$0"},
		{"trigger": "CComponentAjax::__GetSEFRealUrl", "contents": "${1:CComponentAjax}::__GetSEFRealUrl(${2:\\$url})$0"},
		{"trigger": "CComponentAjax::__PrepareForms", "contents": "${1:CComponentAjax}::__PrepareForms(${2:&\\$data})$0"},
		{"trigger": "CComponentAjax::__PrepareLinks", "contents": "${1:CComponentAjax}::__PrepareLinks(${2:&\\$data})$0"},
		{"trigger": "CComponentAjax::__isAjaxURL", "contents": "${1:CComponentAjax}::__isAjaxURL(${2:\\$url})$0"},
		{"trigger": "CComponentAjax::__prepareScripts", "contents": "${1:CComponentAjax}::__prepareScripts(${2:&\\$data})$0"},
		{"trigger": "CComponentAjax::__removeHandlers", "contents": "${1:CComponentAjax}::__removeHandlers()$0"},
		{"trigger": "CComponentAjax::_checkParent", "contents": "${1:CComponentAjax}::_checkParent(${2:\\$parent})$0"},
		{"trigger": "CComponentEngine::CheckComponentName", "contents": "${1:CComponentEngine}::CheckComponentName(${2:\\$componentName})$0"},
		{"trigger": "CComponentEngine::InitComponentVariables", "contents": "${1:CComponentEngine}::InitComponentVariables(${2:\\$componentPage}, ${2:\\$arComponentVariables}, ${4:\\$arVariableAliases}, ${4:&\\$arVariables})$0"},
		{"trigger": "CComponentEngine::MakeComponentPath", "contents": "${1:CComponentEngine}::MakeComponentPath(${2:\\$componentName})$0"},
		{"trigger": "CComponentEngine::MakeComponentUrlTemplates", "contents": "${1:CComponentEngine}::MakeComponentUrlTemplates(${2:\\$arDefaultUrlTemplates}, ${2:\\$arCustomUrlTemplates})$0"},
		{"trigger": "CComponentEngine::MakeComponentVariableAliases", "contents": "${1:CComponentEngine}::MakeComponentVariableAliases(${2:\\$arDefaultVariableAliases}, ${2:\\$arCustomVariableAliases})$0"},
		{"trigger": "CComponentEngine::MakePathFromTemplate", "contents": "${1:CComponentEngine}::MakePathFromTemplate(${2:\\$template}, ${2:\\$arParams = array()})$0"},
		{"trigger": "CComponentEngine::ParseComponentPath", "contents": "${1:CComponentEngine}::ParseComponentPath(${2:\\$folder404}, ${2:\\$arUrlTemplates}, ${4:&\\$arVariables}, ${4:\\$requestURL = False})$0"},
		{"trigger": "CComponentEngine::__CheckPath4Template", "contents": "${1:CComponentEngine}::__CheckPath4Template(${2:\\$pageTemplate}, ${2:\\$currentPageUrl}, ${4:&\\$arVariables})$0"},
		{"trigger": "CComponentPanel::GetIcons", "contents": "${1:CComponentPanel}::GetIcons()$0"},
		{"trigger": "CComponentUtil::CopyComponent", "contents": "${1:CComponentUtil}::CopyComponent(${2:\\$componentName}, ${2:\\$newNamespace}, ${4:\\$newName = False}, ${4:\\$bRewrite = False})$0"},
		{"trigger": "CComponentUtil::CopyTemplate", "contents": "${1:CComponentUtil}::CopyTemplate(${2:\\$componentName}, ${2:\\$templateName}, ${4:\\$siteTemplate}, ${4:\\$newSiteTemplate}, ${6:\\$newName = False}, ${6:\\$bRewrite = False})$0"},
		{"trigger": "CComponentUtil::GetComponentDescr", "contents": "${1:CComponentUtil}::GetComponentDescr(${2:\\$componentName})$0"},
		{"trigger": "CComponentUtil::GetComponentProps", "contents": "${1:CComponentUtil}::GetComponentProps(${2:\\$componentName}, ${2:\\$arCurrentValues = array()})$0"},
		{"trigger": "CComponentUtil::GetComponentsTree", "contents": "${1:CComponentUtil}::GetComponentsTree(${2:\\$filterNamespace = False}, ${2:\\$arNameFilter = False})$0"},
		{"trigger": "CComponentUtil::GetDateFormatDefault", "contents": "${1:CComponentUtil}::GetDateFormatDefault(${2:\\$no_year = false})$0"},
		{"trigger": "CComponentUtil::GetDateFormatField", "contents": "${1:CComponentUtil}::GetDateFormatField(${2:\\$name=''}, ${2:\\$parent=''}, ${4:\\$no_year = false})$0"},
		{"trigger": "CComponentUtil::GetDateTimeFormatDefault", "contents": "${1:CComponentUtil}::GetDateTimeFormatDefault()$0"},
		{"trigger": "CComponentUtil::GetDateTimeFormatField", "contents": "${1:CComponentUtil}::GetDateTimeFormatField(${2:\\$name=''}, ${2:\\$parent=''})$0"},
		{"trigger": "CComponentUtil::GetDefaultNameTemplates", "contents": "${1:CComponentUtil}::GetDefaultNameTemplates()$0"},
		{"trigger": "CComponentUtil::GetNamespaceList", "contents": "${1:CComponentUtil}::GetNamespaceList()$0"},
		{"trigger": "CComponentUtil::GetTemplateProps", "contents": "${1:CComponentUtil}::GetTemplateProps(${2:\\$componentName}, ${2:\\$templateName}, ${4:\\$siteTemplate = ''}, ${4:\\$arCurrentValues = array()})$0"},
		{"trigger": "CComponentUtil::GetTemplatesList", "contents": "${1:CComponentUtil}::GetTemplatesList(${2:\\$componentName}, ${2:\\$currentTemplate = False})$0"},
		{"trigger": "CComponentUtil::PrepareVariables", "contents": "${1:CComponentUtil}::PrepareVariables(${2:&\\$arData})$0"},
		{"trigger": "CComponentUtil::__BuildTree", "contents": "${1:CComponentUtil}::__BuildTree(${2:\\$arPath}, ${2:&\\$arTree}, ${4:&\\$arComponent}, ${4:\\$level = 1})$0"},
		{"trigger": "CComponentUtil::__GetComponentsTree", "contents": "${1:CComponentUtil}::__GetComponentsTree(${2:\\$filterNamespace = False}, ${2:\\$arNameFilter = False})$0"},
		{"trigger": "CComponentUtil::__GroupParamsCompare", "contents": "${1:CComponentUtil}::__GroupParamsCompare(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CComponentUtil::__IncludeLang", "contents": "${1:CComponentUtil}::__IncludeLang(${2:\\$filePath}, ${2:\\$fileName}, ${4:\\$lang = False})$0"},
		{"trigger": "CComponentUtil::__ShowError", "contents": "${1:CComponentUtil}::__ShowError(${2:\\$errorMessage})$0"},
		{"trigger": "CComponentUtil::__SortComponentsTree", "contents": "${1:CComponentUtil}::__SortComponentsTree(${2:&\\$arTree})$0"},
		{"trigger": "CComponentUtil::__TreeFolderCompare", "contents": "${1:CComponentUtil}::__TreeFolderCompare(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CComponentUtil::__TreeItemCompare", "contents": "${1:CComponentUtil}::__TreeItemCompare(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CControllerClient::AuthorizeAdmin", "contents": "${1:CControllerClient}::AuthorizeAdmin(${2:\\$arParams = array()})$0"},
		{"trigger": "CControllerClient::AuthorizeUser", "contents": "${1:CControllerClient}::AuthorizeUser(${2:\\$arParams = array()})$0"},
		{"trigger": "CControllerClient::GetBackup", "contents": "${1:CControllerClient}::GetBackup(${2:\\$bRefresh = false})$0"},
		{"trigger": "CControllerClient::GetInstalledOptions", "contents": "${1:CControllerClient}::GetInstalledOptions(${2:\\$module_id})$0"},
		{"trigger": "CControllerClient::InitTicket", "contents": "${1:CControllerClient}::InitTicket(${2:\\$controller_url})$0"},
		{"trigger": "CControllerClient::IsInCommonKernel", "contents": "${1:CControllerClient}::IsInCommonKernel()$0"},
		{"trigger": "CControllerClient::JoinToController", "contents": "${1:CControllerClient}::JoinToController(${2:\\$controller_url}, ${2:\\$controller_login}, ${4:\\$controller_password}, ${4:\\$site_url = false}, ${6:\\$controller_group = false}, ${6:\\$site_name = false}, ${8:\\$bSharedKernel = false})$0"},
		{"trigger": "CControllerClient::JoinToControllerEx", "contents": "${1:CControllerClient}::JoinToControllerEx(${2:\\$controller_url}, ${2:\\$controller_login}, ${4:\\$controller_password}, ${4:\\$arMemberParams = array()})$0"},
		{"trigger": "CControllerClient::OnExternalAuthList", "contents": "${1:CControllerClient}::OnExternalAuthList()$0"},
		{"trigger": "CControllerClient::OnExternalLogin", "contents": "${1:CControllerClient}::OnExternalLogin(${2:\\$arParams})$0"},
		{"trigger": "CControllerClient::RemoveFromController", "contents": "${1:CControllerClient}::RemoveFromController(${2:\\$controller_login}, ${2:\\$controller_password})$0"},
		{"trigger": "CControllerClient::RestoreAll", "contents": "${1:CControllerClient}::RestoreAll()$0"},
		{"trigger": "CControllerClient::RestoreGroupSecurity", "contents": "${1:CControllerClient}::RestoreGroupSecurity(${2:\\$group_code}, ${2:\\$arModules})$0"},
		{"trigger": "CControllerClient::RestoreModules", "contents": "${1:CControllerClient}::RestoreModules()$0"},
		{"trigger": "CControllerClient::RestoreOption", "contents": "${1:CControllerClient}::RestoreOption(${2:\\$module_id}, ${2:\\$option_id})$0"},
		{"trigger": "CControllerClient::RestoreSecurity", "contents": "${1:CControllerClient}::RestoreSecurity(${2:\\$arExcludeGroups = array()})$0"},
		{"trigger": "CControllerClient::RunCommand", "contents": "${1:CControllerClient}::RunCommand(${2:\\$command}, ${2:\\$oRequest}, ${4:\\$oResponse})$0"},
		{"trigger": "CControllerClient::SendMessage", "contents": "${1:CControllerClient}::SendMessage(${2:\\$name}, ${2:\\$status = 'Y'}, ${4:\\$description = ''})$0"},
		{"trigger": "CControllerClient::SetBackup", "contents": "${1:CControllerClient}::SetBackup(${2:\\$arBackup})$0"},
		{"trigger": "CControllerClient::SetGroupSecurity", "contents": "${1:CControllerClient}::SetGroupSecurity(${2:\\$group_code}, ${2:\\$arPermissions}, ${4:\\$arSubGroups = false})$0"},
		{"trigger": "CControllerClient::SetModules", "contents": "${1:CControllerClient}::SetModules(${2:\\$arModules})$0"},
		{"trigger": "CControllerClient::SetOptionString", "contents": "${1:CControllerClient}::SetOptionString(${2:\\$module_id}, ${2:\\$option_id}, ${4:\\$value})$0"},
		{"trigger": "CControllerClient::SetTaskSecurity", "contents": "${1:CControllerClient}::SetTaskSecurity(${2:\\$task_id}, ${2:\\$module_id}, ${4:\\$arOperations}, ${4:\\$letter = ''})$0"},
		{"trigger": "CControllerClient::Unlink", "contents": "${1:CControllerClient}::Unlink()$0"},
		{"trigger": "CControllerClient::UpdateCounters", "contents": "${1:CControllerClient}::UpdateCounters()$0"},
		{"trigger": "CControllerClient::UpdateUser", "contents": "${1:CControllerClient}::UpdateUser(${2:\\$arFields = array()})$0"},
		{"trigger": "CControllerClientRequestFrom::CControllerClientRequestFrom", "contents": "${1:CControllerClientRequestFrom}::CControllerClientRequestFrom()$0"},
		{"trigger": "CControllerClientRequestFrom::Check", "contents": "${1:CControllerClientRequestFrom}::Check()$0"},
		{"trigger": "CControllerClientRequestTo::CControllerClientRequestTo", "contents": "${1:CControllerClientRequestTo}::CControllerClientRequestTo(${2:\\$operation}, ${2:\\$arParameters = array()})$0"},
		{"trigger": "CControllerClientRequestTo::Send", "contents": "${1:CControllerClientRequestTo}::Send(${2:\\$page='/bitrix/admin/controller_ws.php'})$0"},
		{"trigger": "CControllerClientRequestTo::SendWithCheck", "contents": "${1:CControllerClientRequestTo}::SendWithCheck(${2:\\$page='/bitrix/admin/controller_ws.php'})$0"},
		{"trigger": "CControllerClientResponseFrom::CControllerClientResponseFrom", "contents": "${1:CControllerClientResponseFrom}::CControllerClientResponseFrom(${2:\\$oPacket})$0"},
		{"trigger": "CControllerClientResponseTo::CControllerClientResponseTo", "contents": "${1:CControllerClientResponseTo}::CControllerClientResponseTo(${2:\\$oPacket = false})$0"},
		{"trigger": "CControllerTools::PackFileArchive", "contents": "${1:CControllerTools}::PackFileArchive(${2:\\$path})$0"},
		{"trigger": "CControllerTools::UnpackFileArchive", "contents": "${1:CControllerTools}::UnpackFileArchive(${2:\\$strfile}, ${2:\\$path_to})$0"},
		{"trigger": "CCrypt::CCrypt", "contents": "${1:CCrypt}::CCrypt(${2:\\$blockCipherMode = CRYPT_MODE_CBC}, ${2:\\$cipher = 'blowfish'}, ${4:\\$key = ''}, ${4:\\$iv = ''})$0"},
		{"trigger": "CCrypt::CreateIV", "contents": "${1:CCrypt}::CreateIV()$0"},
		{"trigger": "CCrypt::Decrypt", "contents": "${1:CCrypt}::Decrypt(${2:\\$cipher})$0"},
		{"trigger": "CCrypt::Encrypt", "contents": "${1:CCrypt}::Encrypt(${2:\\$text})$0"},
		{"trigger": "CCrypt::__DecryptCBC", "contents": "${1:CCrypt}::__DecryptCBC(${2:\\$cipher})$0"},
		{"trigger": "CCrypt::__DecryptECB", "contents": "${1:CCrypt}::__DecryptECB(${2:\\$cipher})$0"},
		{"trigger": "CCrypt::__EncryptCBC", "contents": "${1:CCrypt}::__EncryptCBC(${2:\\$text})$0"},
		{"trigger": "CCrypt::__EncryptECB", "contents": "${1:CCrypt}::__EncryptECB(${2:\\$text})$0"},
		{"trigger": "CCryptblowfish::CCryptblowfish", "contents": "${1:CCryptblowfish}::CCryptblowfish(${2:\\$key})$0"},
		{"trigger": "CCryptblowfish::__BlowfishCrypt", "contents": "${1:CCryptblowfish}::__BlowfishCrypt(${2:&\\$Xl}, ${2:&\\$Xr})$0"},
		{"trigger": "CCryptblowfish::__BlowfishDecrypt", "contents": "${1:CCryptblowfish}::__BlowfishDecrypt(${2:&\\$Xl}, ${2:&\\$Xr})$0"},
		{"trigger": "CCryptblowfish::__Decrypt", "contents": "${1:CCryptblowfish}::__Decrypt(${2:\\$block})$0"},
		{"trigger": "CCryptblowfish::__Encrypt", "contents": "${1:CCryptblowfish}::__Encrypt(${2:\\$block})$0"},
		{"trigger": "CCryptblowfish::__F", "contents": "${1:CCryptblowfish}::__F(${2:\\$x})$0"},
		{"trigger": "CCryptblowfish::__Init", "contents": "${1:CCryptblowfish}::__Init(${2:\\$key})$0"},
		{"trigger": "CCryptrc4::CCryptrc4", "contents": "${1:CCryptrc4}::CCryptrc4(${2:\\$key})$0"},
		{"trigger": "CCryptrc4::__Decrypt", "contents": "${1:CCryptrc4}::__Decrypt(${2:\\$block})$0"},
		{"trigger": "CCryptrc4::__Encrypt", "contents": "${1:CCryptrc4}::__Encrypt(${2:\\$block})$0"},
		{"trigger": "CCryptrc4::__Init", "contents": "${1:CCryptrc4}::__Init(${2:\\$key})$0"},
		{"trigger": "CCryptrc4::__Process", "contents": "${1:CCryptrc4}::__Process(${2:\\$block})$0"},
		{"trigger": "CDBResult::AffectedRowsCount", "contents": "${1:CDBResult}::AffectedRowsCount()$0"},
		{"trigger": "CDBResult::AffectedRowsCountEx", "contents": "${1:CDBResult}::AffectedRowsCountEx()$0"},
		{"trigger": "CDBResult::CAllDBResult", "contents": "${1:CDBResult}::CAllDBResult(${2:\\$res=NULL})$0"},
		{"trigger": "CDBResult::CDBResult", "contents": "${1:CDBResult}::CDBResult(${2:\\$res=NULL})$0"},
		{"trigger": "CDBResult::DBNavStart", "contents": "${1:CDBResult}::DBNavStart()$0"},
		{"trigger": "CDBResult::ExtractEditFields", "contents": "${1:CDBResult}::ExtractEditFields(${2:\\$strPrefix='str_'})$0"},
		{"trigger": "CDBResult::ExtractFields", "contents": "${1:CDBResult}::ExtractFields(${2:\\$strPrefix='str_'}, ${2:\\$bDoEncode=true})$0"},
		{"trigger": "CDBResult::Fetch", "contents": "${1:CDBResult}::Fetch()$0"},
		{"trigger": "CDBResult::FieldName", "contents": "${1:CDBResult}::FieldName(${2:\\$iCol})$0"},
		{"trigger": "CDBResult::FieldsCount", "contents": "${1:CDBResult}::FieldsCount()$0"},
		{"trigger": "CDBResult::GetNavParams", "contents": "${1:CDBResult}::GetNavParams(${2:\\$nPageSize=0}, ${2:\\$bShowAll=true}, ${4:\\$iNumPage=false})$0"},
		{"trigger": "CDBResult::GetNavPrint", "contents": "${1:CDBResult}::GetNavPrint(${2:\\$title}, ${2:\\$show_allways=false}, ${4:\\$StyleText='text'}, ${4:\\$template_path=false}, ${6:\\$arDeleteParam=false})$0"},
		{"trigger": "CDBResult::GetNext", "contents": "${1:CDBResult}::GetNext(${2:\\$bTextHtmlAuto=true}, ${2:\\$use_tilda=true})$0"},
		{"trigger": "CDBResult::GetPageNavString", "contents": "${1:CDBResult}::GetPageNavString(${2:\\$navigationTitle}, ${2:\\$templateName = ''}, ${4:\\$showAlways=false})$0"},
		{"trigger": "CDBResult::GetPageNavStringEx", "contents": "${1:CDBResult}::GetPageNavStringEx(${2:&\\$navComponentObject}, ${2:\\$navigationTitle}, ${4:\\$templateName = ''}, ${4:\\$showAlways=false})$0"},
		{"trigger": "CDBResult::InitFromarray", "contents": "${1:CDBResult}::InitFromarray(${2:\\$arr})$0"},
		{"trigger": "CDBResult::InitNavStartVars", "contents": "${1:CDBResult}::InitNavStartVars(${2:\\$nPageSize=0}, ${2:\\$bShowAll=true}, ${4:\\$iNumPage=false})$0"},
		{"trigger": "CDBResult::IsNavPrint", "contents": "${1:CDBResult}::IsNavPrint()$0"},
		{"trigger": "CDBResult::NavContinue", "contents": "${1:CDBResult}::NavContinue()$0"},
		{"trigger": "CDBResult::NavNext", "contents": "${1:CDBResult}::NavNext(${2:\\$bSetGlobalVars=true}, ${2:\\$strPrefix='str_'}, ${4:\\$bDoEncode=true}, ${4:\\$bSkipEntities=true})$0"},
		{"trigger": "CDBResult::NavPrint", "contents": "${1:CDBResult}::NavPrint(${2:\\$title}, ${2:\\$show_allways=false}, ${4:\\$StyleText='text'}, ${4:\\$template_path=false})$0"},
		{"trigger": "CDBResult::NavQuery", "contents": "${1:CDBResult}::NavQuery(${2:\\$strSql}, ${2:\\$cnt}, ${4:\\$arNavStartParams})$0"},
		{"trigger": "CDBResult::NavStart", "contents": "${1:CDBResult}::NavStart(${2:\\$nPageSize=0}, ${2:\\$bShowAll=true}, ${4:\\$iNumPage=false})$0"},
		{"trigger": "CDBResult::NavStringForCache", "contents": "${1:CDBResult}::NavStringForCache(${2:\\$nPageSize=0}, ${2:\\$bShowAll=true}, ${4:\\$iNumPage=false})$0"},
		{"trigger": "CDBResult::SelectedRowsCount", "contents": "${1:CDBResult}::SelectedRowsCount()$0"},
		{"trigger": "CDBResult::SetUserFields", "contents": "${1:CDBResult}::SetUserFields(${2:\\$arUserFields})$0"},
		{"trigger": "CDataXML::CDataXML", "contents": "${1:CDataXML}::CDataXML(${2:\\$TrimWhiteSpace = True})$0"},
		{"trigger": "CDataXML::Load", "contents": "${1:CDataXML}::Load(${2:\\$file})$0"},
		{"trigger": "CDataXML::LoadString", "contents": "${1:CDataXML}::LoadString(${2:\\$text})$0"},
		{"trigger": "CDataXML::__parse", "contents": "${1:CDataXML}::__parse(${2:&\\$strXMLText})$0"},
		{"trigger": "CDataXML::__stripComments", "contents": "${1:CDataXML}::__stripComments(${2:&\\$str})$0"},
		{"trigger": "CDataXML::xmlspecialchars", "contents": "${1:CDataXML}::xmlspecialchars(${2:\\$str})$0"},
		{"trigger": "CDataXML::xmlspecialcharsback", "contents": "${1:CDataXML}::xmlspecialcharsback(${2:\\$str})$0"},
		{"trigger": "CDataXMLDocument::CDataXMLDocument", "contents": "${1:CDataXMLDocument}::CDataXMLDocument()$0"},
		{"trigger": "CDataXMLDocument::elementsByName", "contents": "${1:CDataXMLDocument}::elementsByName(${2:\\$tagname})$0"},
		{"trigger": "CDataXMLDocument::encodeDataTypes", "contents": "${1:CDataXMLDocument}::encodeDataTypes(${2: \\$name}, ${2:\\$value})$0"},
		{"trigger": "CDataXMLNode::CDataXMLNode", "contents": "${1:CDataXMLNode}::CDataXMLNode()$0"},
		{"trigger": "CDataXMLNode::_SaveDataType_OnDecode", "contents": "${1:CDataXMLNode}::_SaveDataType_OnDecode(${2:&\\$result}, ${2:\\$name}, ${4:\\$value})$0"},
		{"trigger": "CDataXMLNode::children", "contents": "${1:CDataXMLNode}::children()$0"},
		{"trigger": "CDataXMLNode::decodeDataTypes", "contents": "${1:CDataXMLNode}::decodeDataTypes(${2:\\$attrAsNodeDecode = false})$0"},
		{"trigger": "CDataXMLNode::elementsByName", "contents": "${1:CDataXMLNode}::elementsByName(${2:\\$tagname})$0"},
		{"trigger": "CDataXMLNode::getAttribute", "contents": "${1:CDataXMLNode}::getAttribute(${2:\\$attribute})$0"},
		{"trigger": "CDataXMLNode::getAttributes", "contents": "${1:CDataXMLNode}::getAttributes()$0"},
		{"trigger": "CDataXMLNode::name", "contents": "${1:CDataXMLNode}::name()$0"},
		{"trigger": "CDataXMLNode::namespaceURI", "contents": "${1:CDataXMLNode}::namespaceURI()$0"},
		{"trigger": "CDataXMLNode::textContent", "contents": "${1:CDataXMLNode}::textContent()$0"},
		{"trigger": "$DB->Add", "contents": "$DB->Add(${2:\\$tablename}, ${2:\\$arFields}, ${4:\\$arCLOBFields = array()}, ${4:\\$strFileDir=''}, ${6:\\$ignore_errors=false}, ${6:\\$error_position=''}, ${8:\\$arOptions=array()})$0"},
		{"trigger": "$DB->CharToDateFunction", "contents": "$DB->CharToDateFunction(${2:\\$strValue}, ${2:\\$strType='FULL'}, ${4:\\$lang=false})$0"},
		{"trigger": "$DB->Commit", "contents": "$DB->Commit()$0"},
		{"trigger": "$DB->CompareDates", "contents": "$DB->CompareDates(${2:\\$date1}, ${2:\\$date2})$0"},
		{"trigger": "$DB->Concat", "contents": "$DB->Concat()$0"},
		{"trigger": "$DB->Connect", "contents": "$DB->Connect(${2:$DBHost}, ${2:$DBName}, ${4:$DBLogin}, ${4:$DBPassword})$0"},
		{"trigger": "$DB->CurrentDateFunction", "contents": "$DB->CurrentDateFunction()$0"},
		{"trigger": "$DB->CurrentTimeFunction", "contents": "$DB->CurrentTimeFunction()$0"},
		{"trigger": "$DB->DDL", "contents": "$DB->DDL(${2:\\$strSql}, ${2:\\$bIgnoreErrors=false}, ${4:\\$error_position=''}, ${4:\\$arOptions=array()})$0"},
		{"trigger": "$DB->DateFormatToDB", "contents": "$DB->DateFormatToDB(${2:\\$format}, ${2:\\$field = false})$0"},
		{"trigger": "$DB->DateFormatToPHP", "contents": "$DB->DateFormatToPHP(${2:\\$f})$0"},
		{"trigger": "$DB->DateToCharFunction", "contents": "$DB->DateToCharFunction(${2:\\$strFieldName}, ${2:\\$strType='FULL'}, ${4:\\$lang=false}, ${4:\\$bSearchInSitesOnly=false})$0"},
		{"trigger": "$DB->Disconnect", "contents": "$DB->Disconnect()$0"},
		{"trigger": "$DB->DoConnect", "contents": "$DB->DoConnect()$0"},
		{"trigger": "$DB->ForSql", "contents": "$DB->ForSql(${2:\\$strValue}, ${2:\\$iMaxLength=0})$0"},
		{"trigger": "$DB->ForSqlLike", "contents": "$DB->ForSqlLike(${2:\\$strValue}, ${2:\\$iMaxLength=0})$0"},
		{"trigger": "$DB->FormatDate", "contents": "$DB->FormatDate(${2:\\$strDate}, ${2:\\$format='DD.MM.YYYY HH:MI:SS'}, ${4:\\$new_format='DD.MM.YYYY HH:MI:SS'})$0"},
		{"trigger": "$DB->GetDBNodeConnection", "contents": "$DB->GetDBNodeConnection(${2:\\$node_id}, ${2:\\$bIgnoreErrors = false}, ${4:\\$bCheckStatus = true})$0"},
		{"trigger": "$DB->GetErrorMessage", "contents": "$DB->GetErrorMessage()$0"},
		{"trigger": "$DB->GetErrorSQL", "contents": "$DB->GetErrorSQL()$0"},
		{"trigger": "$DB->GetIndexName", "contents": "$DB->GetIndexName(${2:\\$tableName}, ${2:\\$arColumns}, ${4:\\$bStrict = false})$0"},
		{"trigger": "$DB->GetModuleConnection", "contents": "$DB->GetModuleConnection(${2:\\$module_id}, ${2:\\$bModuleInclude = false})$0"},
		{"trigger": "$DB->GetNowDate", "contents": "$DB->GetNowDate()$0"},
		{"trigger": "$DB->GetNowFunction", "contents": "$DB->GetNowFunction()$0"},
		{"trigger": "$DB->GetTableFields", "contents": "$DB->GetTableFields(${2:\\$table})$0"},
		{"trigger": "$DB->GetTableFieldsList", "contents": "$DB->GetTableFieldsList(${2:\\$table})$0"},
		{"trigger": "$DB->GetVersion", "contents": "$DB->GetVersion()$0"},
		{"trigger": "$DB->IndexExists", "contents": "$DB->IndexExists(${2:\\$tableName}, ${2:\\$arColumns})$0"},
		{"trigger": "$DB->InitTableVarsForEdit", "contents": "$DB->InitTableVarsForEdit(${2:\\$tablename}, ${2:\\$strIdentFrom='str_'}, ${4:\\$strIdentTo='str_'}, ${4:\\$strSuffixFrom=''}, ${6:\\$bAlways=false})$0"},
		{"trigger": "$DB->Insert", "contents": "$DB->Insert(${2:\\$table}, ${2:\\$arFields}, ${4:\\$error_position=''}, ${4:\\$DEBUG=false}, ${6:\\$EXIST_ID=''}, ${6:\\$ignore_errors=false})$0"},
		{"trigger": "$DB->IsDate", "contents": "$DB->IsDate(${2:\\$value}, ${2:\\$format=false}, ${4:\\$lang=false}, ${4:\\$format_type='SHORT'})$0"},
		{"trigger": "$DB->IsNull", "contents": "$DB->IsNull(${2:\\$expression}, ${2:\\$result})$0"},
		{"trigger": "$DB->LastID", "contents": "$DB->LastID()$0"},
		{"trigger": "$DB->Length", "contents": "$DB->Length(${2:\\$field})$0"},
		{"trigger": "$DB->LockTables", "contents": "$DB->LockTables(${2:\\$str})$0"},
		{"trigger": "$DB->ParseSqlBatch", "contents": "$DB->ParseSqlBatch(${2:\\$strSql}, ${2:\\$bIncremental = False})$0"},
		{"trigger": "$DB->PrepareFields", "contents": "$DB->PrepareFields(${2:\\$strTableName}, ${2:\\$strPrefix = 'str_'}, ${4:\\$strSuffix = ''})$0"},
		{"trigger": "$DB->PrepareInsert", "contents": "$DB->PrepareInsert(${2:\\$strTableName}, ${2:\\$arFields}, ${4:\\$strFileDir=''}, ${4:\\$lang=false})$0"},
		{"trigger": "$DB->PrepareUpdate", "contents": "$DB->PrepareUpdate(${2:\\$strTableName}, ${2:\\$arFields}, ${4:\\$strFileDir=''}, ${4:\\$lang = false})$0"},
		{"trigger": "$DB->PrepareUpdateBind", "contents": "$DB->PrepareUpdateBind(${2:\\$strTableName}, ${2:\\$arFields}, ${4:\\$strFileDir}, ${4:\\$lang}, ${6:&\\$arBinds})$0"},
		{"trigger": "$DB->Query", "contents": "$DB->Query(${2:\\$strSql}, ${2:\\$bIgnoreErrors=false}, ${4:\\$error_position=''}, ${4:\\$arOptions=array()})$0"},
		{"trigger": "$DB->QueryBind", "contents": "$DB->QueryBind(${2:\\$strSql}, ${2:\\$arBinds}, ${4:\\$bIgnoreErrors=false})$0"},
		{"trigger": "$DB->QueryLong", "contents": "$DB->QueryLong(${2:\\$strSql}, ${2:\\$bIgnoreErrors = false})$0"},
		{"trigger": "$DB->Rollback", "contents": "$DB->Rollback()$0"},
		{"trigger": "$DB->RunSQLBatch", "contents": "$DB->RunSQLBatch(${2:\\$filepath}, ${2:\\$bIncremental = False})$0"},
		{"trigger": "$DB->SlaveConnection", "contents": "$DB->SlaveConnection()$0"},
		{"trigger": "$DB->StartTransaction", "contents": "$DB->StartTransaction()$0"},
		{"trigger": "$DB->StartUsingMasterOnly", "contents": "$DB->StartUsingMasterOnly()$0"},
		{"trigger": "$DB->StopUsingMasterOnly", "contents": "$DB->StopUsingMasterOnly()$0"},
		{"trigger": "$DB->Substr", "contents": "$DB->Substr(${2:\\$str}, ${2:\\$from}, ${4:\\$length = null})$0"},
		{"trigger": "$DB->TableExists", "contents": "$DB->TableExists(${2:\\$tableName})$0"},
		{"trigger": "$DB->ToChar", "contents": "$DB->ToChar(${2:\\$expr}, ${2:\\$len=0})$0"},
		{"trigger": "$DB->TopSql", "contents": "$DB->TopSql(${2:\\$strSql}, ${2:\\$nTopCount})$0"},
		{"trigger": "$DB->UnLockTables", "contents": "$DB->UnLockTables()$0"},
		{"trigger": "$DB->Update", "contents": "$DB->Update(${2:\\$table}, ${2:\\$arFields}, ${4:\\$WHERE=''}, ${4:\\$error_position=''}, ${6:\\$DEBUG=false}, ${6:\\$ignore_errors=false}, ${8:\\$additional_check=true})$0"},
		{"trigger": "CDebugInfo::Output", "contents": "${1:CDebugInfo}::Output(${2:\\$rel_path=''}, ${2:\\$path=''}, ${4:\\$cache_type=''})$0"},
		{"trigger": "CDebugInfo::Start", "contents": "${1:CDebugInfo}::Start()$0"},
		{"trigger": "CDebugInfo::Stop", "contents": "${1:CDebugInfo}::Stop(${2:\\$rel_path=''}, ${2:\\$path=''}, ${4:\\$cache_type=''})$0"},
		{"trigger": "CDebugInfo::__construct", "contents": "${1:CDebugInfo}::__construct(${2:\\$is_comp = true})$0"},
		{"trigger": "CDiskQuota::CAllDiskQuota", "contents": "${1:CDiskQuota}::CAllDiskQuota(${2:\\$params = array()})$0"},
		{"trigger": "CDiskQuota::CheckDiskQuota", "contents": "${1:CDiskQuota}::CheckDiskQuota(${2:\\$params = array()})$0"},
		{"trigger": "CDiskQuota::GetDirListFromLastFile", "contents": "${1:CDiskQuota}::GetDirListFromLastFile(${2:\\$path}, ${2:\\$path_to_last_file=''}, ${4:\\$check_time = true}, ${4:\\$skip_dir = false})$0"},
		{"trigger": "CDiskQuota::GetDirListSimple", "contents": "${1:CDiskQuota}::GetDirListSimple(${2:\\$path}, ${2:\\$check_time = true}, ${4:\\$skip_dir=false})$0"},
		{"trigger": "CDiskQuota::GetDiskQuota", "contents": "${1:CDiskQuota}::GetDiskQuota()$0"},
		{"trigger": "CDiskQuota::Recount", "contents": "${1:CDiskQuota}::Recount(${2:\\$id}, ${2:\\$recount=false})$0"},
		{"trigger": "CDiskQuota::SetDBSize", "contents": "${1:CDiskQuota}::SetDBSize()$0"},
		{"trigger": "CDiskQuota::SetDirSize", "contents": "${1:CDiskQuota}::SetDirSize(${2:\\$path=''}, ${2:\\$name=''}, ${4:\\$recount=false}, ${4:\\$skip_dir = false})$0"},
		{"trigger": "CDiskQuota::UpdateDiskQuota", "contents": "${1:CDiskQuota}::UpdateDiskQuota(${2:\\$type}, ${2:\\$size}, ${4:\\$action})$0"},
		{"trigger": "CEditArea::DrawIcons", "contents": "${1:CEditArea}::DrawIcons(${2:\\$arIcons}, ${2:\\$arParams=array()})$0"},
		{"trigger": "CEditArea::GetJSIconMenu", "contents": "${1:CEditArea}::GetJSIconMenu(${2:\\$arMenu})$0"},
		{"trigger": "CEditArea::SetEditArea", "contents": "${1:CEditArea}::SetEditArea(${2:\\$areaId}, ${2:\\$arIcons})$0"},
		{"trigger": "CEditArea::__GetEditAreas", "contents": "${1:CEditArea}::__GetEditAreas()$0"},
		{"trigger": "CEntityField::getDataType", "contents": "${1:CEntityField}::getDataType()$0"},
		{"trigger": "CEntityField::getEntity", "contents": "${1:CEntityField}::getEntity()$0"},
		{"trigger": "CEntityField::getName", "contents": "${1:CEntityField}::getName()$0"},
		{"trigger": "CEntityQuery::__construct", "contents": "${1:CEntityQuery}::__construct(${2:CBaseEntity \\$entity})$0"},
		{"trigger": "CEntityQuery::addFilter", "contents": "${1:CEntityQuery}::addFilter(${2:\\$key}, ${2:\\$value})$0"},
		{"trigger": "CEntityQuery::addGroup", "contents": "${1:CEntityQuery}::addGroup(${2:\\$group})$0"},
		{"trigger": "CEntityQuery::addOption", "contents": "${1:CEntityQuery}::addOption(${2:\\$option_name}, ${2:\\$option_value})$0"},
		{"trigger": "CEntityQuery::addOrder", "contents": "${1:CEntityQuery}::addOrder(${2:\\$definition}, ${2:\\$order = 'ASC'})$0"},
		{"trigger": "CEntityQuery::addSelect", "contents": "${1:CEntityQuery}::addSelect(${2:\\$definition}, ${2:\\$alias = ''})$0"},
		{"trigger": "CEntityQuery::addToGroupChain", "contents": "${1:CEntityQuery}::addToGroupChain(${2:\\$definition})$0"},
		{"trigger": "CEntityQuery::addToOrderChain", "contents": "${1:CEntityQuery}::addToOrderChain(${2:\\$definition})$0"},
		{"trigger": "CEntityQuery::addToSelectChain", "contents": "${1:CEntityQuery}::addToSelectChain(${2:\\$definition}, ${2:\\$alias = ''})$0"},
		{"trigger": "CEntityQuery::buildGroup", "contents": "${1:CEntityQuery}::buildGroup()$0"},
		{"trigger": "CEntityQuery::buildHaving", "contents": "${1:CEntityQuery}::buildHaving()$0"},
		{"trigger": "CEntityQuery::buildJoin", "contents": "${1:CEntityQuery}::buildJoin()$0"},
		{"trigger": "CEntityQuery::buildJoinMap", "contents": "${1:CEntityQuery}::buildJoinMap()$0"},
		{"trigger": "CEntityQuery::buildOrder", "contents": "${1:CEntityQuery}::buildOrder()$0"},
		{"trigger": "CEntityQuery::buildSelect", "contents": "${1:CEntityQuery}::buildSelect()$0"},
		{"trigger": "CEntityQuery::buildWhere", "contents": "${1:CEntityQuery}::buildWhere()$0"},
		{"trigger": "CEntityQuery::checkChainsAggregation", "contents": "${1:CEntityQuery}::checkChainsAggregation(${2:\\$chain})$0"},
		{"trigger": "CEntityQuery::checkFilterAggregation", "contents": "${1:CEntityQuery}::checkFilterAggregation(${2:\\$filter})$0"},
		{"trigger": "CEntityQuery::collectExprChains", "contents": "${1:CEntityQuery}::collectExprChains(${2:CEntityQueryChain \\$chain}, ${2:\\$storages = array('hidden')})$0"},
		{"trigger": "CEntityQuery::divideFilter", "contents": "${1:CEntityQuery}::divideFilter()$0"},
		{"trigger": "CEntityQuery::dump", "contents": "${1:CEntityQuery}::dump()$0"},
		{"trigger": "CEntityQuery::exec", "contents": "${1:CEntityQuery}::exec()$0"},
		{"trigger": "CEntityQuery::getFilter", "contents": "${1:CEntityQuery}::getFilter()$0"},
		{"trigger": "CEntityQuery::getFilterCswFields", "contents": "${1:CEntityQuery}::getFilterCswFields(${2:&\\$filter})$0"},
		{"trigger": "CEntityQuery::getGroup", "contents": "${1:CEntityQuery}::getGroup()$0"},
		{"trigger": "CEntityQuery::getJoinCswFields", "contents": "${1:CEntityQuery}::getJoinCswFields(${2:\\$reference})$0"},
		{"trigger": "CEntityQuery::getLastQuery", "contents": "${1:CEntityQuery}::getLastQuery()$0"},
		{"trigger": "CEntityQuery::getLimit", "contents": "${1:CEntityQuery}::getLimit(${2:\\$limit})$0"},
		{"trigger": "CEntityQuery::getOptions", "contents": "${1:CEntityQuery}::getOptions(${2:\\$options})$0"},
		{"trigger": "CEntityQuery::getOrder", "contents": "${1:CEntityQuery}::getOrder()$0"},
		{"trigger": "CEntityQuery::getRegisteredChain", "contents": "${1:CEntityQuery}::getRegisteredChain(${2:\\$key}, ${2:\\$force_create = false})$0"},
		{"trigger": "CEntityQuery::getSelect", "contents": "${1:CEntityQuery}::getSelect()$0"},
		{"trigger": "CEntityQuery::prepareJoinReference", "contents": "${1:CEntityQuery}::prepareJoinReference(${2:\\$reference}, ${2:\\$alias_this}, ${4:\\$alias_ref})$0"},
		{"trigger": "CEntityQuery::query", "contents": "${1:CEntityQuery}::query(${2:\\$sqlSelect}, ${2:\\$sqlJoin}, ${4:\\$sqlWhere}, ${4:\\$sqlGroup}, ${6:\\$sqlHaving}, ${6:\\$sqlOrder})$0"},
		{"trigger": "CEntityQuery::registerChain", "contents": "${1:CEntityQuery}::registerChain(${2:\\$section}, ${2:CEntityQueryChain \\$chain}, ${4:\\$opt_key = null})$0"},
		{"trigger": "CEntityQuery::registerRuntimeField", "contents": "${1:CEntityQuery}::registerRuntimeField(${2:\\$name}, ${2:\\$fieldInfo})$0"},
		{"trigger": "CEntityQuery::replaceSelectAliases", "contents": "${1:CEntityQuery}::replaceSelectAliases(${2:\\$query})$0"},
		{"trigger": "CEntityQuery::setFilter", "contents": "${1:CEntityQuery}::setFilter(${2:array \\$filter})$0"},
		{"trigger": "CEntityQuery::setFilterChains", "contents": "${1:CEntityQuery}::setFilterChains(${2:array \\$filter}, ${2:\\$section = 'filter'})$0"},
		{"trigger": "CEntityQuery::setGroup", "contents": "${1:CEntityQuery}::setGroup(${2:\\$group})$0"},
		{"trigger": "CEntityQuery::setLimit", "contents": "${1:CEntityQuery}::setLimit(${2:array \\$limit})$0"},
		{"trigger": "CEntityQuery::setOptions", "contents": "${1:CEntityQuery}::setOptions(${2:\\$options})$0"},
		{"trigger": "CEntityQuery::setOrder", "contents": "${1:CEntityQuery}::setOrder(${2:array \\$order})$0"},
		{"trigger": "CEntityQuery::setSelect", "contents": "${1:CEntityQuery}::setSelect(${2:array \\$select})$0"},
		{"trigger": "CEntityQueryChain::__construct", "contents": "${1:CEntityQueryChain}::__construct()$0"},
		{"trigger": "CEntityQueryChain::addElement", "contents": "${1:CEntityQueryChain}::addElement(${2:CEntityQueryChainElement \\$element})$0"},
		{"trigger": "CEntityQueryChain::dump", "contents": "${1:CEntityQueryChain}::dump()$0"},
		{"trigger": "CEntityQueryChain::getAlias", "contents": "${1:CEntityQueryChain}::getAlias()$0"},
		{"trigger": "CEntityQueryChain::getAliasByChain", "contents": "${1:CEntityQueryChain}::getAliasByChain(${2:CEntityQueryChain \\$chain})$0"},
		{"trigger": "CEntityQueryChain::getAliasByDefinition", "contents": "${1:CEntityQueryChain}::getAliasByDefinition(${2:CBaseEntity \\$entity}, ${2:\\$definition})$0"},
		{"trigger": "CEntityQueryChain::getAllElements", "contents": "${1:CEntityQueryChain}::getAllElements()$0"},
		{"trigger": "CEntityQueryChain::getChainByDefinition", "contents": "${1:CEntityQueryChain}::getChainByDefinition(${2:CBaseEntity \\$init_entity}, ${2:\\$definition})$0"},
		{"trigger": "CEntityQueryChain::getDefinition", "contents": "${1:CEntityQueryChain}::getDefinition()$0"},
		{"trigger": "CEntityQueryChain::getDefinitionByChain", "contents": "${1:CEntityQueryChain}::getDefinitionByChain(${2:CEntityQueryChain \\$chain})$0"},
		{"trigger": "CEntityQueryChain::getFirstElement", "contents": "${1:CEntityQueryChain}::getFirstElement()$0"},
		{"trigger": "CEntityQueryChain::getLastElement", "contents": "${1:CEntityQueryChain}::getLastElement()$0"},
		{"trigger": "CEntityQueryChain::getSize", "contents": "${1:CEntityQueryChain}::getSize()$0"},
		{"trigger": "CEntityQueryChain::getSqlDefinition", "contents": "${1:CEntityQueryChain}::getSqlDefinition(${2:\\$with_alias = false})$0"},
		{"trigger": "CEntityQueryChain::hasAggregation", "contents": "${1:CEntityQueryChain}::hasAggregation()$0"},
		{"trigger": "CEntityQueryChain::removeLastElement", "contents": "${1:CEntityQueryChain}::removeLastElement()$0"},
		{"trigger": "CEntityQueryChainElement::__construct", "contents": "${1:CEntityQueryChainElement}::__construct(${2:\\$element}, ${2:\\$parameters = array()})$0"},
		{"trigger": "CEntityQueryChainElement::dump", "contents": "${1:CEntityQueryChainElement}::dump()$0"},
		{"trigger": "CEntityQueryChainElement::getAliasFragment", "contents": "${1:CEntityQueryChainElement}::getAliasFragment()$0"},
		{"trigger": "CEntityQueryChainElement::getDefinitionFragment", "contents": "${1:CEntityQueryChainElement}::getDefinitionFragment()$0"},
		{"trigger": "CEntityQueryChainElement::getParameter", "contents": "${1:CEntityQueryChainElement}::getParameter(${2:\\$name})$0"},
		{"trigger": "CEntityQueryChainElement::getSqlDefinition", "contents": "${1:CEntityQueryChainElement}::getSqlDefinition()$0"},
		{"trigger": "CEntityQueryChainElement::getValue", "contents": "${1:CEntityQueryChainElement}::getValue()$0"},
		{"trigger": "CEntityQueryChainElement::setParameter", "contents": "${1:CEntityQueryChainElement}::setParameter(${2:\\$name}, ${2:\\$value})$0"},
		{"trigger": "CEvent::CheckEvents", "contents": "${1:CEvent}::CheckEvents()$0"},
		{"trigger": "CEvent::CleanUpAgent", "contents": "${1:CEvent}::CleanUpAgent()$0"},
		{"trigger": "CEvent::EncodeHeaderFrom", "contents": "${1:CEvent}::EncodeHeaderFrom(${2:\\$text}, ${2:\\$charset})$0"},
		{"trigger": "CEvent::EncodeMimeString", "contents": "${1:CEvent}::EncodeMimeString(${2:\\$text}, ${2:\\$charset})$0"},
		{"trigger": "CEvent::EncodeSubject", "contents": "${1:CEvent}::EncodeSubject(${2:\\$text}, ${2:\\$charset})$0"},
		{"trigger": "CEvent::ExecuteEvents", "contents": "${1:CEvent}::ExecuteEvents()$0"},
		{"trigger": "CEvent::ExtractMailFields", "contents": "${1:CEvent}::ExtractMailFields(${2:\\$str})$0"},
		{"trigger": "CEvent::GetMailEOL", "contents": "${1:CEvent}::GetMailEOL()$0"},
		{"trigger": "CEvent::GetSiteFieldsarray", "contents": "${1:CEvent}::GetSiteFieldsarray(${2:\\$site_id})$0"},
		{"trigger": "CEvent::HandleEvent", "contents": "${1:CEvent}::HandleEvent(${2:\\$arEvent})$0"},
		{"trigger": "CEvent::Is8Bit", "contents": "${1:CEvent}::Is8Bit(${2:\\$str})$0"},
		{"trigger": "CEvent::ReplaceTemplate", "contents": "${1:CEvent}::ReplaceTemplate(${2:\\$str}, ${2:\\$ar}, ${4:\\$bNewLineToBreak=false})$0"},
		{"trigger": "CEvent::Send", "contents": "${1:CEvent}::Send(${2:\\$event}, ${2:\\$lid}, ${4:\\$arFields}, ${4:\\$Duplicate = 'Y'}, ${6:\\$message_id=''})$0"},
		{"trigger": "CEvent::SendImmediate", "contents": "${1:CEvent}::SendImmediate(${2:\\$event}, ${2:\\$lid}, ${4:\\$arFields}, ${4:\\$Duplicate = 'Y'}, ${6:\\$message_id=''})$0"},
		{"trigger": "CEvent::fieldencode", "contents": "${1:CEvent}::fieldencode(${2:\\$s})$0"},
		{"trigger": "CEventLog::Add", "contents": "${1:CEventLog}::Add(${2:\\$arFields})$0"},
		{"trigger": "CEventLog::CleanUpAgent", "contents": "${1:CEventLog}::CleanUpAgent()$0"},
		{"trigger": "CEventLog::GetList", "contents": "${1:CEventLog}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CEventLog::Log", "contents": "${1:CEventLog}::Log(${2:\\$SEVERITY}, ${2:\\$AUDIT_TYPE_ID}, ${4:\\$MODULE_ID}, ${4:\\$ITEM_ID}, ${6:\\$DESCRIPTION = false})$0"},
		{"trigger": "CEventMain::GetAuditTypes", "contents": "${1:CEventMain}::GetAuditTypes()$0"},
		{"trigger": "CEventMain::GetEventInfo", "contents": "${1:CEventMain}::GetEventInfo(${2:\\$row}, ${2:\\$arParams})$0"},
		{"trigger": "CEventMain::GetFilter", "contents": "${1:CEventMain}::GetFilter()$0"},
		{"trigger": "CEventMain::GetFilterSQL", "contents": "${1:CEventMain}::GetFilterSQL(${2:\\$var})$0"},
		{"trigger": "CEventMain::MakeMainObject", "contents": "${1:CEventMain}::MakeMainObject()$0"},
		{"trigger": "CEventMessage::Add", "contents": "${1:CEventMessage}::Add(${2:\\$arFields})$0"},
		{"trigger": "CEventMessage::CheckFields", "contents": "${1:CEventMessage}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CEventMessage::Delete", "contents": "${1:CEventMessage}::Delete(${2:\\$ID})$0"},
		{"trigger": "CEventMessage::GetByID", "contents": "${1:CEventMessage}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CEventMessage::GetLang", "contents": "${1:CEventMessage}::GetLang(${2:\\$event_message_id})$0"},
		{"trigger": "CEventMessage::GetList", "contents": "${1:CEventMessage}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CEventMessage::GetSite", "contents": "${1:CEventMessage}::GetSite(${2:\\$event_message_id})$0"},
		{"trigger": "CEventMessage::Update", "contents": "${1:CEventMessage}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CEventType::Add", "contents": "${1:CEventType}::Add(${2:\\$arFields})$0"},
		{"trigger": "CEventType::CheckFields", "contents": "${1:CEventType}::CheckFields(${2:\\$arFields = array()}, ${2:\\$action = 'ADD'}, ${4:\\$ID = array()})$0"},
		{"trigger": "CEventType::Delete", "contents": "${1:CEventType}::Delete(${2:\\$arID})$0"},
		{"trigger": "CEventType::GetByID", "contents": "${1:CEventType}::GetByID(${2:\\$ID}, ${2:\\$LID})$0"},
		{"trigger": "CEventType::GetFilterOperation", "contents": "${1:CEventType}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CEventType::GetList", "contents": "${1:CEventType}::GetList(${2:\\$arFilter=array()}, ${2:\\$arOrder=array()})$0"},
		{"trigger": "CEventType::GetListEx", "contents": "${1:CEventType}::GetListEx(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CEventType::Update", "contents": "${1:CEventType}::Update(${2:\\$arID = array()}, ${2:\\$arFields = array()})$0"},
		{"trigger": "CExpressionEntityField::__call", "contents": "${1:CExpressionEntityField}::__call(${2:\\$name}, ${2:\\$arguments})$0"},
		{"trigger": "CExpressionEntityField::__clone", "contents": "${1:CExpressionEntityField}::__clone()$0"},
		{"trigger": "CExpressionEntityField::__construct", "contents": "${1:CExpressionEntityField}::__construct(${2:\\$name}, ${2:\\$dataType}, ${4:CBaseEntity \\$entity}, ${4:\\$expression}, ${6:\\$parameters = array()})$0"},
		{"trigger": "CExpressionEntityField::checkAggregation", "contents": "${1:CExpressionEntityField}::checkAggregation(${2:\\$expression})$0"},
		{"trigger": "CExpressionEntityField::getBuildFromChains", "contents": "${1:CExpressionEntityField}::getBuildFromChains()$0"},
		{"trigger": "CExpressionEntityField::getExpression", "contents": "${1:CExpressionEntityField}::getExpression()$0"},
		{"trigger": "CExpressionEntityField::getFullExpression", "contents": "${1:CExpressionEntityField}::getFullExpression()$0"},
		{"trigger": "CExpressionEntityField::isAggregated", "contents": "${1:CExpressionEntityField}::isAggregated()$0"},
		{"trigger": "CFavorites::Add", "contents": "${1:CFavorites}::Add(${2:\\$arFields})$0"},
		{"trigger": "CFavorites::CheckFields", "contents": "${1:CFavorites}::CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CFavorites::Delete", "contents": "${1:CFavorites}::Delete(${2:\\$ID})$0"},
		{"trigger": "CFavorites::GetByID", "contents": "${1:CFavorites}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CFavorites::GetList", "contents": "${1:CFavorites}::GetList(${2:\\$aSort=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CFavorites::OnLanguageDelete", "contents": "${1:CFavorites}::OnLanguageDelete(${2:\\$language_id})$0"},
		{"trigger": "CFavorites::OnUserDelete", "contents": "${1:CFavorites}::OnUserDelete(${2:\\$user_id})$0"},
		{"trigger": "CFavorites::Update", "contents": "${1:CFavorites}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CFavorites::err_mess", "contents": "${1:CFavorites}::err_mess()$0"},
		{"trigger": "CFile::ApplyImageFilter", "contents": "${1:CFile}::ApplyImageFilter(${2:\\$picture}, ${2:\\$arFilter}, ${4:\\$bHasAlpha = true})$0"},
		{"trigger": "CFile::ChangeSubDir", "contents": "${1:CFile}::ChangeSubDir(${2:\\$module_id}, ${2:\\$old_subdir}, ${4:\\$new_subdir})$0"},
		{"trigger": "CFile::CheckFile", "contents": "${1:CFile}::CheckFile(${2:\\$arFile}, ${2:\\$intMaxSize=0}, ${4:\\$strMimeType=false}, ${4:\\$strExt=false})$0"},
		{"trigger": "CFile::CheckImageFile", "contents": "${1:CFile}::CheckImageFile(${2:\\$arFile}, ${2:\\$iMaxSize=0}, ${4:\\$iMaxWidth=0}, ${4:\\$iMaxHeight=0}, ${6:\\$access_typies=array()})$0"},
		{"trigger": "CFile::CleanCache", "contents": "${1:CFile}::CleanCache(${2:\\$ID})$0"},
		{"trigger": "CFile::ConvertFilesToPost", "contents": "${1:CFile}::ConvertFilesToPost(${2:\\$source}, ${2:&\\$target}, ${4:\\$field=false})$0"},
		{"trigger": "CFile::CopyFile", "contents": "${1:CFile}::CopyFile(${2:\\$FILE_ID}, ${2:\\$bRegister = true}, ${4:\\$newPath = ''})$0"},
		{"trigger": "CFile::CreateImage", "contents": "${1:CFile}::CreateImage(${2:\\$path}, ${2:\\$type = false})$0"},
		{"trigger": "CFile::Delete", "contents": "${1:CFile}::Delete(${2:\\$ID})$0"},
		{"trigger": "CFile::DisableJSFunction", "contents": "${1:CFile}::DisableJSFunction(${2:\\$b=true})$0"},
		{"trigger": "CFile::DoDelete", "contents": "${1:CFile}::DoDelete(${2:\\$ID})$0"},
		{"trigger": "CFile::DoInsert", "contents": "${1:CFile}::DoInsert(${2:\\$arFields})$0"},
		{"trigger": "CFile::ExtractImageExif", "contents": "${1:CFile}::ExtractImageExif(${2:\\$src})$0"},
		{"trigger": "CFile::ExtractImageIPTC", "contents": "${1:CFile}::ExtractImageIPTC(${2:\\$src})$0"},
		{"trigger": "CFile::FormatSize", "contents": "${1:CFile}::FormatSize(${2:\\$size}, ${2:\\$precision = 2})$0"},
		{"trigger": "CFile::GetByID", "contents": "${1:CFile}::GetByID(${2:\\$FILE_ID})$0"},
		{"trigger": "CFile::GetContentType", "contents": "${1:CFile}::GetContentType(${2:\\$path})$0"},
		{"trigger": "CFile::GetFilearray", "contents": "${1:CFile}::GetFilearray(${2:\\$FILE_ID}, ${2:\\$upload_dir = false})$0"},
		{"trigger": "CFile::GetFileSRC", "contents": "${1:CFile}::GetFileSRC(${2:\\$arFile}, ${2:\\$upload_dir = false}, ${4:\\$external = true})$0"},
		{"trigger": "CFile::GetFlashExtensions", "contents": "${1:CFile}::GetFlashExtensions()$0"},
		{"trigger": "CFile::GetFromCache", "contents": "${1:CFile}::GetFromCache(${2:\\$FILE_ID})$0"},
		{"trigger": "CFile::GetImageExtensions", "contents": "${1:CFile}::GetImageExtensions()$0"},
		{"trigger": "CFile::GetImageSize", "contents": "${1:CFile}::GetImageSize(${2:\\$path})$0"},
		{"trigger": "CFile::GetList", "contents": "${1:CFile}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CFile::GetPath", "contents": "${1:CFile}::GetPath(${2:\\$img_id})$0"},
		{"trigger": "CFile::GetTempName", "contents": "${1:CFile}::GetTempName(${2:\\$dir_name = false}, ${2:\\$file_name = ''})$0"},
		{"trigger": "CFile::ImageCreateFromBMP", "contents": "${1:CFile}::ImageCreateFromBMP(${2:\\$filename})$0"},
		{"trigger": "CFile::ImageRotate", "contents": "${1:CFile}::ImageRotate(${2:\\$sourceFile}, ${2:\\$angle})$0"},
		{"trigger": "CFile::InputFile", "contents": "${1:CFile}::InputFile(${2:\\$strFieldName}, ${2:\\$int_field_size}, ${4:\\$strImageID}, ${4:\\$strImageStorePath=false}, ${6:\\$int_max_file_size=0}, ${6:\\$strFileType='IMAGE'}, ${8:\\$field_file='class=typefile'}, ${8:\\$description_size=0}, ${10:\\$field_text='class=typeinput'}, ${20:\\$field_checkbox=''}, ${22:\\$bShowNotes = True})$0"},
		{"trigger": "CFile::IsGD2", "contents": "${1:CFile}::IsGD2()$0"},
		{"trigger": "CFile::IsImage", "contents": "${1:CFile}::IsImage(${2:\\$filename}, ${2:\\$mime_type=false})$0"},
		{"trigger": "CFile::MakeFilearray", "contents": "${1:CFile}::MakeFilearray(${2:\\$path}, ${2:\\$mimetype=false})$0"},
		{"trigger": "CFile::OutputJSImgShw", "contents": "${1:CFile}::OutputJSImgShw()$0"},
		{"trigger": "CFile::ResizeImage", "contents": "${1:CFile}::ResizeImage(${2:&\\$arFile}, ${2:\\$arSize}, ${4:\\$resizeType = BX_RESIZE_IMAGE_PROPORTIONAL})$0"},
		{"trigger": "CFile::ResizeImageDelete", "contents": "${1:CFile}::ResizeImageDelete(${2:\\$arImage})$0"},
		{"trigger": "CFile::ResizeImageDeleteCache", "contents": "${1:CFile}::ResizeImageDeleteCache(${2:\\$arFile})$0"},
		{"trigger": "CFile::ResizeImageFile", "contents": "${1:CFile}::ResizeImageFile(${2:\\$sourceFile}, ${2:&\\$destinationFile}, ${4:\\$arSize}, ${4:\\$resizeType = BX_RESIZE_IMAGE_PROPORTIONAL}, ${6:\\$arWaterMark = array()}, ${6:\\$jpgQuality=false}, ${8:\\$arFilters=false})$0"},
		{"trigger": "CFile::ResizeImageGet", "contents": "${1:CFile}::ResizeImageGet(${2:\\$file}, ${2:\\$arSize}, ${4:\\$resizeType = BX_RESIZE_IMAGE_PROPORTIONAL}, ${4:\\$bInitSizes = false}, ${6:\\$arFilters = false})$0"},
		{"trigger": "CFile::SaveFile", "contents": "${1:CFile}::SaveFile(${2:\\$arFile}, ${2:\\$strSavePath}, ${4:\\$bForceMD5=false}, ${4:\\$bSkipExt=false})$0"},
		{"trigger": "CFile::SaveForDB", "contents": "${1:CFile}::SaveForDB(${2:&\\$arFields}, ${2:\\$field}, ${4:\\$dir})$0"},
		{"trigger": "CFile::ScaleImage", "contents": "${1:CFile}::ScaleImage(${2:\\$sourceImageWidth}, ${2:\\$sourceImageHeight}, ${4:\\$arSize}, ${4:\\$resizeType}, ${6:&\\$bNeedCreatePicture}, ${6:&\\$arSourceSize}, ${8:&\\$arDestinationSize})$0"},
		{"trigger": "CFile::Show2Images", "contents": "${1:CFile}::Show2Images(${2:\\$strImage1}, ${2:\\$strImage2}, ${4:\\$iMaxW=0}, ${4:\\$iMaxH=0}, ${6:\\$sParams=false}, ${6:\\$sPopupTitle=false}, ${8:\\$iSizeWHTTP=0}, ${8:\\$iSizeHHTTP=0})$0"},
		{"trigger": "CFile::ShowFile", "contents": "${1:CFile}::ShowFile(${2:\\$iFileID}, ${2:\\$max_file_size=0}, ${4:\\$iMaxW=0}, ${4:\\$iMaxH=0}, ${6:\\$bPopup=false}, ${6:\\$sParams=false}, ${8:\\$sPopupTitle=false}, ${8:\\$iSizeWHTTP=0}, ${10:\\$iSizeHHTTP=0})$0"},
		{"trigger": "CFile::ShowImage", "contents": "${1:CFile}::ShowImage(${2:\\$strImage}, ${2:\\$iMaxW=0}, ${4:\\$iMaxH=0}, ${4:\\$sParams=null}, ${6:\\$strImageUrl=''}, ${6:\\$bPopup=false}, ${8:\\$sPopupTitle=false}, ${8:\\$iSizeWHTTP=0}, ${10:\\$iSizeHHTTP=0})$0"},
		{"trigger": "CFile::UpdateDesc", "contents": "${1:CFile}::UpdateDesc(${2:\\$ID}, ${2:\\$desc})$0"},
		{"trigger": "CFile::ViewByUser", "contents": "${1:CFile}::ViewByUser(${2:\\$arFile}, ${2:\\$arOptions = array()})$0"},
		{"trigger": "CFile::Watermark", "contents": "${1:CFile}::Watermark(${2:&\\$obj}, ${2:\\$Params})$0"},
		{"trigger": "CFile::WatermarkImage", "contents": "${1:CFile}::WatermarkImage(${2:&\\$obj}, ${2:\\$Params = array()})$0"},
		{"trigger": "CFile::WatermarkText", "contents": "${1:CFile}::WatermarkText(${2:&\\$obj}, ${2:\\$Params = array()})$0"},
		{"trigger": "CFile::_GetImgParams", "contents": "${1:CFile}::_GetImgParams(${2:\\$strImage}, ${2:\\$iSizeWHTTP=0}, ${4:\\$iSizeHHTTP=0})$0"},
		{"trigger": "CFile::imageconvolution", "contents": "${1:CFile}::imageconvolution(${2:\\$picture}, ${2:\\$matrix}, ${4:\\$div = 1}, ${4:\\$offset = 0})$0"},
		{"trigger": "CFileCacheCleaner::GetFileExpiration", "contents": "${1:CFileCacheCleaner}::GetFileExpiration(${2:\\$FileName})$0"},
		{"trigger": "CFileCacheCleaner::GetNextFile", "contents": "${1:CFileCacheCleaner}::GetNextFile()$0"},
		{"trigger": "CFileCacheCleaner::InitPath", "contents": "${1:CFileCacheCleaner}::InitPath(${2:\\$PathToCheck})$0"},
		{"trigger": "CFileCacheCleaner::Start", "contents": "${1:CFileCacheCleaner}::Start()$0"},
		{"trigger": "CFileCacheCleaner::__construct", "contents": "${1:CFileCacheCleaner}::__construct(${2:\\$CacheType})$0"},
		{"trigger": "CFilterQuery::BuildWhereClause", "contents": "${1:CFilterQuery}::BuildWhereClause(${2:\\$word})$0"},
		{"trigger": "CFilterQuery::CFilterQuery", "contents": "${1:CFilterQuery}::CFilterQuery(${2:\\$default_query_type = 'and'}, ${2:\\$rus_bool_lang = 'yes'}, ${4:\\$procent='Y'}, ${4:\\$ex_sep = array()}, ${6:\\$clob='N'}, ${6:\\$div_fields='Y'}, ${8:\\$clob_upper='N'})$0"},
		{"trigger": "CFilterQuery::CutKav", "contents": "${1:CFilterQuery}::CutKav(${2:\\$query})$0"},
		{"trigger": "CFilterQuery::GetQueryString", "contents": "${1:CFilterQuery}::GetQueryString(${2:\\$fields}, ${2:\\$query})$0"},
		{"trigger": "CFilterQuery::ParseQ", "contents": "${1:CFilterQuery}::ParseQ(${2:\\$q})$0"},
		{"trigger": "CFilterQuery::ParseStr", "contents": "${1:CFilterQuery}::ParseStr(${2:\\$qwe})$0"},
		{"trigger": "CFilterQuery::PrepareQuery", "contents": "${1:CFilterQuery}::PrepareQuery(${2:\\$q})$0"},
		{"trigger": "CFilterQuery::__construct", "contents": "${1:CFilterQuery}::__construct(${2:\\$default_query_type = 'and'}, ${2:\\$rus_bool_lang = 'yes'}, ${4:\\$procent='Y'}, ${4:\\$ex_sep = array()}, ${6:\\$clob='N'}, ${6:\\$div_fields='Y'}, ${8:\\$clob_upper='N'})$0"},
		{"trigger": "CFinder::GetFinderAppearance", "contents": "${1:CFinder}::GetFinderAppearance(${2:\\$arParams}, ${2:\\$arPanels})$0"},
		{"trigger": "CFinder::GetFinderItem", "contents": "${1:CFinder}::GetFinderItem(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemCheckbox", "contents": "${1:CFinder}::GetFinderItemCheckbox(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemStructure", "contents": "${1:CFinder}::GetFinderItemStructure(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemStructureCategory", "contents": "${1:CFinder}::GetFinderItemStructureCategory(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemStructureItem", "contents": "${1:CFinder}::GetFinderItemStructureItem(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemText", "contents": "${1:CFinder}::GetFinderItemText(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemType1", "contents": "${1:CFinder}::GetFinderItemType1(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemType2", "contents": "${1:CFinder}::GetFinderItemType2(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemType3", "contents": "${1:CFinder}::GetFinderItemType3(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemType4", "contents": "${1:CFinder}::GetFinderItemType4(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::GetFinderItemType5", "contents": "${1:CFinder}::GetFinderItemType5(${2:\\$arParams}, ${2:\\$arItem})$0"},
		{"trigger": "CFinder::__construct", "contents": "${1:CFinder}::__construct()$0"},
		{"trigger": "CFlashUploader::GetLocalization", "contents": "${1:CFlashUploader}::GetLocalization()$0"},
		{"trigger": "CFlashUploader::HealFilesVars", "contents": "${1:CFlashUploader}::HealFilesVars(${2:\\$bKill = false})$0"},
		{"trigger": "CFlashUploader::InitUploaderHandler", "contents": "${1:CFlashUploader}::InitUploaderHandler()$0"},
		{"trigger": "CFlashUploader::SaveAllUploadedFiles", "contents": "${1:CFlashUploader}::SaveAllUploadedFiles(${2:\\$uploadedFiles})$0"},
		{"trigger": "CFlashUploader::ShowScript", "contents": "${1:CFlashUploader}::ShowScript(${2:\\$Params = array()})$0"},
		{"trigger": "CFlashUploader::UploadFileHandler", "contents": "${1:CFlashUploader}::UploadFileHandler(${2:\\$callback}, ${2:\\$Params})$0"},
		{"trigger": "CGridOptions::CalcDates", "contents": "${1:CGridOptions}::CalcDates(${2:\\$field_id}, ${2:\\$aInput}, ${4:&\\$aRes})$0"},
		{"trigger": "CGridOptions::GetFilter", "contents": "${1:CGridOptions}::GetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CGridOptions::GetNavParams", "contents": "${1:CGridOptions}::GetNavParams(${2:\\$arParams=array()})$0"},
		{"trigger": "CGridOptions::GetSorting", "contents": "${1:CGridOptions}::GetSorting(${2:\\$arParams=array()})$0"},
		{"trigger": "CGridOptions::GetThemes", "contents": "${1:CGridOptions}::GetThemes(${2:\\$path})$0"},
		{"trigger": "CGridOptions::GetVisibleColumns", "contents": "${1:CGridOptions}::GetVisibleColumns()$0"},
		{"trigger": "CGridOptions::__construct", "contents": "${1:CGridOptions}::__construct(${2:\\$grid_id})$0"},
		{"trigger": "CGroup::Add", "contents": "${1:CGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CGroup::CheckFields", "contents": "${1:CGroup}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CGroup::Delete", "contents": "${1:CGroup}::Delete(${2:\\$ID})$0"},
		{"trigger": "CGroup::GetByID", "contents": "${1:CGroup}::GetByID(${2:\\$ID}, ${2:\\$SHOW_USERS_AMOUNT = 'N'})$0"},
		{"trigger": "CGroup::GetDropDownList", "contents": "${1:CGroup}::GetDropDownList(${2:\\$strSqlSearch='and ACTIVE='Y''}, ${2:\\$strSqlOrder='ORDER BY C_SORT}, ${4:NAME}, ${4:ID'})$0"},
		{"trigger": "CGroup::GetFilterOperation", "contents": "${1:CGroup}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CGroup::GetGroupUser", "contents": "${1:CGroup}::GetGroupUser(${2:\\$ID})$0"},
		{"trigger": "CGroup::GetGroupUserEx", "contents": "${1:CGroup}::GetGroupUserEx(${2:\\$ID})$0"},
		{"trigger": "CGroup::GetIDByCode", "contents": "${1:CGroup}::GetIDByCode(${2:\\$code})$0"},
		{"trigger": "CGroup::GetList", "contents": "${1:CGroup}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:\\$SHOW_USERS_AMOUNT='N'})$0"},
		{"trigger": "CGroup::GetListEx", "contents": "${1:CGroup}::GetListEx(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CGroup::GetMaxSort", "contents": "${1:CGroup}::GetMaxSort()$0"},
		{"trigger": "CGroup::GetModulePermission", "contents": "${1:CGroup}::GetModulePermission(${2:\\$group_id}, ${2:\\$module_id})$0"},
		{"trigger": "CGroup::GetSubordinateGroups", "contents": "${1:CGroup}::GetSubordinateGroups(${2:\\$grId})$0"},
		{"trigger": "CGroup::GetTasks", "contents": "${1:CGroup}::GetTasks(${2:\\$ID}, ${2:\\$onlyMainTasks=true}, ${4:\\$module_id=false})$0"},
		{"trigger": "CGroup::GetTasksForModule", "contents": "${1:CGroup}::GetTasksForModule(${2:\\$module_id}, ${2:\\$onlyMainTasks = true})$0"},
		{"trigger": "CGroup::PrepareSql", "contents": "${1:CGroup}::PrepareSql(${2:&\\$arFields}, ${2:\\$arOrder}, ${4:\\$arFilter}, ${4:\\$arGroupBy}, ${6:\\$arSelectFields})$0"},
		{"trigger": "CGroup::SetModulePermission", "contents": "${1:CGroup}::SetModulePermission(${2:\\$group_id}, ${2:\\$module_id}, ${4:\\$permission})$0"},
		{"trigger": "CGroup::SetSubordinateGroups", "contents": "${1:CGroup}::SetSubordinateGroups(${2:\\$grId}, ${2:\\$arSubGroups=false})$0"},
		{"trigger": "CGroup::SetTasks", "contents": "${1:CGroup}::SetTasks(${2:\\$ID}, ${2:\\$arr})$0"},
		{"trigger": "CGroup::SetTasksForModule", "contents": "${1:CGroup}::SetTasksForModule(${2:\\$module_id}, ${2:\\$arGroupTask})$0"},
		{"trigger": "CGroup::Update", "contents": "${1:CGroup}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CGroup::err_mess", "contents": "${1:CGroup}::err_mess()$0"},
		{"trigger": "CGroupAuthProvider::AjaxRequest", "contents": "${1:CGroupAuthProvider}::AjaxRequest(${2:\\$arParams=false})$0"},
		{"trigger": "CGroupAuthProvider::DeleteByGroup", "contents": "${1:CGroupAuthProvider}::DeleteByGroup(${2:\\$ID})$0"},
		{"trigger": "CGroupAuthProvider::GetFormHtml", "contents": "${1:CGroupAuthProvider}::GetFormHtml(${2:\\$arParams=false})$0"},
		{"trigger": "CGroupAuthProvider::GetNames", "contents": "${1:CGroupAuthProvider}::GetNames(${2:\\$arCodes})$0"},
		{"trigger": "CGroupAuthProvider::OnAfterGroupAdd", "contents": "${1:CGroupAuthProvider}::OnAfterGroupAdd(${2:&\\$arFields})$0"},
		{"trigger": "CGroupAuthProvider::OnAfterUserUpdate", "contents": "${1:CGroupAuthProvider}::OnAfterUserUpdate(${2:&\\$arFields})$0"},
		{"trigger": "CGroupAuthProvider::OnBeforeGroupDelete", "contents": "${1:CGroupAuthProvider}::OnBeforeGroupDelete(${2:\\$ID})$0"},
		{"trigger": "CGroupAuthProvider::OnBeforeGroupUpdate", "contents": "${1:CGroupAuthProvider}::OnBeforeGroupUpdate(${2:\\$ID}, ${2:&\\$arFields})$0"},
		{"trigger": "CGroupAuthProvider::OnUserLogin", "contents": "${1:CGroupAuthProvider}::OnUserLogin(${2:\\$USER_ID})$0"},
		{"trigger": "CGroupAuthProvider::UpdateCodes", "contents": "${1:CGroupAuthProvider}::UpdateCodes(${2:\\$USER_ID})$0"},
		{"trigger": "CGroupAuthProvider::__construct", "contents": "${1:CGroupAuthProvider}::__construct()$0"},
		{"trigger": "CHTMLPagesCache::CleanAll", "contents": "${1:CHTMLPagesCache}::CleanAll()$0"},
		{"trigger": "CHTMLPagesCache::CompileOptions", "contents": "${1:CHTMLPagesCache}::CompileOptions(${2:&\\$arOptions})$0"},
		{"trigger": "CHTMLPagesCache::GetOptions", "contents": "${1:CHTMLPagesCache}::GetOptions(${2:\\$bCheck = false})$0"},
		{"trigger": "CHTMLPagesCache::IsOn", "contents": "${1:CHTMLPagesCache}::IsOn()$0"},
		{"trigger": "CHTMLPagesCache::OnEpilog", "contents": "${1:CHTMLPagesCache}::OnEpilog()$0"},
		{"trigger": "CHTMLPagesCache::SetEnabled", "contents": "${1:CHTMLPagesCache}::SetEnabled(${2:\\$status})$0"},
		{"trigger": "CHTMLPagesCache::SetOptions", "contents": "${1:CHTMLPagesCache}::SetOptions(${2:\\$arOptions = array()}, ${2:\\$bCompile = true})$0"},
		{"trigger": "CHTMLPagesCache::SetStatus", "contents": "${1:CHTMLPagesCache}::SetStatus(${2:\\$status})$0"},
		{"trigger": "CHTMLPagesCache::deleteRecursive", "contents": "${1:CHTMLPagesCache}::deleteRecursive(${2:/*. string .*/\\$path = ''})$0"},
		{"trigger": "CHTMLPagesCache::readStatistic", "contents": "${1:CHTMLPagesCache}::readStatistic()$0"},
		{"trigger": "CHTMLPagesCache::startCaching", "contents": "${1:CHTMLPagesCache}::startCaching()$0"},
		{"trigger": "CHTMLPagesCache::writeFile", "contents": "${1:CHTMLPagesCache}::writeFile(${2:\\$file_name}, ${2:\\$content})$0"},
		{"trigger": "CHTMLPagesCache::writeStatistic", "contents": "${1:CHTMLPagesCache}::writeStatistic(${2:\\$hit = 0}, ${2:\\$miss = 0}, ${4:\\$quota = 0}, ${4:\\$posts = 0}, ${6:\\$files = 0.0})$0"},
		{"trigger": "CHTTP::CHTTP", "contents": "${1:CHTTP}::CHTTP()$0"},
		{"trigger": "CHTTP::HTTPQuery", "contents": "${1:CHTTP}::HTTPQuery(${2:\\$method}, ${2:\\$url}, ${4:\\$postdata = ''})$0"},
		{"trigger": "CHTTP::ParseDigest", "contents": "${1:CHTTP}::ParseDigest(${2:\\$sDigest})$0"},
		{"trigger": "CHTTP::Query", "contents": "${1:CHTTP}::Query(${2:\\$method}, ${2:\\$host}, ${4:\\$port}, ${4:\\$path}, ${6:\\$postdata = false}, ${6:\\$proto = ''}, ${8:\\$post_content_type = 'N'})$0"},
		{"trigger": "CHTTP::SetAuthHeader", "contents": "${1:CHTTP}::SetAuthHeader(${2:\\$bDigestEnabled=true})$0"},
		{"trigger": "CHTTP::URN2URI", "contents": "${1:CHTTP}::URN2URI(${2:\\$urn}, ${2:\\$server_name = ''})$0"},
		{"trigger": "CHTTP::urlAddParams", "contents": "${1:CHTTP}::urlAddParams(${2:\\$url}, ${2:\\$add_params}, ${4:\\$options = array()})$0"},
		{"trigger": "CHotKeys::AddDefaultKeyToAll", "contents": "${1:CHotKeys}::AddDefaultKeyToAll(${2:\\$codeID,\\$keysString})$0"},
		{"trigger": "CHotKeys::CheckFields", "contents": "${1:CHotKeys}::CheckFields(${2:\\$arFields,\\$ID=false})$0"},
		{"trigger": "CHotKeys::CheckKeysString", "contents": "${1:CHotKeys}::CheckKeysString(${2:\\$keysString})$0"},
		{"trigger": "CHotKeys::CheckStickers", "contents": "${1:CHotKeys}::CheckStickers()$0"},
		{"trigger": "CHotKeys::Delete", "contents": "${1:CHotKeys}::Delete(${2:\\$ID})$0"},
		{"trigger": "CHotKeys::ErrOrig", "contents": "${1:CHotKeys}::ErrOrig()$0"},
		{"trigger": "CHotKeys::Export", "contents": "${1:CHotKeys}::Export()$0"},
		{"trigger": "CHotKeys::GetByCodeID", "contents": "${1:CHotKeys}::GetByCodeID(${2:\\$codeID})$0"},
		{"trigger": "CHotKeys::GetCodeByClassName", "contents": "${1:CHotKeys}::GetCodeByClassName(${2:\\$className}, ${2:\\$name='',\\$code=''})$0"},
		{"trigger": "CHotKeys::GetCodeByUrl", "contents": "${1:CHotKeys}::GetCodeByUrl(${2:\\$url})$0"},
		{"trigger": "CHotKeys::GetInstance", "contents": "${1:CHotKeys}::GetInstance()$0"},
		{"trigger": "CHotKeys::GetList", "contents": "${1:CHotKeys}::GetList(${2:\\$aSort=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CHotKeys::GetTitle", "contents": "${1:CHotKeys}::GetTitle(${2:\\$strTitleObj}, ${2:\\$forHint=false})$0"},
		{"trigger": "CHotKeys::GetUIDbyHID", "contents": "${1:CHotKeys}::GetUIDbyHID(${2:\\$hkID})$0"},
		{"trigger": "CHotKeys::GlueSelfToCode", "contents": "${1:CHotKeys}::GlueSelfToCode(${2:&\\$arCode})$0"},
		{"trigger": "CHotKeys::Import", "contents": "${1:CHotKeys}::Import(${2:\\$fileName,\\$userID})$0"},
		{"trigger": "CHotKeys::IsActive", "contents": "${1:CHotKeys}::IsActive()$0"},
		{"trigger": "CHotKeys::IsDefaultOpt", "contents": "${1:CHotKeys}::IsDefaultOpt()$0"},
		{"trigger": "CHotKeys::LoadToCache", "contents": "${1:CHotKeys}::LoadToCache()$0"},
		{"trigger": "CHotKeys::PrintGlobalUrlVar", "contents": "${1:CHotKeys}::PrintGlobalUrlVar()$0"},
		{"trigger": "CHotKeys::PrintJSExecs", "contents": "${1:CHotKeys}::PrintJSExecs(${2:\\$execs}, ${2:\\$controlName=''}, ${4:\\$scriptTags=true}, ${4:\\$checkHK=false})$0"},
		{"trigger": "CHotKeys::PrintPhpToJSVars", "contents": "${1:CHotKeys}::PrintPhpToJSVars()$0"},
		{"trigger": "CHotKeys::PrintTPButton", "contents": "${1:CHotKeys}::PrintTPButton(${2:&\\$arPanelButton,\\$parent=''})$0"},
		{"trigger": "CHotKeys::SetDefault", "contents": "${1:CHotKeys}::SetDefault(${2:\\$userID})$0"},
		{"trigger": "CHotKeys::SetNotDefaultOpt", "contents": "${1:CHotKeys}::SetNotDefaultOpt()$0"},
		{"trigger": "CHotKeys::SetTitle", "contents": "${1:CHotKeys}::SetTitle(${2:\\$className}, ${2:\\$forHint=false})$0"},
		{"trigger": "CHotKeys::ShowHKAsChar", "contents": "${1:CHotKeys}::ShowHKAsChar(${2:\\$hotKeysString})$0"},
		{"trigger": "CHotKeys::Update", "contents": "${1:CHotKeys}::Update(${2:\\$ID,\\$arFields})$0"},
		{"trigger": "CHotKeys::__clone", "contents": "${1:CHotKeys}::__clone()$0"},
		{"trigger": "CHotKeys::__construct", "contents": "${1:CHotKeys}::__construct()$0"},
		{"trigger": "CHotKeys::__wakeup", "contents": "${1:CHotKeys}::__wakeup()$0"},
		{"trigger": "CHotKeysCode::Add", "contents": "${1:CHotKeysCode}::Add(${2:\\$arFields})$0"},
		{"trigger": "CHotKeysCode::CheckFields", "contents": "${1:CHotKeysCode}::CheckFields(${2:\\$arFields,\\$ID=false})$0"},
		{"trigger": "CHotKeysCode::CleanCache", "contents": "${1:CHotKeysCode}::CleanCache()$0"},
		{"trigger": "CHotKeysCode::CleanUrl", "contents": "${1:CHotKeysCode}::CleanUrl(${2:\\$url})$0"},
		{"trigger": "CHotKeysCode::Delete", "contents": "${1:CHotKeysCode}::Delete(${2:\\$ID})$0"},
		{"trigger": "CHotKeysCode::ErrOrig", "contents": "${1:CHotKeysCode}::ErrOrig()$0"},
		{"trigger": "CHotKeysCode::GetByID", "contents": "${1:CHotKeysCode}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CHotKeysCode::GetByUrl", "contents": "${1:CHotKeysCode}::GetByUrl(${2:\\$url})$0"},
		{"trigger": "CHotKeysCode::GetCodeByClassName", "contents": "${1:CHotKeysCode}::GetCodeByClassName(${2:\\$className})$0"},
		{"trigger": "CHotKeysCode::GetIDByTitleObj", "contents": "${1:CHotKeysCode}::GetIDByTitleObj(${2:\\$strTitleObj})$0"},
		{"trigger": "CHotKeysCode::GetList", "contents": "${1:CHotKeysCode}::GetList(${2:\\$aSort=array()}, ${2:\\$arFilter=array()}, ${4:\\$showEmptyName=true})$0"},
		{"trigger": "CHotKeysCode::LoadToCache", "contents": "${1:CHotKeysCode}::LoadToCache()$0"},
		{"trigger": "CHotKeysCode::Update", "contents": "${1:CHotKeysCode}::Update(${2:\\$ID,\\$arFields})$0"},
		{"trigger": "CIBlockElementEnum::GetNext", "contents": "${1:CIBlockElementEnum}::GetNext(${2:\\$bTextHtmlAuto=true}, ${2:\\$use_tilda=true})$0"},
		{"trigger": "CIBlockElementEnum::GetTreeList", "contents": "${1:CIBlockElementEnum}::GetTreeList(${2:\\$IBLOCK_ID}, ${2:\\$ACTIVE_FILTER='N'})$0"},
		{"trigger": "CIBlockSectionEnum::GetNext", "contents": "${1:CIBlockSectionEnum}::GetNext(${2:\\$bTextHtmlAuto=true}, ${2:\\$use_tilda=true})$0"},
		{"trigger": "CIBlockSectionEnum::GetTreeList", "contents": "${1:CIBlockSectionEnum}::GetTreeList(${2:\\$IBLOCK_ID}, ${2:\\$ACTIVE_FILTER='N'})$0"},
		{"trigger": "CIblockSectionEntity::__construct", "contents": "${1:CIblockSectionEntity}::__construct()$0"},
		{"trigger": "CIblockSectionEntity::initialize", "contents": "${1:CIblockSectionEntity}::initialize()$0"},
		{"trigger": "CImageUploader::CheckDirPath", "contents": "${1:CImageUploader}::CheckDirPath(${2:\\$path = ''})$0"},
		{"trigger": "CImageUploader::CheckErrors", "contents": "${1:CImageUploader}::CheckErrors()$0"},
		{"trigger": "CImageUploader::CleanSavedData", "contents": "${1:CImageUploader}::CleanSavedData()$0"},
		{"trigger": "CImageUploader::GetChunkSize", "contents": "${1:CImageUploader}::GetChunkSize()$0"},
		{"trigger": "CImageUploader::GetId", "contents": "${1:CImageUploader}::GetId()$0"},
		{"trigger": "CImageUploader::GetLocalization", "contents": "${1:CImageUploader}::GetLocalization()$0"},
		{"trigger": "CImageUploader::GetMimeType", "contents": "${1:CImageUploader}::GetMimeType(${2:\\$fileName})$0"},
		{"trigger": "CImageUploader::GetSavedData", "contents": "${1:CImageUploader}::GetSavedData()$0"},
		{"trigger": "CImageUploader::GetSize", "contents": "${1:CImageUploader}::GetSize(${2:\\$v})$0"},
		{"trigger": "CImageUploader::InitUploaderHandler", "contents": "${1:CImageUploader}::InitUploaderHandler()$0"},
		{"trigger": "CImageUploader::SaveAllUploadedFiles", "contents": "${1:CImageUploader}::SaveAllUploadedFiles(${2:\\$uploadedFiles})$0"},
		{"trigger": "CImageUploader::SaveError", "contents": "${1:CImageUploader}::SaveError(${2:\\$arError})$0"},
		{"trigger": "CImageUploader::SetId", "contents": "${1:CImageUploader}::SetId(${2:\\$id = ''})$0"},
		{"trigger": "CImageUploader::SetSavedData", "contents": "${1:CImageUploader}::SetSavedData(${2:\\$savedData = array()})$0"},
		{"trigger": "CImageUploader::SetTmpPath", "contents": "${1:CImageUploader}::SetTmpPath(${2:\\$PackageGuid}, ${2:\\$pathToTmp})$0"},
		{"trigger": "CImageUploader::ShowScript", "contents": "${1:CImageUploader}::ShowScript(${2:\\$Params = array()})$0"},
		{"trigger": "CImageUploader::StrangeUrlEncode", "contents": "${1:CImageUploader}::StrangeUrlEncode(${2:\\$url})$0"},
		{"trigger": "CImageUploader::UploadCallback", "contents": "${1:CImageUploader}::UploadCallback(${2:\\$uploadedFiles})$0"},
		{"trigger": "CImageUploader::UploadFileHandler", "contents": "${1:CImageUploader}::UploadFileHandler(${2:\\$callback}, ${2:\\$Params})$0"},
		{"trigger": "CJSCore::Init", "contents": "${1:CJSCore}::Init(${2:\\$arExt = array()}, ${2:\\$bReturn = false})$0"},
		{"trigger": "CJSCore::ShowTimer", "contents": "${1:CJSCore}::ShowTimer(${2:\\$params})$0"},
		{"trigger": "CJSCore::_IsExtRegistered", "contents": "${1:CJSCore}::_IsExtRegistered(${2:\\$ext})$0"},
		{"trigger": "CJSCore::_loadCSS", "contents": "${1:CJSCore}::_loadCSS(${2:\\$css}, ${2:\\$bReturn})$0"},
		{"trigger": "CJSCore::_loadLang", "contents": "${1:CJSCore}::_loadLang(${2:\\$lang}, ${2:\\$bReturn}, ${4:\\$arAdditionalMess = false})$0"},
		{"trigger": "CJSPopup::GetFormName", "contents": "${1:CJSPopup}::GetFormName()$0"},
		{"trigger": "CJSPopup::SetAdditionalArgs", "contents": "${1:CJSPopup}::SetAdditionalArgs(${2:\\$additional_args = ''})$0"},
		{"trigger": "CJSPopup::SetTitle", "contents": "${1:CJSPopup}::SetTitle(${2:\\$title = ''})$0"},
		{"trigger": "CLanguage::CheckFields", "contents": "${1:CLanguage}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CLanguage::Delete", "contents": "${1:CLanguage}::Delete(${2:\\$ID})$0"},
		{"trigger": "CLanguage::GetByID", "contents": "${1:CLanguage}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CLanguage::GetLangSwitcherarray", "contents": "${1:CLanguage}::GetLangSwitcherarray()$0"},
		{"trigger": "CLanguage::GetList", "contents": "${1:CLanguage}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CLanguage::SelectBox", "contents": "${1:CLanguage}::SelectBox(${2:\\$sFieldName}, ${2:\\$sValue}, ${4:\\$sDefaultValue=''}, ${4:\\$sFuncName=''}, ${6:\\$field='class=\\'typeselect\\''})$0"},
		{"trigger": "CLanguage::Update", "contents": "${1:CLanguage}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "\\$APPLICATION->AddBufferContent", "contents": "\\$APPLICATION->AddBufferContent(${2:\\$callback})$0"},
		{"trigger": "\\$APPLICATION->AddChainItem", "contents": "\\$APPLICATION->AddChainItem(${2:\\$title}, ${2:\\$link=''}, ${4:\\$bUnQuote=true})$0"},
		{"trigger": "\\$APPLICATION->AddHeadScript", "contents": "\\$APPLICATION->AddHeadScript(${2:\\$src})$0"},
		{"trigger": "\\$APPLICATION->AddHeadString", "contents": "\\$APPLICATION->AddHeadString(${2:\\$str}, ${2:\\$bUnique=false})$0"},
		{"trigger": "\\$APPLICATION->AddPanelButton", "contents": "\\$APPLICATION->AddPanelButton(${2:\\$arButton}, ${2:\\$bReplace=false})$0"},
		{"trigger": "\\$APPLICATION->AddPanelButtonMenu", "contents": "\\$APPLICATION->AddPanelButtonMenu(${2:\\$button_id}, ${2:\\$arMenuItem})$0"},
		{"trigger": "\\$APPLICATION->AddViewContent", "contents": "\\$APPLICATION->AddViewContent(${2:\\$view}, ${2:\\$content}, ${4:\\$pos = 500})$0"},
		{"trigger": "\\$APPLICATION->AuthForm", "contents": "\\$APPLICATION->AuthForm(${2:\\$mess}, ${2:\\$show_prolog=true}, ${4:\\$show_epilog=true}, ${4:\\$not_show_links='N'}, ${6:\\$do_die=true})$0"},
		{"trigger": "\\$APPLICATION->CMain", "contents": "\\$APPLICATION->CMain()$0"},
		{"trigger": "\\$APPLICATION->CaptchaCheckCode", "contents": "\\$APPLICATION->CaptchaCheckCode(${2:\\$captcha_word}, ${2:\\$captcha_sid})$0"},
		{"trigger": "\\$APPLICATION->CaptchaGetCode", "contents": "\\$APPLICATION->CaptchaGetCode()$0"},
		{"trigger": "\\$APPLICATION->ConvertCharset", "contents": "\\$APPLICATION->ConvertCharset(${2:\\$string}, ${2:\\$charset_in}, ${4:\\$charset_out})$0"},
		{"trigger": "\\$APPLICATION->ConvertCharsetarray", "contents": "\\$APPLICATION->ConvertCharsetarray(${2:\\$arData}, ${2:\\$charset_from}, ${4:\\$charset_to})$0"},
		{"trigger": "\\$APPLICATION->CopyFileAccessPermission", "contents": "\\$APPLICATION->CopyFileAccessPermission(${2:\\$path_from}, ${2:\\$path_to}, ${4:\\$bOverWrite=false})$0"},
		{"trigger": "\\$APPLICATION->DelGroupRight", "contents": "\\$APPLICATION->DelGroupRight(${2:\\$module_id=''}, ${2:\\$arGroups=array()}, ${4:\\$site_id=false})$0"},
		{"trigger": "\\$APPLICATION->EncodePHPTags", "contents": "\\$APPLICATION->EncodePHPTags(${2:\\$str})$0"},
		{"trigger": "\\$APPLICATION->EndBufferContent", "contents": "\\$APPLICATION->EndBufferContent(${2:\\$content=''})$0"},
		{"trigger": "\\$APPLICATION->EpilogActions", "contents": "\\$APPLICATION->EpilogActions()$0"},
		{"trigger": "\\$APPLICATION->FileAction", "contents": "\\$APPLICATION->FileAction()$0"},
		{"trigger": "\\$APPLICATION->ForkActions", "contents": "\\$APPLICATION->ForkActions(${2:\\$func = false}, ${2:\\$args = array()})$0"},
		{"trigger": "\\$APPLICATION->GetAdditionalCSS", "contents": "\\$APPLICATION->GetAdditionalCSS()$0"},
		{"trigger": "\\$APPLICATION->GetCSS", "contents": "\\$APPLICATION->GetCSS(${2:\\$cMaxStylesCnt=15}, ${2:\\$bXhtmlStyle=true})$0"},
		{"trigger": "\\$APPLICATION->GetCSSarray", "contents": "\\$APPLICATION->GetCSSarray()$0"},
		{"trigger": "\\$APPLICATION->GetCookieDomain", "contents": "\\$APPLICATION->GetCookieDomain()$0"},
		{"trigger": "\\$APPLICATION->GetCurDir", "contents": "\\$APPLICATION->GetCurDir()$0"},
		{"trigger": "\\$APPLICATION->GetCurPage", "contents": "\\$APPLICATION->GetCurPage(${2:\\$get_index_page=null})$0"},
		{"trigger": "\\$APPLICATION->GetCurPageParam", "contents": "\\$APPLICATION->GetCurPageParam(${2:\\$strParam=''}, ${2:\\$arParamKill=array()}, ${4:\\$get_index_page=null})$0"},
		{"trigger": "\\$APPLICATION->GetCurParam", "contents": "\\$APPLICATION->GetCurParam()$0"},
		{"trigger": "\\$APPLICATION->GetCurUri", "contents": "\\$APPLICATION->GetCurUri(${2:\\$addParam=''}, ${2:\\$get_index_page=null})$0"},
		{"trigger": "\\$APPLICATION->GetDefaultRightList", "contents": "\\$APPLICATION->GetDefaultRightList()$0"},
		{"trigger": "\\$APPLICATION->GetDirProperty", "contents": "\\$APPLICATION->GetDirProperty(${2:\\$PROPERTY_ID}, ${2:\\$path=false}, ${4:\\$default_value = false})$0"},
		{"trigger": "\\$APPLICATION->GetDirPropertyList", "contents": "\\$APPLICATION->GetDirPropertyList(${2:\\$path=false})$0"},
		{"trigger": "\\$APPLICATION->GetException", "contents": "\\$APPLICATION->GetException()$0"},
		{"trigger": "\\$APPLICATION->GetFileAccessPermission", "contents": "\\$APPLICATION->GetFileAccessPermission(${2:\\$path}, ${2:\\$groups=false}, ${4:\\$task_mode=false})$0"},
		{"trigger": "\\$APPLICATION->GetFileAccessPermissionByUser", "contents": "\\$APPLICATION->GetFileAccessPermissionByUser(${2:\\$intUserID}, ${2:\\$path}, ${4:\\$groups=false}, ${4:\\$task_mode=false})$0"},
		{"trigger": "\\$APPLICATION->GetFileContent", "contents": "\\$APPLICATION->GetFileContent(${2:\\$path})$0"},
		{"trigger": "\\$APPLICATION->GetFileRecursive", "contents": "\\$APPLICATION->GetFileRecursive(${2:\\$strFileName}, ${2:\\$strDir=false})$0"},
		{"trigger": "\\$APPLICATION->GetGroupRight", "contents": "\\$APPLICATION->GetGroupRight(${2:\\$module_id}, ${2:\\$arGroups=false}, ${4:\\$use_default_level='Y'}, ${4:\\$max_right_for_super_admin='Y'}, ${6:\\$site_id = false})$0"},
		{"trigger": "\\$APPLICATION->GetGroupRightList", "contents": "\\$APPLICATION->GetGroupRightList(${2:\\$arFilter}, ${2:\\$site_id=false})$0"},
		{"trigger": "\\$APPLICATION->GetHeadScripts", "contents": "\\$APPLICATION->GetHeadScripts()$0"},
		{"trigger": "\\$APPLICATION->GetHeadStrings", "contents": "\\$APPLICATION->GetHeadStrings()$0"},
		{"trigger": "\\$APPLICATION->GetLang", "contents": "\\$APPLICATION->GetLang(${2:\\$cur_dir=false}, ${2:\\$cur_host=false})$0"},
		{"trigger": "\\$APPLICATION->GetLangSwitcherarray", "contents": "\\$APPLICATION->GetLangSwitcherarray()$0"},
		{"trigger": "\\$APPLICATION->GetMainRightList", "contents": "\\$APPLICATION->GetMainRightList()$0"},
		{"trigger": "\\$APPLICATION->GetMenu", "contents": "\\$APPLICATION->GetMenu(${2:\\$type='left'}, ${2:\\$bMenuExt=false}, ${4:\\$template = false}, ${4:\\$sInitDir = false})$0"},
		{"trigger": "\\$APPLICATION->GetMenuHtml", "contents": "\\$APPLICATION->GetMenuHtml(${2:\\$type='left'}, ${2:\\$bMenuExt=false}, ${4:\\$template = false}, ${4:\\$sInitDir = false})$0"},
		{"trigger": "\\$APPLICATION->GetMenuHtmlEx", "contents": "\\$APPLICATION->GetMenuHtmlEx(${2:\\$type='left'}, ${2:\\$bMenuExt=false}, ${4:\\$template = false}, ${4:\\$sInitDir = false})$0"},
		{"trigger": "\\$APPLICATION->GetMeta", "contents": "\\$APPLICATION->GetMeta(${2:\\$id}, ${2:\\$meta_name=false}, ${4:\\$bXhtmlStyle=true})$0"},
		{"trigger": "\\$APPLICATION->GetNavChain", "contents": "\\$APPLICATION->GetNavChain(${2:\\$path=false}, ${2:\\$iNumFrom=0}, ${4:\\$sNavChainPath=false}, ${4:\\$bIncludeOnce=false}, ${6:\\$bShowIcons = true})$0"},
		{"trigger": "\\$APPLICATION->GetPageProperty", "contents": "\\$APPLICATION->GetPageProperty(${2:\\$PROPERTY_ID}, ${2:\\$default_value = false})$0"},
		{"trigger": "\\$APPLICATION->GetPagePropertyList", "contents": "\\$APPLICATION->GetPagePropertyList()$0"},
		{"trigger": "\\$APPLICATION->GetPanel", "contents": "\\$APPLICATION->GetPanel()$0"},
		{"trigger": "\\$APPLICATION->GetPopupLink", "contents": "\\$APPLICATION->GetPopupLink(${2:\\$arUrl}, ${2:\\$jsPopupSuffix = ''})$0"},
		{"trigger": "\\$APPLICATION->GetProperty", "contents": "\\$APPLICATION->GetProperty(${2:\\$PROPERTY_ID}, ${2:\\$default_value = false})$0"},
		{"trigger": "\\$APPLICATION->GetPublicShowMode", "contents": "\\$APPLICATION->GetPublicShowMode()$0"},
		{"trigger": "\\$APPLICATION->GetServerUniqID", "contents": "\\$APPLICATION->GetServerUniqID()$0"},
		{"trigger": "\\$APPLICATION->GetShowIncludeAreas", "contents": "\\$APPLICATION->GetShowIncludeAreas()$0"},
		{"trigger": "\\$APPLICATION->GetSiteByDir", "contents": "\\$APPLICATION->GetSiteByDir(${2:\\$cur_dir=false}, ${2:\\$cur_host=false})$0"},
		{"trigger": "\\$APPLICATION->GetSiteSwitcherarray", "contents": "\\$APPLICATION->GetSiteSwitcherarray()$0"},
		{"trigger": "\\$APPLICATION->GetSpreadCookieHTML", "contents": "\\$APPLICATION->GetSpreadCookieHTML()$0"},
		{"trigger": "\\$APPLICATION->GetTemplatePath", "contents": "\\$APPLICATION->GetTemplatePath(${2:\\$rel_path})$0"},
		{"trigger": "\\$APPLICATION->GetTitle", "contents": "\\$APPLICATION->GetTitle(${2:\\$property_name = false}, ${2:\\$strip_tags = false})$0"},
		{"trigger": "\\$APPLICATION->GetUserRight", "contents": "\\$APPLICATION->GetUserRight(${2:\\$module_id}, ${2:\\$arGroups=false}, ${4:\\$use_default_level='Y'}, ${4:\\$max_right_for_super_admin='Y'}, ${6:\\$site_id=false})$0"},
		{"trigger": "\\$APPLICATION->GetUserRoles", "contents": "\\$APPLICATION->GetUserRoles(${2:\\$module_id}, ${2:\\$arGroups=false}, ${4:\\$use_default_role='Y'}, ${4:\\$max_role_for_super_admin='Y'}, ${6:\\$site_id=false})$0"},
		{"trigger": "\\$APPLICATION->GetViewContent", "contents": "\\$APPLICATION->GetViewContent(${2:\\$view})$0"},
		{"trigger": "\\$APPLICATION->IncludeAdminFile", "contents": "\\$APPLICATION->IncludeAdminFile(${2:\\$strTitle}, ${2:\\$filepath})$0"},
		{"trigger": "\\$APPLICATION->IncludeComponent", "contents": "\\$APPLICATION->IncludeComponent(${2:\\$componentName}, ${2:\\$componentTemplate}, ${4:\\$arParams = array()}, ${4:\\$parentComponent = null}, ${6:\\$arFunctionParams = array()})$0"},
		{"trigger": "\\$APPLICATION->IncludeFile", "contents": "\\$APPLICATION->IncludeFile(${2:\\$rel_path}, ${2:\\$arParams = array()}, ${4:\\$arFunctionParams = array()})$0"},
		{"trigger": "\\$APPLICATION->IncludeString", "contents": "\\$APPLICATION->IncludeString(${2:\\$string}, ${2:\\$arIcons=false})$0"},
		{"trigger": "\\$APPLICATION->IncludeStringAfter", "contents": "\\$APPLICATION->IncludeStringAfter(${2:\\$arIcons=false}, ${2:\\$arParams=array()})$0"},
		{"trigger": "\\$APPLICATION->IncludeStringBefore", "contents": "\\$APPLICATION->IncludeStringBefore()$0"},
		{"trigger": "\\$APPLICATION->InitDirProperties", "contents": "\\$APPLICATION->InitDirProperties(${2:\\$path})$0"},
		{"trigger": "\\$APPLICATION->InitPathVars", "contents": "\\$APPLICATION->InitPathVars(${2:&\\$site}, ${2:&\\$path})$0"},
		{"trigger": "\\$APPLICATION->IsHTTPS", "contents": "\\$APPLICATION->IsHTTPS()$0"},
		{"trigger": "\\$APPLICATION->LPAComponentChecker", "contents": "\\$APPLICATION->LPAComponentChecker(${2:&\\$arParams}, ${2:&\\$arPHPparams}, ${4:\\$parentParamName = false})$0"},
		{"trigger": "\\$APPLICATION->NeedCAPTHAForLogin", "contents": "\\$APPLICATION->NeedCAPTHAForLogin(${2:\\$login})$0"},
		{"trigger": "\\$APPLICATION->OnChangeFileComponent", "contents": "\\$APPLICATION->OnChangeFileComponent(${2:\\$path}, ${2:\\$site})$0"},
		{"trigger": "\\$APPLICATION->PrintHKGlobalUrlVar", "contents": "\\$APPLICATION->PrintHKGlobalUrlVar()$0"},
		{"trigger": "\\$APPLICATION->ProcessLPA", "contents": "\\$APPLICATION->ProcessLPA(${2:\\$filesrc = false}, ${2:\\$old_filesrc = false})$0"},
		{"trigger": "\\$APPLICATION->PrologActions", "contents": "\\$APPLICATION->PrologActions()$0"},
		{"trigger": "\\$APPLICATION->RemoveFileAccessPermission", "contents": "\\$APPLICATION->RemoveFileAccessPermission(${2:\\$path}, ${2:\\$arGroups=false})$0"},
		{"trigger": "\\$APPLICATION->ResetException", "contents": "\\$APPLICATION->ResetException()$0"},
		{"trigger": "\\$APPLICATION->RestartBuffer", "contents": "\\$APPLICATION->RestartBuffer()$0"},
		{"trigger": "\\$APPLICATION->SaveFileContent", "contents": "\\$APPLICATION->SaveFileContent(${2:\\$abs_path}, ${2:\\$strContent})$0"},
		{"trigger": "\\$APPLICATION->SetAdditionalCSS", "contents": "\\$APPLICATION->SetAdditionalCSS(${2:\\$Path2css})$0"},
		{"trigger": "\\$APPLICATION->SetAuthResult", "contents": "\\$APPLICATION->SetAuthResult(${2:\\$arAuthResult})$0"},
		{"trigger": "\\$APPLICATION->SetCurPage", "contents": "\\$APPLICATION->SetCurPage(${2:\\$page}, ${2:\\$param=false})$0"},
		{"trigger": "\\$APPLICATION->SetDirProperty", "contents": "\\$APPLICATION->SetDirProperty(${2:\\$PROPERTY_ID}, ${2:\\$PROPERTY_VALUE})$0"},
		{"trigger": "\\$APPLICATION->SetEditArea", "contents": "\\$APPLICATION->SetEditArea(${2:\\$areaId}, ${2:\\$arIcons})$0"},
		{"trigger": "\\$APPLICATION->SetFileAccessPermission", "contents": "\\$APPLICATION->SetFileAccessPermission(${2:\\$path}, ${2:\\$arPermissions}, ${4:\\$bOverWrite=true})$0"},
		{"trigger": "\\$APPLICATION->SetGroupRight", "contents": "\\$APPLICATION->SetGroupRight(${2:\\$module_id}, ${2:\\$group_id}, ${4:\\$right}, ${4:\\$site_id=false})$0"},
		{"trigger": "\\$APPLICATION->SetPageProperty", "contents": "\\$APPLICATION->SetPageProperty(${2:\\$PROPERTY_ID}, ${2:\\$PROPERTY_VALUE}, ${4:\\$arOptions = null})$0"},
		{"trigger": "\\$APPLICATION->SetPublicShowMode", "contents": "\\$APPLICATION->SetPublicShowMode(${2:\\$mode})$0"},
		{"trigger": "\\$APPLICATION->SetShowIncludeAreas", "contents": "\\$APPLICATION->SetShowIncludeAreas(${2:\\$bShow=true})$0"},
		{"trigger": "\\$APPLICATION->SetTemplateCSS", "contents": "\\$APPLICATION->SetTemplateCSS(${2:\\$rel_path})$0"},
		{"trigger": "\\$APPLICATION->SetTitle", "contents": "\\$APPLICATION->SetTitle(${2:\\$title}, ${2:\\$arOptions = null})$0"},
		{"trigger": "\\$APPLICATION->ShowAuthForm", "contents": "\\$APPLICATION->ShowAuthForm(${2:\\$message})$0"},
		{"trigger": "\\$APPLICATION->ShowBanner", "contents": "\\$APPLICATION->ShowBanner(${2:\\$type}, ${2:\\$html_before=''}, ${4:\\$html_after=''})$0"},
		{"trigger": "\\$APPLICATION->ShowCSS", "contents": "\\$APPLICATION->ShowCSS(${2:\\$cMaxStylesCnt=15}, ${2:\\$bXhtmlStyle=true})$0"},
		{"trigger": "\\$APPLICATION->ShowFileSelectDialog", "contents": "\\$APPLICATION->ShowFileSelectDialog(${2:\\$event}, ${2:\\$arResultDest}, ${4:\\$arPath = array()}, ${4:\\$fileFilter = ''}, ${6:\\$bAllowFolderSelect = False}, ${6:\\$arOptions = array()})$0"},
		{"trigger": "\\$APPLICATION->ShowHead", "contents": "\\$APPLICATION->ShowHead(${2:\\$bXhtmlStyle=true})$0"},
		{"trigger": "\\$APPLICATION->ShowHeadScripts", "contents": "\\$APPLICATION->ShowHeadScripts()$0"},
		{"trigger": "\\$APPLICATION->ShowHeadStrings", "contents": "\\$APPLICATION->ShowHeadStrings()$0"},
		{"trigger": "\\$APPLICATION->ShowMeta", "contents": "\\$APPLICATION->ShowMeta(${2:\\$id}, ${2:\\$meta_name=false}, ${4:\\$bXhtmlStyle=true})$0"},
		{"trigger": "\\$APPLICATION->ShowNavChain", "contents": "\\$APPLICATION->ShowNavChain(${2:\\$path=false}, ${2:\\$iNumFrom=0}, ${4:\\$sNavChainPath=false})$0"},
		{"trigger": "\\$APPLICATION->ShowNavChainEx", "contents": "\\$APPLICATION->ShowNavChainEx(${2:\\$path=false}, ${2:\\$iNumFrom=0}, ${4:\\$sNavChainPath=false})$0"},
		{"trigger": "\\$APPLICATION->ShowPanel", "contents": "\\$APPLICATION->ShowPanel()$0"},
		{"trigger": "\\$APPLICATION->ShowProperty", "contents": "\\$APPLICATION->ShowProperty(${2:\\$PROPERTY_ID}, ${2:\\$default_value = false})$0"},
		{"trigger": "\\$APPLICATION->ShowSpreadCookieHTML", "contents": "\\$APPLICATION->ShowSpreadCookieHTML()$0"},
		{"trigger": "\\$APPLICATION->ShowTitle", "contents": "\\$APPLICATION->ShowTitle(${2:\\$property_name='title'}, ${2:\\$strip_tags = true})$0"},
		{"trigger": "\\$APPLICATION->ShowViewContent", "contents": "\\$APPLICATION->ShowViewContent(${2:\\$view})$0"},
		{"trigger": "\\$APPLICATION->ThrowException", "contents": "\\$APPLICATION->ThrowException(${2:\\$msg}, ${2:\\$id = false})$0"},
		{"trigger": "\\$APPLICATION->UnJSEscape", "contents": "\\$APPLICATION->UnJSEscape(${2:\\$str})$0"},
		{"trigger": "\\$APPLICATION->_ReplaceNonLatin", "contents": "\\$APPLICATION->_ReplaceNonLatin(${2:\\$str})$0"},
		{"trigger": "\\$APPLICATION->__GetConditionFName", "contents": "\\$APPLICATION->__GetConditionFName()$0"},
		{"trigger": "\\$APPLICATION->__GetCssJsTime", "contents": "\\$APPLICATION->__GetCssJsTime(${2:\\$css_file})$0"},
		{"trigger": "\\$APPLICATION->__GetCssSelectCnt", "contents": "\\$APPLICATION->__GetCssSelectCnt(${2:\\$css})$0"},
		{"trigger": "\\$APPLICATION->__OptimizeCss", "contents": "\\$APPLICATION->__OptimizeCss(${2:\\$cssFile}, ${2:\\$cssSrcFile}, ${4:\\$site_template}, ${4:\\$addTemplateStyle}, ${6:\\$arTemplateCss}, ${6:\\$bXhtmlStyle})$0"},
		{"trigger": "\\$APPLICATION->__ReplaceUrlCSS", "contents": "\\$APPLICATION->__ReplaceUrlCSS(${2:\\$url}, ${2:\\$cssPath})$0"},
		{"trigger": "\\$APPLICATION->__WriteCssCache", "contents": "\\$APPLICATION->__WriteCssCache(${2:\\$css_path}, ${2:\\$contents}, ${4:\\$gzip_content = true})$0"},
		{"trigger": "\\$APPLICATION->__construct", "contents": "\\$APPLICATION->__construct()$0"},
		{"trigger": "\\$APPLICATION->_mkchain", "contents": "\\$APPLICATION->_mkchain(${2:\\$arChain}, ${2:\\$strChainTemplate}, ${4:\\$bIncludeOnce=false}, ${4:\\$bShowIcons = true})$0"},
		{"trigger": "\\$APPLICATION->err_mess", "contents": "\\$APPLICATION->err_mess()$0"},
		{"trigger": "\\$APPLICATION->get_cookie", "contents": "\\$APPLICATION->get_cookie(${2:\\$name}, ${2:\\$name_prefix=false})$0"},
		{"trigger": "\\$APPLICATION->reinitPath", "contents": "\\$APPLICATION->reinitPath()$0"},
		{"trigger": "\\$APPLICATION->set_cookie", "contents": "\\$APPLICATION->set_cookie(${2:\\$name}, ${2:\\$value}, ${4:\\$time=false}, ${4:\\$folder='/'}, ${6:\\$domain=false}, ${6:\\$secure=false}, ${8:\\$spread=true}, ${8:\\$name_prefix=false})$0"},
		{"trigger": "CMainAdmin::GetTemplateList", "contents": "${1:CMainAdmin}::GetTemplateList(${2:\\$rel_dir})$0"},
		{"trigger": "CMainPage::RedirectToSite", "contents": "${1:CMainPage}::RedirectToSite(${2:\\$site})$0"},
		{"trigger": "CMenu::GetMenuHtml", "contents": "${1:CMenu}::GetMenuHtml()$0"},
		{"trigger": "CMenu::GetMenuHtmlEx", "contents": "${1:CMenu}::GetMenuHtmlEx()$0"},
		{"trigger": "CMenu::Init", "contents": "${1:CMenu}::Init(${2:\\$InitDir}, ${2:\\$bMenuExt=false}, ${4:\\$template=false}, ${4:\\$onlyCurrentDir=false})$0"},
		{"trigger": "CMenu::RecalcMenu", "contents": "${1:CMenu}::RecalcMenu(${2:\\$bMultiSelect=false})$0"},
		{"trigger": "CMenuCustom::AddItem", "contents": "${1:CMenuCustom}::AddItem(${2:\\$type='left'}, ${2:\\$arItem=array()})$0"},
		{"trigger": "CMenuCustom::GetItems", "contents": "${1:CMenuCustom}::GetItems(${2:\\$type='left'})$0"},
		{"trigger": "CModule::Add", "contents": "${1:CModule}::Add()$0"},
		{"trigger": "CModule::AddAutoloadClasses", "contents": "${1:CModule}::AddAutoloadClasses(${2:\\$module}, ${2:\\$arParams = array()})$0"},
		{"trigger": "CModule::AutoloadClassDefined", "contents": "${1:CModule}::AutoloadClassDefined(${2:\\$className})$0"},
		{"trigger": "CModule::CreateModuleObject", "contents": "${1:CModule}::CreateModuleObject(${2:\\$moduleId})$0"},
		{"trigger": "CModule::DoInstall", "contents": "${1:CModule}::DoInstall()$0"},
		{"trigger": "CModule::DoUninstall", "contents": "${1:CModule}::DoUninstall()$0"},
		{"trigger": "CModule::GetDropDownList", "contents": "${1:CModule}::GetDropDownList(${2:\\$strSqlOrder='ORDER BY ID'})$0"},
		{"trigger": "CModule::GetList", "contents": "${1:CModule}::GetList()$0"},
		{"trigger": "CModule::GetModuleTasks", "contents": "${1:CModule}::GetModuleTasks()$0"},
		{"trigger": "CModule::IncludeModule", "contents": "${1:CModule}::IncludeModule(${2:\\$module_name})$0"},
		{"trigger": "CModule::IncludeModuleEx", "contents": "${1:CModule}::IncludeModuleEx(${2:\\$module_name})$0"},
		{"trigger": "CModule::InstallDB", "contents": "${1:CModule}::InstallDB()$0"},
		{"trigger": "CModule::InstallEvents", "contents": "${1:CModule}::InstallEvents()$0"},
		{"trigger": "CModule::InstallFiles", "contents": "${1:CModule}::InstallFiles()$0"},
		{"trigger": "CModule::InstallTasks", "contents": "${1:CModule}::InstallTasks()$0"},
		{"trigger": "CModule::IsInstalled", "contents": "${1:CModule}::IsInstalled()$0"},
		{"trigger": "CModule::Remove", "contents": "${1:CModule}::Remove()$0"},
		{"trigger": "CModule::RequireAutoloadClass", "contents": "${1:CModule}::RequireAutoloadClass(${2:\\$className})$0"},
		{"trigger": "CModule::UnInstallDB", "contents": "${1:CModule}::UnInstallDB()$0"},
		{"trigger": "CModule::UnInstallEvents", "contents": "${1:CModule}::UnInstallEvents()$0"},
		{"trigger": "CModule::UnInstallFiles", "contents": "${1:CModule}::UnInstallFiles()$0"},
		{"trigger": "CModule::UnInstallTasks", "contents": "${1:CModule}::UnInstallTasks()$0"},
		{"trigger": "CModule::_GetCache", "contents": "${1:CModule}::_GetCache()$0"},
		{"trigger": "CModule::_GetName", "contents": "${1:CModule}::_GetName(${2:\\$arEvent})$0"},
		{"trigger": "CModule::err_mess", "contents": "${1:CModule}::err_mess()$0"},
		{"trigger": "COperation::GetAllowedModules", "contents": "${1:COperation}::GetAllowedModules()$0"},
		{"trigger": "COperation::GetBindingList", "contents": "${1:COperation}::GetBindingList()$0"},
		{"trigger": "COperation::GetIDByName", "contents": "${1:COperation}::GetIDByName(${2:\\$name})$0"},
		{"trigger": "COperation::GetLangDescription", "contents": "${1:COperation}::GetLangDescription(${2:\\$name,\\$desc})$0"},
		{"trigger": "COperation::GetLangTitle", "contents": "${1:COperation}::GetLangTitle(${2:\\$name})$0"},
		{"trigger": "COperation::GetList", "contents": "${1:COperation}::GetList(${2:\\$arOrder = array('MODULE_ID'=>'asc'),\\$arFilter=array()})$0"},
		{"trigger": "COperation::err_mess", "contents": "${1:COperation}::err_mess()$0"},
		{"trigger": "COption::GetOptionInt", "contents": "${1:COption}::GetOptionInt(${2:\\$module_id}, ${2:\\$name}, ${4:\\$def=''}, ${4:\\$site=false})$0"},
		{"trigger": "COption::GetOptionString", "contents": "${1:COption}::GetOptionString(${2:\\$module_id}, ${2:\\$name}, ${4:\\$def=''}, ${4:\\$site=false}, ${6:\\$bExactSite=false})$0"},
		{"trigger": "COption::RemoveOption", "contents": "${1:COption}::RemoveOption(${2:\\$module_id}, ${2:\\$name=''}, ${4:\\$site=false})$0"},
		{"trigger": "COption::SetOptionInt", "contents": "${1:COption}::SetOptionInt(${2:\\$module_id}, ${2:\\$name}, ${4:\\$value=''}, ${4:\\$desc=''}, ${6:\\$site=''})$0"},
		{"trigger": "COption::SetOptionString", "contents": "${1:COption}::SetOptionString(${2:\\$module_id}, ${2:\\$name}, ${4:\\$value=''}, ${4:\\$desc=false}, ${6:\\$site=''})$0"},
		{"trigger": "COption::err_mess", "contents": "${1:COption}::err_mess()$0"},
		{"trigger": "COtherAuthProvider::GetFormHtml", "contents": "${1:COtherAuthProvider}::GetFormHtml(${2:\\$arParams=false})$0"},
		{"trigger": "COtherAuthProvider::GetNames", "contents": "${1:COtherAuthProvider}::GetNames(${2:\\$arCodes})$0"},
		{"trigger": "CPHPCache::AbortDataCache", "contents": "${1:CPHPCache}::AbortDataCache()$0"},
		{"trigger": "CPHPCache::CPHPCache", "contents": "${1:CPHPCache}::CPHPCache()$0"},
		{"trigger": "CPHPCache::Clean", "contents": "${1:CPHPCache}::Clean(${2:\\$uniq_str}, ${2:\\$initdir = false}, ${4:\\$basedir = 'cache'})$0"},
		{"trigger": "CPHPCache::CleanDir", "contents": "${1:CPHPCache}::CleanDir(${2:\\$initdir = false}, ${2:\\$basedir = 'cache'})$0"},
		{"trigger": "CPHPCache::EndDataCache", "contents": "${1:CPHPCache}::EndDataCache(${2:\\$vars=false})$0"},
		{"trigger": "CPHPCache::GetPath", "contents": "${1:CPHPCache}::GetPath(${2:\\$uniq_str})$0"},
		{"trigger": "CPHPCache::GetVars", "contents": "${1:CPHPCache}::GetVars()$0"},
		{"trigger": "CPHPCache::InitCache", "contents": "${1:CPHPCache}::InitCache(${2:\\$TTL}, ${2:\\$uniq_str}, ${4:\\$initdir=false}, ${4:\\$basedir = 'cache'})$0"},
		{"trigger": "CPHPCache::IsCacheExpired", "contents": "${1:CPHPCache}::IsCacheExpired(${2:\\$path})$0"},
		{"trigger": "CPHPCache::Output", "contents": "${1:CPHPCache}::Output()$0"},
		{"trigger": "CPHPCache::StartDataCache", "contents": "${1:CPHPCache}::StartDataCache(${2:\\$TTL=false}, ${2:\\$uniq_str=false}, ${4:\\$initdir=false}, ${4:\\$vars=array()}, ${6:\\$basedir = 'cache'})$0"},
		{"trigger": "CPHPCache::__construct", "contents": "${1:CPHPCache}::__construct()$0"},
		{"trigger": "CPHPCache::_new_cache_object", "contents": "${1:CPHPCache}::_new_cache_object()$0"},
		{"trigger": "CPHPCacheAPC::CPHPCacheAPC", "contents": "${1:CPHPCacheAPC}::CPHPCacheAPC()$0"},
		{"trigger": "CPHPCacheAPC::IsAvailable", "contents": "${1:CPHPCacheAPC}::IsAvailable()$0"},
		{"trigger": "CPHPCacheAPC::IsCacheExpired", "contents": "${1:CPHPCacheAPC}::IsCacheExpired(${2:\\$path})$0"},
		{"trigger": "CPHPCacheAPC::__construct", "contents": "${1:CPHPCacheAPC}::__construct()$0"},
		{"trigger": "CPHPCacheAPC::clean", "contents": "${1:CPHPCacheAPC}::clean(${2:\\$basedir}, ${2:\\$initdir = false}, ${4:\\$filename = false})$0"},
		{"trigger": "CPHPCacheAPC::read", "contents": "${1:CPHPCacheAPC}::read(${2:&\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPHPCacheAPC::write", "contents": "${1:CPHPCacheAPC}::write(${2:\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPHPCacheEAccelerator::CPHPCacheEAccelerator", "contents": "${1:CPHPCacheEAccelerator}::CPHPCacheEAccelerator()$0"},
		{"trigger": "CPHPCacheEAccelerator::IsAvailable", "contents": "${1:CPHPCacheEAccelerator}::IsAvailable()$0"},
		{"trigger": "CPHPCacheEAccelerator::IsCacheExpired", "contents": "${1:CPHPCacheEAccelerator}::IsCacheExpired(${2:\\$path})$0"},
		{"trigger": "CPHPCacheEAccelerator::__construct", "contents": "${1:CPHPCacheEAccelerator}::__construct()$0"},
		{"trigger": "CPHPCacheEAccelerator::clean", "contents": "${1:CPHPCacheEAccelerator}::clean(${2:\\$basedir}, ${2:\\$initdir = false}, ${4:\\$filename = false})$0"},
		{"trigger": "CPHPCacheEAccelerator::read", "contents": "${1:CPHPCacheEAccelerator}::read(${2:&\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPHPCacheEAccelerator::write", "contents": "${1:CPHPCacheEAccelerator}::write(${2:\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPHPCacheFiles::DelayedDelete", "contents": "${1:CPHPCacheFiles}::DelayedDelete(${2:\\$count = 1}, ${2:\\$level = 1})$0"},
		{"trigger": "CPHPCacheFiles::DeleteOneDir", "contents": "${1:CPHPCacheFiles}::DeleteOneDir()$0"},
		{"trigger": "CPHPCacheFiles::IsAvailable", "contents": "${1:CPHPCacheFiles}::IsAvailable()$0"},
		{"trigger": "CPHPCacheFiles::IsCacheExpired", "contents": "${1:CPHPCacheFiles}::IsCacheExpired(${2:\\$path})$0"},
		{"trigger": "CPHPCacheFiles::clean", "contents": "${1:CPHPCacheFiles}::clean(${2:\\$basedir}, ${2:\\$initdir}, ${4:\\$filename = false})$0"},
		{"trigger": "CPHPCacheFiles::read", "contents": "${1:CPHPCacheFiles}::read(${2:&\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPHPCacheFiles::write", "contents": "${1:CPHPCacheFiles}::write(${2:\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPHPCacheMemcache::CPHPCacheMemcache", "contents": "${1:CPHPCacheMemcache}::CPHPCacheMemcache()$0"},
		{"trigger": "CPHPCacheMemcache::IsAvailable", "contents": "${1:CPHPCacheMemcache}::IsAvailable()$0"},
		{"trigger": "CPHPCacheMemcache::IsCacheExpired", "contents": "${1:CPHPCacheMemcache}::IsCacheExpired(${2:\\$path})$0"},
		{"trigger": "CPHPCacheMemcache::__construct", "contents": "${1:CPHPCacheMemcache}::__construct()$0"},
		{"trigger": "CPHPCacheMemcache::clean", "contents": "${1:CPHPCacheMemcache}::clean(${2:\\$basedir}, ${2:\\$initdir = false}, ${4:\\$filename = false})$0"},
		{"trigger": "CPHPCacheMemcache::close", "contents": "${1:CPHPCacheMemcache}::close()$0"},
		{"trigger": "CPHPCacheMemcache::read", "contents": "${1:CPHPCacheMemcache}::read(${2:&\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPHPCacheMemcache::write", "contents": "${1:CPHPCacheMemcache}::write(${2:\\$arAllVars}, ${2:\\$basedir}, ${4:\\$initdir}, ${4:\\$filename}, ${6:\\$TTL})$0"},
		{"trigger": "CPackageCancel::CPackageCancel", "contents": "${1:CPackageCancel}::CPackageCancel(${2:\\$package})$0"},
		{"trigger": "CPackageCancel::InitStep", "contents": "${1:CPackageCancel}::InitStep()$0"},
		{"trigger": "CPackageCancel::OnPostForm", "contents": "${1:CPackageCancel}::OnPostForm()$0"},
		{"trigger": "CPackageCancel::ShowStep", "contents": "${1:CPackageCancel}::ShowStep()$0"},
		{"trigger": "CPackageError::CPackageError", "contents": "${1:CPackageError}::CPackageError(${2:\\$package})$0"},
		{"trigger": "CPackageError::InitStep", "contents": "${1:CPackageError}::InitStep()$0"},
		{"trigger": "CPackageError::OnPostForm", "contents": "${1:CPackageError}::OnPostForm()$0"},
		{"trigger": "CPackageError::ShowStep", "contents": "${1:CPackageError}::ShowStep()$0"},
		{"trigger": "CPackageFinish::CPackageStepFinal", "contents": "${1:CPackageFinish}::CPackageStepFinal(${2:\\$package})$0"},
		{"trigger": "CPackageFinish::InitStep", "contents": "${1:CPackageFinish}::InitStep()$0"},
		{"trigger": "CPackageFinish::OnPostForm", "contents": "${1:CPackageFinish}::OnPostForm()$0"},
		{"trigger": "CPackageFinish::ShowStep", "contents": "${1:CPackageFinish}::ShowStep()$0"},
		{"trigger": "CPackageInstallService::CPackageInstallService", "contents": "${1:CPackageInstallService}::CPackageInstallService(${2:\\$package}, ${2:\\$serviceID})$0"},
		{"trigger": "CPackageInstallService::OnPostForm", "contents": "${1:CPackageInstallService}::OnPostForm()$0"},
		{"trigger": "CPackageInstallService::ShowStep", "contents": "${1:CPackageInstallService}::ShowStep()$0"},
		{"trigger": "CPackageInstallSite::CPackageInstallSite", "contents": "${1:CPackageInstallSite}::CPackageInstallSite(${2:\\$package}, ${2:\\$siteID})$0"},
		{"trigger": "CPackageInstallSite::OnPostForm", "contents": "${1:CPackageInstallSite}::OnPostForm()$0"},
		{"trigger": "CPackageInstallSite::ShowStep", "contents": "${1:CPackageInstallSite}::ShowStep()$0"},
		{"trigger": "CPackageInstallStructure::CPackageInstallStructure", "contents": "${1:CPackageInstallStructure}::CPackageInstallStructure()$0"},
		{"trigger": "CPackageInstallStructure::InitStep", "contents": "${1:CPackageInstallStructure}::InitStep()$0"},
		{"trigger": "CPackageInstallStructure::OnPostForm", "contents": "${1:CPackageInstallStructure}::OnPostForm()$0"},
		{"trigger": "CPackageInstallStructure::ShowStep", "contents": "${1:CPackageInstallStructure}::ShowStep()$0"},
		{"trigger": "CPackageInstallTemplate::CPackageInstallTemplate", "contents": "${1:CPackageInstallTemplate}::CPackageInstallTemplate(${2:\\$package}, ${2:\\$templateID})$0"},
		{"trigger": "CPackageInstallTemplate::OnPostForm", "contents": "${1:CPackageInstallTemplate}::OnPostForm()$0"},
		{"trigger": "CPackageInstallTemplate::ShowStep", "contents": "${1:CPackageInstallTemplate}::ShowStep()$0"},
		{"trigger": "CPackageLicense::CPackageLicense", "contents": "${1:CPackageLicense}::CPackageLicense(${2:\\$package})$0"},
		{"trigger": "CPackageLicense::InitStep", "contents": "${1:CPackageLicense}::InitStep()$0"},
		{"trigger": "CPackageLicense::OnPostForm", "contents": "${1:CPackageLicense}::OnPostForm()$0"},
		{"trigger": "CPackageLicense::ShowStep", "contents": "${1:CPackageLicense}::ShowStep()$0"},
		{"trigger": "CPackageSelectGroup::CPackageSelectGroup", "contents": "${1:CPackageSelectGroup}::CPackageSelectGroup(${2:\\$package})$0"},
		{"trigger": "CPackageSelectGroup::InitStep", "contents": "${1:CPackageSelectGroup}::InitStep()$0"},
		{"trigger": "CPackageSelectGroup::OnPostForm", "contents": "${1:CPackageSelectGroup}::OnPostForm()$0"},
		{"trigger": "CPackageSelectGroup::ShowStep", "contents": "${1:CPackageSelectGroup}::ShowStep()$0"},
		{"trigger": "CPackageSelectService::CPackageSelectService", "contents": "${1:CPackageSelectService}::CPackageSelectService(${2:\\$package})$0"},
		{"trigger": "CPackageSelectService::InitStep", "contents": "${1:CPackageSelectService}::InitStep()$0"},
		{"trigger": "CPackageSelectService::OnPostForm", "contents": "${1:CPackageSelectService}::OnPostForm()$0"},
		{"trigger": "CPackageSelectService::ShowStep", "contents": "${1:CPackageSelectService}::ShowStep()$0"},
		{"trigger": "CPackageSelectSite::CPackageSelectSite", "contents": "${1:CPackageSelectSite}::CPackageSelectSite(${2:\\$package})$0"},
		{"trigger": "CPackageSelectSite::InitStep", "contents": "${1:CPackageSelectSite}::InitStep()$0"},
		{"trigger": "CPackageSelectSite::OnPostForm", "contents": "${1:CPackageSelectSite}::OnPostForm()$0"},
		{"trigger": "CPackageSelectSite::ShowStep", "contents": "${1:CPackageSelectSite}::ShowStep()$0"},
		{"trigger": "CPackageSelectStructure::CPackageSelectStructure", "contents": "${1:CPackageSelectStructure}::CPackageSelectStructure(${2:\\$package})$0"},
		{"trigger": "CPackageSelectStructure::DisplayTree", "contents": "${1:CPackageSelectStructure}::DisplayTree(${2:&\\$arStructure}, ${2:\\$systemTree = false})$0"},
		{"trigger": "CPackageSelectStructure::InitStep", "contents": "${1:CPackageSelectStructure}::InitStep()$0"},
		{"trigger": "CPackageSelectStructure::ShowStep", "contents": "${1:CPackageSelectStructure}::ShowStep()$0"},
		{"trigger": "CPackageSelectTemplate::CPackageSelectTemplate", "contents": "${1:CPackageSelectTemplate}::CPackageSelectTemplate(${2:\\$package})$0"},
		{"trigger": "CPackageSelectTemplate::InitStep", "contents": "${1:CPackageSelectTemplate}::InitStep()$0"},
		{"trigger": "CPackageSelectTemplate::OnPostForm", "contents": "${1:CPackageSelectTemplate}::OnPostForm()$0"},
		{"trigger": "CPackageSelectTemplate::ShowStep", "contents": "${1:CPackageSelectTemplate}::ShowStep()$0"},
		{"trigger": "CPackageStartInstall::CPackageStartInstall", "contents": "${1:CPackageStartInstall}::CPackageStartInstall(${2:\\$package}, ${2:\\$arSelected})$0"},
		{"trigger": "CPackageStartInstall::InitStep", "contents": "${1:CPackageStartInstall}::InitStep()$0"},
		{"trigger": "CPackageStartInstall::OnPostForm", "contents": "${1:CPackageStartInstall}::OnPostForm()$0"},
		{"trigger": "CPackageStartInstall::ShowStep", "contents": "${1:CPackageStartInstall}::ShowStep()$0"},
		{"trigger": "CPackageWelcome::CPackageWelcome", "contents": "${1:CPackageWelcome}::CPackageWelcome(${2:\\$package})$0"},
		{"trigger": "CPackageWelcome::InitStep", "contents": "${1:CPackageWelcome}::InitStep()$0"},
		{"trigger": "CPackageWelcome::OnPostForm", "contents": "${1:CPackageWelcome}::OnPostForm()$0"},
		{"trigger": "CPackageWelcome::ShowStep", "contents": "${1:CPackageWelcome}::ShowStep()$0"},
		{"trigger": "CPageCache::AbortDataCache", "contents": "${1:CPageCache}::AbortDataCache()$0"},
		{"trigger": "CPageCache::Clean", "contents": "${1:CPageCache}::Clean(${2:\\$uniq_str}, ${2:\\$initdir = false}, ${4:\\$basedir = 'cache'})$0"},
		{"trigger": "CPageCache::CleanDir", "contents": "${1:CPageCache}::CleanDir(${2:\\$initdir = false}, ${2:\\$basedir = 'cache'})$0"},
		{"trigger": "CPageCache::EndDataCache", "contents": "${1:CPageCache}::EndDataCache()$0"},
		{"trigger": "CPageCache::GetPath", "contents": "${1:CPageCache}::GetPath(${2:\\$uniq_str})$0"},
		{"trigger": "CPageCache::InitCache", "contents": "${1:CPageCache}::InitCache(${2:\\$TTL}, ${2:\\$uniq_str}, ${4:\\$initdir = false}, ${4:\\$basedir = 'cache'})$0"},
		{"trigger": "CPageCache::IsCacheExpired", "contents": "${1:CPageCache}::IsCacheExpired(${2:\\$path})$0"},
		{"trigger": "CPageCache::Output", "contents": "${1:CPageCache}::Output()$0"},
		{"trigger": "CPageCache::StartDataCache", "contents": "${1:CPageCache}::StartDataCache(${2:\\$TTL}, ${2:\\$uniq_str=false}, ${4:\\$initdir=false}, ${4:\\$basedir = 'cache'})$0"},
		{"trigger": "CPageCache::__construct", "contents": "${1:CPageCache}::__construct()$0"},
		{"trigger": "CPageOption::GetOptionInt", "contents": "${1:CPageOption}::GetOptionInt(${2:\\$module_id}, ${2:\\$name}, ${4:\\$def=''}, ${4:\\$site=false})$0"},
		{"trigger": "CPageOption::GetOptionString", "contents": "${1:CPageOption}::GetOptionString(${2:\\$module_id}, ${2:\\$name}, ${4:\\$def=''}, ${4:\\$site=false})$0"},
		{"trigger": "CPageOption::RemoveOption", "contents": "${1:CPageOption}::RemoveOption(${2:\\$module_id}, ${2:\\$name=''}, ${4:\\$site=false})$0"},
		{"trigger": "CPageOption::SetOptionInt", "contents": "${1:CPageOption}::SetOptionInt(${2:\\$module_id}, ${2:\\$name}, ${4:\\$value=''}, ${4:\\$desc=''}, ${6:\\$site=''})$0"},
		{"trigger": "CPageOption::SetOptionString", "contents": "${1:CPageOption}::SetOptionString(${2:\\$module_id}, ${2:\\$name}, ${4:\\$value=''}, ${4:\\$desc=false}, ${6:\\$site=''})$0"},
		{"trigger": "CPageTemplate::GetList", "contents": "${1:CPageTemplate}::GetList(${2:\\$arSiteTemplates=array()})$0"},
		{"trigger": "CPageTemplate::_templ_sort", "contents": "${1:CPageTemplate}::_templ_sort(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CQAACheckListTests::checkVulnerabilities", "contents": "${1:CQAACheckListTests}::checkVulnerabilities(${2:\\$arParams})$0"},
		{"trigger": "CQAACheckListTests::defineScanParams", "contents": "${1:CQAACheckListTests}::defineScanParams()$0"},
		{"trigger": "CQAACheckListTests::getCurTemplate", "contents": "${1:CQAACheckListTests}::getCurTemplate(${2:\\$path,\\$mp_mode=false})$0"},
		{"trigger": "CQAACheckListTests::getFiles", "contents": "${1:CQAACheckListTests}::getFiles(${2:\\$path}, ${2:\\$skip_preg}, ${4:\\$filetypes}, ${4:\\$doc_root})$0"},
		{"trigger": "CRatingRule::Add", "contents": "${1:CRatingRule}::Add(${2:\\$arFields})$0"},
		{"trigger": "CRatingRule::Apply", "contents": "${1:CRatingRule}::Apply(${2:\\$ID})$0"},
		{"trigger": "CRatingRule::ApplyVetting", "contents": "${1:CRatingRule}::ApplyVetting(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingRule::Delete", "contents": "${1:CRatingRule}::Delete(${2:\\$ID})$0"},
		{"trigger": "CRatingRule::GetByID", "contents": "${1:CRatingRule}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CRatingRule::GetList", "contents": "${1:CRatingRule}::GetList(${2:\\$aSort=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CRatingRule::GetRatingRuleConfigs", "contents": "${1:CRatingRule}::GetRatingRuleConfigs(${2:\\$objectType = null}, ${2:\\$withRuleType = true})$0"},
		{"trigger": "CRatingRule::GetRatingRuleObjects", "contents": "${1:CRatingRule}::GetRatingRuleObjects()$0"},
		{"trigger": "CRatingRule::GetVetting", "contents": "${1:CRatingRule}::GetVetting(${2:\\$arFilter}, ${2:\\$arSort})$0"},
		{"trigger": "CRatingRule::Update", "contents": "${1:CRatingRule}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingRule::__CheckFields", "contents": "${1:CRatingRule}::__CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CRatingRule::err_mess", "contents": "${1:CRatingRule}::err_mess()$0"},
		{"trigger": "CRatingRulesMain::GetUfList", "contents": "${1:CRatingRulesMain}::GetUfList()$0"},
		{"trigger": "CRatingRulesMain::OnAfterAddRatingRule", "contents": "${1:CRatingRulesMain}::OnAfterAddRatingRule(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingRulesMain::OnAfterUpdateRatingRule", "contents": "${1:CRatingRulesMain}::OnAfterUpdateRatingRule(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingRulesMain::OnGetRatingRuleConfigs", "contents": "${1:CRatingRulesMain}::OnGetRatingRuleConfigs()$0"},
		{"trigger": "CRatingRulesMain::OnGetRatingRuleObjects", "contents": "${1:CRatingRulesMain}::OnGetRatingRuleObjects()$0"},
		{"trigger": "CRatingRulesMain::__AssembleConfigDefault", "contents": "${1:CRatingRulesMain}::__AssembleConfigDefault(${2:\\$objectType = null})$0"},
		{"trigger": "CRatingRulesMain::__CheckFields", "contents": "${1:CRatingRulesMain}::__CheckFields(${2:\\$entityId}, ${2:\\$arConfigs})$0"},
		{"trigger": "CRatingRulesMain::addToGroup", "contents": "${1:CRatingRulesMain}::addToGroup(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingRulesMain::changeUF", "contents": "${1:CRatingRulesMain}::changeUF(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingRulesMain::err_mess", "contents": "${1:CRatingRulesMain}::err_mess()$0"},
		{"trigger": "CRatingRulesMain::ratingCheck", "contents": "${1:CRatingRulesMain}::ratingCheck(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingRulesMain::ratingCheckInterval", "contents": "${1:CRatingRulesMain}::ratingCheckInterval(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingRulesMain::removeFromGroup", "contents": "${1:CRatingRulesMain}::removeFromGroup(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingRulesMain::voteCheck", "contents": "${1:CRatingRulesMain}::voteCheck(${2:\\$arConfigs})$0"},
		{"trigger": "CRatings::Add", "contents": "${1:CRatings}::Add(${2:\\$arFields})$0"},
		{"trigger": "CRatings::AddComponentResults", "contents": "${1:CRatings}::AddComponentResults(${2:\\$arComponentConfigs})$0"},
		{"trigger": "CRatings::AddRatingVote", "contents": "${1:CRatings}::AddRatingVote(${2:\\$arParam})$0"},
		{"trigger": "CRatings::AddResults", "contents": "${1:CRatings}::AddResults(${2:\\$arResults})$0"},
		{"trigger": "CRatings::AutoAssignGroup", "contents": "${1:CRatings}::AutoAssignGroup(${2:\\$groupId}, ${2:\\$authorityValueAdd}, ${4:\\$authorityValueDelete})$0"},
		{"trigger": "CRatings::BuildRating", "contents": "${1:CRatings}::BuildRating(${2:\\$ID})$0"},
		{"trigger": "CRatings::Calculate", "contents": "${1:CRatings}::Calculate(${2:\\$ID}, ${2:\\$bForceRecalc = false})$0"},
		{"trigger": "CRatings::CancelRatingVote", "contents": "${1:CRatings}::CancelRatingVote(${2:\\$arParam})$0"},
		{"trigger": "CRatings::CheckAllowVote", "contents": "${1:CRatings}::CheckAllowVote(${2:\\$arVoteParam})$0"},
		{"trigger": "CRatings::ClearData", "contents": "${1:CRatings}::ClearData()$0"},
		{"trigger": "CRatings::Delete", "contents": "${1:CRatings}::Delete(${2:\\$ID})$0"},
		{"trigger": "CRatings::GetarrayByID", "contents": "${1:CRatings}::GetarrayByID(${2:\\$ID})$0"},
		{"trigger": "CRatings::GetAuthorityRating", "contents": "${1:CRatings}::GetAuthorityRating()$0"},
		{"trigger": "CRatings::GetByID", "contents": "${1:CRatings}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CRatings::GetCommunityInfo", "contents": "${1:CRatings}::GetCommunityInfo(${2:\\$ratingId})$0"},
		{"trigger": "CRatings::GetList", "contents": "${1:CRatings}::GetList(${2:\\$arSort=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CRatings::GetRatingConfigs", "contents": "${1:CRatings}::GetRatingConfigs(${2:\\$objectType = null}, ${2:\\$withRatingType = true})$0"},
		{"trigger": "CRatings::GetRatingEntityTypes", "contents": "${1:CRatings}::GetRatingEntityTypes(${2:\\$objectType = null})$0"},
		{"trigger": "CRatings::GetRatingObjects", "contents": "${1:CRatings}::GetRatingObjects()$0"},
		{"trigger": "CRatings::GetRatingResult", "contents": "${1:CRatings}::GetRatingResult(${2:\\$ID}, ${2:\\$entityId})$0"},
		{"trigger": "CRatings::GetRatingUserProp", "contents": "${1:CRatings}::GetRatingUserProp(${2:\\$ratingId}, ${2:\\$entityId})$0"},
		{"trigger": "CRatings::GetRatingValueInfo", "contents": "${1:CRatings}::GetRatingValueInfo(${2:\\$ratingId})$0"},
		{"trigger": "CRatings::GetRatingVoteList", "contents": "${1:CRatings}::GetRatingVoteList(${2:\\$arParam})$0"},
		{"trigger": "CRatings::GetRatingVoteResult", "contents": "${1:CRatings}::GetRatingVoteResult(${2:\\$arEntityTypeId}, ${2:\\$entityId}, ${4:\\$user_id = false})$0"},
		{"trigger": "CRatings::GetVoteGroup", "contents": "${1:CRatings}::GetVoteGroup(${2:\\$type = ''})$0"},
		{"trigger": "CRatings::GetWeightList", "contents": "${1:CRatings}::GetWeightList(${2:\\$arSort=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CRatings::OnAfterUserRegister", "contents": "${1:CRatings}::OnAfterUserRegister(${2:\\$arFields})$0"},
		{"trigger": "CRatings::SetAuthorityDefaultValue", "contents": "${1:CRatings}::SetAuthorityDefaultValue(${2:\\$arParams})$0"},
		{"trigger": "CRatings::SetAuthorityRating", "contents": "${1:CRatings}::SetAuthorityRating(${2:\\$ratingId})$0"},
		{"trigger": "CRatings::SetVoteGroup", "contents": "${1:CRatings}::SetVoteGroup(${2:\\$arGroupId}, ${2:\\$type})$0"},
		{"trigger": "CRatings::SetWeight", "contents": "${1:CRatings}::SetWeight(${2:\\$arConfigs})$0"},
		{"trigger": "CRatings::Update", "contents": "${1:CRatings}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatings::UpdateRatingUserBonus", "contents": "${1:CRatings}::UpdateRatingUserBonus(${2:\\$arParam})$0"},
		{"trigger": "CRatings::__AddComponents", "contents": "${1:CRatings}::__AddComponents(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatings::__CheckFields", "contents": "${1:CRatings}::__CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CRatings::__SortWeight", "contents": "${1:CRatings}::__SortWeight(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CRatings::__UpdateComponents", "contents": "${1:CRatings}::__UpdateComponents(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatings::err_mess", "contents": "${1:CRatings}::err_mess()$0"},
		{"trigger": "CRatingsComponentsMain::CalcUserBonus", "contents": "${1:CRatingsComponentsMain}::CalcUserBonus(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingsComponentsMain::CalcVoteUser", "contents": "${1:CRatingsComponentsMain}::CalcVoteUser(${2:\\$arConfigs})$0"},
		{"trigger": "CRatingsComponentsMain::GetShowRating", "contents": "${1:CRatingsComponentsMain}::GetShowRating(${2:&\\$arParams})$0"},
		{"trigger": "CRatingsComponentsMain::OnAfterAddRating", "contents": "${1:CRatingsComponentsMain}::OnAfterAddRating(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingsComponentsMain::OnAfterUpdateRating", "contents": "${1:CRatingsComponentsMain}::OnAfterUpdateRating(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CRatingsComponentsMain::OnGetRatingConfigs", "contents": "${1:CRatingsComponentsMain}::OnGetRatingConfigs()$0"},
		{"trigger": "CRatingsComponentsMain::OnGetRatingContentOwner", "contents": "${1:CRatingsComponentsMain}::OnGetRatingContentOwner(${2:\\$arParams})$0"},
		{"trigger": "CRatingsComponentsMain::OnGetRatingObject", "contents": "${1:CRatingsComponentsMain}::OnGetRatingObject()$0"},
		{"trigger": "CRatingsComponentsMain::__AssembleConfigDefault", "contents": "${1:CRatingsComponentsMain}::__AssembleConfigDefault(${2:\\$objectType = null})$0"},
		{"trigger": "CRatingsComponentsMain::__CheckFields", "contents": "${1:CRatingsComponentsMain}::__CheckFields(${2:\\$entityId}, ${2:\\$arConfigs})$0"},
		{"trigger": "CReferenceEntityField::__construct", "contents": "${1:CReferenceEntityField}::__construct(${2:\\$name}, ${2:CBaseEntity \\$entity}, ${4:CBaseEntity \\$refEntity}, ${4:\\$reference}, ${6:\\$parameters = array()})$0"},
		{"trigger": "CReferenceEntityField::getJoinType", "contents": "${1:CReferenceEntityField}::getJoinType()$0"},
		{"trigger": "CReferenceEntityField::getRefEntity", "contents": "${1:CReferenceEntityField}::getRefEntity()$0"},
		{"trigger": "CReferenceEntityField::getReference", "contents": "${1:CReferenceEntityField}::getReference()$0"},
		{"trigger": "CRsaBcmathProvider::Decrypt", "contents": "${1:CRsaBcmathProvider}::Decrypt(${2:\\$data})$0"},
		{"trigger": "CRsaBcmathProvider::GCD", "contents": "${1:CRsaBcmathProvider}::GCD(${2:\\$e}, ${2:\\$m})$0"},
		{"trigger": "CRsaBcmathProvider::Keygen", "contents": "${1:CRsaBcmathProvider}::Keygen(${2:\\$keylen=false})$0"},
		{"trigger": "CRsaBcmathProvider::LoadKeys", "contents": "${1:CRsaBcmathProvider}::LoadKeys()$0"},
		{"trigger": "CRsaBcmathProvider::SaveKeys", "contents": "${1:CRsaBcmathProvider}::SaveKeys(${2:\\$arKeys})$0"},
		{"trigger": "CRsaBcmathProvider::bitlenght", "contents": "${1:CRsaBcmathProvider}::bitlenght(${2:\\$in})$0"},
		{"trigger": "CRsaBcmathProvider::ext", "contents": "${1:CRsaBcmathProvider}::ext(${2:\\$e1}, ${2:\\$em})$0"},
		{"trigger": "CRsaBcmathProvider::getRndPrime", "contents": "${1:CRsaBcmathProvider}::getRndPrime(${2:\\$cnt})$0"},
		{"trigger": "CRsaBcmathProvider::get_e", "contents": "${1:CRsaBcmathProvider}::get_e(${2:\\$m})$0"},
		{"trigger": "CRsaBcmathProvider::getkeysfrompq", "contents": "${1:CRsaBcmathProvider}::getkeysfrompq(${2:\\$p}, ${2:\\$q})$0"},
		{"trigger": "CRsaBcmathProvider::int2raw", "contents": "${1:CRsaBcmathProvider}::int2raw(${2:\\$in})$0"},
		{"trigger": "CRsaBcmathProvider::is_prime", "contents": "${1:CRsaBcmathProvider}::is_prime(${2:\\$in})$0"},
		{"trigger": "CRsaBcmathProvider::miller", "contents": "${1:CRsaBcmathProvider}::miller(${2:\\$in}, ${2:\\$b})$0"},
		{"trigger": "CRsaBcmathProvider::powmod", "contents": "${1:CRsaBcmathProvider}::powmod(${2:\\$n}, ${2:\\$p}, ${4:\\$m})$0"},
		{"trigger": "CRsaBcmathProvider::raw2int", "contents": "${1:CRsaBcmathProvider}::raw2int(${2:\\$in})$0"},
		{"trigger": "CRsaOpensslProvider::Decrypt", "contents": "${1:CRsaOpensslProvider}::Decrypt(${2:\\$data})$0"},
		{"trigger": "CRsaOpensslProvider::Keygen", "contents": "${1:CRsaOpensslProvider}::Keygen(${2:\\$keylen=false})$0"},
		{"trigger": "CRsaOpensslProvider::LoadKeys", "contents": "${1:CRsaOpensslProvider}::LoadKeys()$0"},
		{"trigger": "CRsaOpensslProvider::SaveKeys", "contents": "${1:CRsaOpensslProvider}::SaveKeys(${2:\\$arKeys})$0"},
		{"trigger": "CRsaOpensslProvider::SetKeys", "contents": "${1:CRsaOpensslProvider}::SetKeys(${2:\\$arKeys})$0"},
		{"trigger": "CRsaOpensslProvider::get_openssl_key_details", "contents": "${1:CRsaOpensslProvider}::get_openssl_key_details(${2:\\$key})$0"},
		{"trigger": "CRsaProvider::Decrypt", "contents": "${1:CRsaProvider}::Decrypt(${2:\\$data})$0"},
		{"trigger": "CRsaProvider::GetPublicKey", "contents": "${1:CRsaProvider}::GetPublicKey()$0"},
		{"trigger": "CRsaProvider::Keygen", "contents": "${1:CRsaProvider}::Keygen(${2:\\$keylen=false})$0"},
		{"trigger": "CRsaProvider::LoadKeys", "contents": "${1:CRsaProvider}::LoadKeys()$0"},
		{"trigger": "CRsaProvider::SaveKeys", "contents": "${1:CRsaProvider}::SaveKeys(${2:\\$arKeys})$0"},
		{"trigger": "CRsaProvider::SetKeys", "contents": "${1:CRsaProvider}::SetKeys(${2:\\$arKeys})$0"},
		{"trigger": "CRsaSecurity::AcceptFromForm", "contents": "${1:CRsaSecurity}::AcceptFromForm(${2:\\$arParams})$0"},
		{"trigger": "CRsaSecurity::AddToForm", "contents": "${1:CRsaSecurity}::AddToForm(${2:\\$formid}, ${2:\\$arParams})$0"},
		{"trigger": "CRsaSecurity::GetLib", "contents": "${1:CRsaSecurity}::GetLib()$0"},
		{"trigger": "CRsaSecurity::GetNewRsaRand", "contents": "${1:CRsaSecurity}::GetNewRsaRand()$0"},
		{"trigger": "CRsaSecurity::Keygen", "contents": "${1:CRsaSecurity}::Keygen(${2:\\$keylen=false})$0"},
		{"trigger": "CRsaSecurity::LoadKeys", "contents": "${1:CRsaSecurity}::LoadKeys()$0"},
		{"trigger": "CRsaSecurity::Possible", "contents": "${1:CRsaSecurity}::Possible()$0"},
		{"trigger": "CRsaSecurity::SaveKeys", "contents": "${1:CRsaSecurity}::SaveKeys(${2:\\$arKeys})$0"},
		{"trigger": "CRsaSecurity::SetKeys", "contents": "${1:CRsaSecurity}::SetKeys(${2:\\$arKeys})$0"},
		{"trigger": "CRsaSecurity::__construct", "contents": "${1:CRsaSecurity}::__construct(${2:\\$lib=false})$0"},
		{"trigger": "CSQLWhere::ForLIKE", "contents": "${1:CSQLWhere}::ForLIKE(${2:\\$str})$0"},
		{"trigger": "CSQLWhere::GetJoins", "contents": "${1:CSQLWhere}::GetJoins()$0"},
		{"trigger": "CSQLWhere::GetQuery", "contents": "${1:CSQLWhere}::GetQuery(${2:\\$arFilter})$0"},
		{"trigger": "CSQLWhere::GetQueryEx", "contents": "${1:CSQLWhere}::GetQueryEx(${2:\\$arFilter}, ${2:&\\$arJoins}, ${4:\\$level=0})$0"},
		{"trigger": "CSQLWhere::MakeOperation", "contents": "${1:CSQLWhere}::MakeOperation(${2:\\$key})$0"},
		{"trigger": "CSQLWhere::SetFields", "contents": "${1:CSQLWhere}::SetFields(${2:\\$arFields})$0"},
		{"trigger": "CSQLWhere::_Empty", "contents": "${1:CSQLWhere}::_Empty(${2:\\$field})$0"},
		{"trigger": "CSQLWhere::_ExprEQ", "contents": "${1:CSQLWhere}::_ExprEQ(${2:\\$field}, ${2:CSQLWhereExpression \\$val})$0"},
		{"trigger": "CSQLWhere::_ExprNotEQ", "contents": "${1:CSQLWhere}::_ExprNotEQ(${2:\\$field}, ${2:CSQLWhereExpression \\$val})$0"},
		{"trigger": "CSQLWhere::_NotEmpty", "contents": "${1:CSQLWhere}::_NotEmpty(${2:\\$field})$0"},
		{"trigger": "CSQLWhere::_StringEQ", "contents": "${1:CSQLWhere}::_StringEQ(${2:\\$field}, ${2:\\$sql_value})$0"},
		{"trigger": "CSQLWhere::_StringIN", "contents": "${1:CSQLWhere}::_StringIN(${2:\\$field}, ${2:\\$sql_values})$0"},
		{"trigger": "CSQLWhere::_StringNotEQ", "contents": "${1:CSQLWhere}::_StringNotEQ(${2:\\$field}, ${2:\\$sql_value})$0"},
		{"trigger": "CSQLWhere::_StringNotIN", "contents": "${1:CSQLWhere}::_StringNotIN(${2:\\$field}, ${2:\\$sql_values})$0"},
		{"trigger": "CSQLWhere::_Upper", "contents": "${1:CSQLWhere}::_Upper(${2:\\$field})$0"},
		{"trigger": "CSQLWhereExpression::__construct", "contents": "${1:CSQLWhereExpression}::__construct(${2:\\$expression}, ${2:\\$args = null})$0"},
		{"trigger": "CSQLWhereExpression::compile", "contents": "${1:CSQLWhereExpression}::compile()$0"},
		{"trigger": "CSQLWhereExpression::execPlaceholders", "contents": "${1:CSQLWhereExpression}::execPlaceholders(${2:\\$matches})$0"},
		{"trigger": "CSVUserImport::AttachUsersToIBlock", "contents": "${1:CSVUserImport}::AttachUsersToIBlock(${2:\\$iblockID})$0"},
		{"trigger": "CSVUserImport::CSVUserImport", "contents": "${1:CSVUserImport}::CSVUserImport(${2:\\$csvFilePath}, ${2:\\$delimiter})$0"},
		{"trigger": "CSVUserImport::CheckRequiredFields", "contents": "${1:CSVUserImport}::CheckRequiredFields()$0"},
		{"trigger": "CSVUserImport::GenerateUserPassword", "contents": "${1:CSVUserImport}::GenerateUserPassword(${2:\\$pass_len=10})$0"},
		{"trigger": "CSVUserImport::GetDefaultEmail", "contents": "${1:CSVUserImport}::GetDefaultEmail()$0"},
		{"trigger": "CSVUserImport::GetErrorMessage", "contents": "${1:CSVUserImport}::GetErrorMessage()$0"},
		{"trigger": "CSVUserImport::IgnoreDuplicate", "contents": "${1:CSVUserImport}::IgnoreDuplicate(${2:\\$ignore = true})$0"},
		{"trigger": "CSVUserImport::ImportUser", "contents": "${1:CSVUserImport}::ImportUser()$0"},
		{"trigger": "CSVUserImport::IsErrorOccured", "contents": "${1:CSVUserImport}::IsErrorOccured()$0"},
		{"trigger": "CSVUserImport::SetCallback", "contents": "${1:CSVUserImport}::SetCallback(${2:\\$functionName})$0"},
		{"trigger": "CSVUserImport::SetDefaultEmail", "contents": "${1:CSVUserImport}::SetDefaultEmail(${2:\\$email})$0"},
		{"trigger": "CSVUserImport::SetExternalAuthID", "contents": "${1:CSVUserImport}::SetExternalAuthID(${2:\\$externalAuthID})$0"},
		{"trigger": "CSVUserImport::SetImageFilePath", "contents": "${1:CSVUserImport}::SetImageFilePath(${2:\\$relativePath})$0"},
		{"trigger": "CSVUserImport::SetUserGroups", "contents": "${1:CSVUserImport}::SetUserGroups(${2:\\$arGroups})$0"},
		{"trigger": "CSVUserImport::SetUserPropertyName", "contents": "${1:CSVUserImport}::SetUserPropertyName(${2:\\$userPropertyName})$0"},
		{"trigger": "CSVUserImport::__CreateUserProperty", "contents": "${1:CSVUserImport}::__CreateUserProperty()$0"},
		{"trigger": "CSVUserImport::__GetIBlockSectionID", "contents": "${1:CSVUserImport}::__GetIBlockSectionID(${2:&\\$arFields})$0"},
		{"trigger": "CScalarEntityField::__construct", "contents": "${1:CScalarEntityField}::__construct(${2:\\$name}, ${2:\\$dataType}, ${4:CBaseEntity \\$entity}, ${4:\\$parameters = array()})$0"},
		{"trigger": "CScalarEntityField::isPrimary", "contents": "${1:CScalarEntityField}::isPrimary()$0"},
		{"trigger": "CSite::Add", "contents": "${1:CSite}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSite::CheckFields", "contents": "${1:CSite}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CSite::Delete", "contents": "${1:CSite}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSite::GetByID", "contents": "${1:CSite}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSite::GetCurTemplate", "contents": "${1:CSite}::GetCurTemplate()$0"},
		{"trigger": "CSite::GetDateFormat", "contents": "${1:CSite}::GetDateFormat(${2:\\$type='FULL'}, ${2:\\$lang=false}, ${4:\\$bSearchInSitesOnly=false})$0"},
		{"trigger": "CSite::GetDefList", "contents": "${1:CSite}::GetDefList()$0"},
		{"trigger": "CSite::GetDefSite", "contents": "${1:CSite}::GetDefSite(${2:\\$LID = false})$0"},
		{"trigger": "CSite::GetList", "contents": "${1:CSite}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CSite::GetSiteByFullPath", "contents": "${1:CSite}::GetSiteByFullPath(${2:\\$path}, ${2:\\$bOneResult = true})$0"},
		{"trigger": "CSite::GetSiteDocRoot", "contents": "${1:CSite}::GetSiteDocRoot(${2:\\$site})$0"},
		{"trigger": "CSite::GetTemplateList", "contents": "${1:CSite}::GetTemplateList(${2:\\$site_id})$0"},
		{"trigger": "CSite::GetTimeFormat", "contents": "${1:CSite}::GetTimeFormat(${2:\\$lang=false}, ${2:\\$bSearchInSitesOnly = false})$0"},
		{"trigger": "CSite::GetWeekStart", "contents": "${1:CSite}::GetWeekStart()$0"},
		{"trigger": "CSite::InDir", "contents": "${1:CSite}::InDir(${2:\\$strDir})$0"},
		{"trigger": "CSite::InGroup", "contents": "${1:CSite}::InGroup(${2:\\$arGroups})$0"},
		{"trigger": "CSite::InPeriod", "contents": "${1:CSite}::InPeriod(${2:\\$iUnixTimestampFrom}, ${2:\\$iUnixTimestampTo})$0"},
		{"trigger": "CSite::IsDistinctDocRoots", "contents": "${1:CSite}::IsDistinctDocRoots(${2:\\$arFilter=array()})$0"},
		{"trigger": "CSite::SaveDomains", "contents": "${1:CSite}::SaveDomains(${2:\\$LID}, ${2:\\$domains})$0"},
		{"trigger": "CSite::SelectBox", "contents": "${1:CSite}::SelectBox(${2:\\$sFieldName}, ${2:\\$sValue}, ${4:\\$sDefaultValue=''}, ${4:\\$sFuncName=''}, ${6:\\$field='class=\\'typeselect\\''})$0"},
		{"trigger": "CSite::SelectBoxMulti", "contents": "${1:CSite}::SelectBoxMulti(${2:\\$sFieldName}, ${2:\\$Value})$0"},
		{"trigger": "CSite::Update", "contents": "${1:CSite}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSiteEntity::__construct", "contents": "${1:CSiteEntity}::__construct()$0"},
		{"trigger": "CSiteEntity::initialize", "contents": "${1:CSiteEntity}::initialize()$0"},
		{"trigger": "CSiteTemplate::Add", "contents": "${1:CSiteTemplate}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSiteTemplate::CheckFields", "contents": "${1:CSiteTemplate}::CheckFields(${2:\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "CSiteTemplate::Delete", "contents": "${1:CSiteTemplate}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSiteTemplate::DirsRecursive", "contents": "${1:CSiteTemplate}::DirsRecursive(${2:\\$ID}, ${2:\\$path=''}, ${4:\\$depth=0}, ${4:\\$maxDepth=1})$0"},
		{"trigger": "CSiteTemplate::GetByID", "contents": "${1:CSiteTemplate}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSiteTemplate::GetContent", "contents": "${1:CSiteTemplate}::GetContent(${2:\\$ID})$0"},
		{"trigger": "CSiteTemplate::GetList", "contents": "${1:CSiteTemplate}::GetList(${2:\\$arOrder=array()}, ${2:\\$arFilter=array()}, ${4:\\$arSelect=false})$0"},
		{"trigger": "CSiteTemplate::Update", "contents": "${1:CSiteTemplate}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSiteTemplate::__GetByStylesTitle", "contents": "${1:CSiteTemplate}::__GetByStylesTitle(${2:\\$file})$0"},
		{"trigger": "CSpacer::InsertSpaces", "contents": "${1:CSpacer}::InsertSpaces(${2:\\$string})$0"},
		{"trigger": "CStackCacheEntry::Clean", "contents": "${1:CStackCacheEntry}::Clean()$0"},
		{"trigger": "CStackCacheEntry::DeleteEntry", "contents": "${1:CStackCacheEntry}::DeleteEntry(${2:\\$id})$0"},
		{"trigger": "CStackCacheEntry::Get", "contents": "${1:CStackCacheEntry}::Get(${2:\\$id})$0"},
		{"trigger": "CStackCacheEntry::Load", "contents": "${1:CStackCacheEntry}::Load()$0"},
		{"trigger": "CStackCacheEntry::Save", "contents": "${1:CStackCacheEntry}::Save()$0"},
		{"trigger": "CStackCacheEntry::Set", "contents": "${1:CStackCacheEntry}::Set(${2:\\$id}, ${2:\\$value})$0"},
		{"trigger": "CStackCacheEntry::SetLength", "contents": "${1:CStackCacheEntry}::SetLength(${2:\\$length})$0"},
		{"trigger": "CStackCacheEntry::SetTTL", "contents": "${1:CStackCacheEntry}::SetTTL(${2:\\$ttl})$0"},
		{"trigger": "CStackCacheEntry::__construct", "contents": "${1:CStackCacheEntry}::__construct(${2:\\$entity}, ${2:\\$length = 0}, ${4:\\$ttl = 0})$0"},
		{"trigger": "CStackCacheManager::CleanAll", "contents": "${1:CStackCacheManager}::CleanAll()$0"},
		{"trigger": "CStackCacheManager::Clear", "contents": "${1:CStackCacheManager}::Clear(${2:\\$entity}, ${2:\\$id = False})$0"},
		{"trigger": "CStackCacheManager::Exist", "contents": "${1:CStackCacheManager}::Exist(${2:\\$entity}, ${2:\\$id})$0"},
		{"trigger": "CStackCacheManager::Get", "contents": "${1:CStackCacheManager}::Get(${2:\\$entity}, ${2:\\$id})$0"},
		{"trigger": "CStackCacheManager::Init", "contents": "${1:CStackCacheManager}::Init(${2:\\$entity}, ${2:\\$length = 0}, ${4:\\$ttl = 0})$0"},
		{"trigger": "CStackCacheManager::Load", "contents": "${1:CStackCacheManager}::Load(${2:\\$entity})$0"},
		{"trigger": "CStackCacheManager::MakeIDFromarray", "contents": "${1:CStackCacheManager}::MakeIDFromarray(${2:\\$arVals})$0"},
		{"trigger": "CStackCacheManager::Save", "contents": "${1:CStackCacheManager}::Save(${2:\\$entity})$0"},
		{"trigger": "CStackCacheManager::SaveAll", "contents": "${1:CStackCacheManager}::SaveAll()$0"},
		{"trigger": "CStackCacheManager::Set", "contents": "${1:CStackCacheManager}::Set(${2:\\$entity}, ${2:\\$id}, ${4:\\$value})$0"},
		{"trigger": "CStackCacheManager::SetLength", "contents": "${1:CStackCacheManager}::SetLength(${2:\\$entity}, ${2:\\$length})$0"},
		{"trigger": "CStackCacheManager::SetTTL", "contents": "${1:CStackCacheManager}::SetTTL(${2:\\$entity}, ${2:\\$ttl})$0"},
		{"trigger": "CSteganos::CSteganos", "contents": "${1:CSteganos}::CSteganos()$0"},
		{"trigger": "CSteganos::HideData", "contents": "${1:CSteganos}::HideData(${2:\\$containerFile}, ${2:\\$data}, ${4:\\$resultFile}, ${4:\\$level = 2})$0"},
		{"trigger": "CSteganos::ShowData", "contents": "${1:CSteganos}::ShowData(${2:\\$containerFile})$0"},
		{"trigger": "CSteganos::__CheckContainer", "contents": "${1:CSteganos}::__CheckContainer()$0"},
		{"trigger": "CSteganos::__CompressData", "contents": "${1:CSteganos}::__CompressData()$0"},
		{"trigger": "CSteganos::__ConvertBitStringToBinary", "contents": "${1:CSteganos}::__ConvertBitStringToBinary(${2:\\$bitStr})$0"},
		{"trigger": "CSteganos::__ConvertToBitString", "contents": "${1:CSteganos}::__ConvertToBitString(${2:\\$bite})$0"},
		{"trigger": "CSteganos::__GetHiddenInfo", "contents": "${1:CSteganos}::__GetHiddenInfo()$0"},
		{"trigger": "CSteganos::__HideData", "contents": "${1:CSteganos}::__HideData()$0"},
		{"trigger": "CSteganos::__OpenContainer", "contents": "${1:CSteganos}::__OpenContainer()$0"},
		{"trigger": "CSteganos::__SaveResult", "contents": "${1:CSteganos}::__SaveResult()$0"},
		{"trigger": "CSteganos::__ShowData", "contents": "${1:CSteganos}::__ShowData()$0"},
		{"trigger": "CSteganos::__UnCompressData", "contents": "${1:CSteganos}::__UnCompressData()$0"},
		{"trigger": "CTableSchema::OnGetTableSchema", "contents": "${1:CTableSchema}::OnGetTableSchema()$0"},
		{"trigger": "CTableSchema::__construct", "contents": "${1:CTableSchema}::__construct()$0"},
		{"trigger": "CTask::Add", "contents": "${1:CTask}::Add(${2:\\$arFields})$0"},
		{"trigger": "CTask::CheckFields", "contents": "${1:CTask}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CTask::Delete", "contents": "${1:CTask}::Delete(${2:\\$ID}, ${2:\\$protect = true})$0"},
		{"trigger": "CTask::GetByID", "contents": "${1:CTask}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CTask::GetIdByLetter", "contents": "${1:CTask}::GetIdByLetter(${2:\\$letter}, ${2:\\$module}, ${4:\\$binding='module'})$0"},
		{"trigger": "CTask::GetLangDescription", "contents": "${1:CTask}::GetLangDescription(${2:\\$name}, ${2:\\$desc})$0"},
		{"trigger": "CTask::GetLangTitle", "contents": "${1:CTask}::GetLangTitle(${2:\\$name})$0"},
		{"trigger": "CTask::GetLetter", "contents": "${1:CTask}::GetLetter(${2:\\$ID})$0"},
		{"trigger": "CTask::GetList", "contents": "${1:CTask}::GetList(${2:\\$arOrder = array('MODULE_ID'=>'asc','LETTER'=>'asc'),\\$arFilter=array()})$0"},
		{"trigger": "CTask::GetOperations", "contents": "${1:CTask}::GetOperations(${2:\\$ID}, ${2:\\$return_names = false})$0"},
		{"trigger": "CTask::GetTasksInModules", "contents": "${1:CTask}::GetTasksInModules(${2:\\$mode=false}, ${2:\\$module_id=false}, ${4:\\$binding = false})$0"},
		{"trigger": "CTask::SetOperations", "contents": "${1:CTask}::SetOperations(${2:\\$ID}, ${2:\\$arr}, ${4:\\$bOpNames=false})$0"},
		{"trigger": "CTask::Update", "contents": "${1:CTask}::Update(${2:\\$arFields,\\$ID})$0"},
		{"trigger": "CTask::UpdateModuleRights", "contents": "${1:CTask}::UpdateModuleRights(${2:\\$id}, ${2:\\$moduleId}, ${4:\\$letter}, ${4:\\$site_id = false})$0"},
		{"trigger": "CTask::err_mess", "contents": "${1:CTask}::err_mess()$0"},
		{"trigger": "CTempFile::Cleanup", "contents": "${1:CTempFile}::Cleanup()$0"},
		{"trigger": "CTempFile::GetAbsoluteRoot", "contents": "${1:CTempFile}::GetAbsoluteRoot()$0"},
		{"trigger": "CTempFile::GetDirectoryName", "contents": "${1:CTempFile}::GetDirectoryName(${2:\\$hours_to_keep_files = 0}, ${2:\\$subdir = ''})$0"},
		{"trigger": "CTempFile::GetFileName", "contents": "${1:CTempFile}::GetFileName(${2:\\$file_name = ''})$0"},
		{"trigger": "CTempFile::_absolute_path_recursive_delete", "contents": "${1:CTempFile}::_absolute_path_recursive_delete(${2:\\$path})$0"},
		{"trigger": "CTemplates::GetByID", "contents": "${1:CTemplates}::GetByID(${2:\\$id}, ${2:\\$arCurrentValues = array()}, ${4:\\$templateID = array()})$0"},
		{"trigger": "CTemplates::GetList", "contents": "${1:CTemplates}::GetList(${2:\\$arFilter = array()}, ${2:\\$arCurrentValues = array()}, ${4:\\$template_id = array()})$0"},
		{"trigger": "CTextParser::TextParserConvertVideo", "contents": "${1:CTextParser}::TextParserConvertVideo(${2:\\$arParams})$0"},
		{"trigger": "CTextParser::closetags", "contents": "${1:CTextParser}::closetags(${2:\\$html})$0"},
		{"trigger": "CTextParser::convert4mail", "contents": "${1:CTextParser}::convert4mail(${2:\\$text})$0"},
		{"trigger": "CTextParser::convertText", "contents": "${1:CTextParser}::convertText(${2:\\$text})$0"},
		{"trigger": "CTextParser::convert_anchor_tag", "contents": "${1:CTextParser}::convert_anchor_tag(${2:\\$url}, ${2:\\$text}, ${4:\\$pref=''})$0"},
		{"trigger": "CTextParser::convert_close_tag", "contents": "${1:CTextParser}::convert_close_tag(${2:\\$marker = 'quote'})$0"},
		{"trigger": "CTextParser::convert_code_tag", "contents": "${1:CTextParser}::convert_code_tag(${2:\\$text = ''})$0"},
		{"trigger": "CTextParser::convert_emoticon", "contents": "${1:CTextParser}::convert_emoticon(${2:\\$code = ''}, ${2:\\$image = ''}, ${4:\\$description = ''})$0"},
		{"trigger": "CTextParser::convert_font_attr", "contents": "${1:CTextParser}::convert_font_attr(${2:\\$attr}, ${2:\\$value = ''}, ${4:\\$text = ''})$0"},
		{"trigger": "CTextParser::convert_image_tag", "contents": "${1:CTextParser}::convert_image_tag(${2:\\$url = ''}, ${2:\\$params = ''})$0"},
		{"trigger": "CTextParser::convert_open_tag", "contents": "${1:CTextParser}::convert_open_tag(${2:\\$marker = 'quote'})$0"},
		{"trigger": "CTextParser::convert_quote_tag", "contents": "${1:CTextParser}::convert_quote_tag(${2:\\$text = ''})$0"},
		{"trigger": "CTextParser::convert_video", "contents": "${1:CTextParser}::convert_video(${2:\\$params}, ${2:\\$path})$0"},
		{"trigger": "CTextParser::cut_long_words", "contents": "${1:CTextParser}::cut_long_words(${2:\\$str})$0"},
		{"trigger": "CTextParser::defended_tags", "contents": "${1:CTextParser}::defended_tags(${2:\\$text}, ${2:\\$tag = 'replace'})$0"},
		{"trigger": "CTextParser::html_cut", "contents": "${1:CTextParser}::html_cut(${2:\\$html}, ${2:\\$size})$0"},
		{"trigger": "CTextParser::part_long_words", "contents": "${1:CTextParser}::part_long_words(${2:\\$str})$0"},
		{"trigger": "CTextParser::pre_convert_code_tag", "contents": "${1:CTextParser}::pre_convert_code_tag(${2:\\$text = ''})$0"},
		{"trigger": "CTextParser::strip_words", "contents": "${1:CTextParser}::strip_words(${2:\\$string}, ${2:\\$count})$0"},
		{"trigger": "CTextParser::wrap_long_words", "contents": "${1:CTextParser}::wrap_long_words(${2:\\$text=''})$0"},
		{"trigger": "CTimeZone::Disable", "contents": "${1:CTimeZone}::Disable()$0"},
		{"trigger": "CTimeZone::Enable", "contents": "${1:CTimeZone}::Enable()$0"},
		{"trigger": "CTimeZone::Enabled", "contents": "${1:CTimeZone}::Enabled()$0"},
		{"trigger": "CTimeZone::GetOffset", "contents": "${1:CTimeZone}::GetOffset()$0"},
		{"trigger": "CTimeZone::GetZones", "contents": "${1:CTimeZone}::GetZones()$0"},
		{"trigger": "CTimeZone::Possible", "contents": "${1:CTimeZone}::Possible()$0"},
		{"trigger": "CTimeZone::SetAutoCookie", "contents": "${1:CTimeZone}::SetAutoCookie()$0"},
		{"trigger": "CTimeZone::__tzsort", "contents": "${1:CTimeZone}::__tzsort(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CTopPanel::AddAttrHint", "contents": "${1:CTopPanel}::AddAttrHint(${2:\\$hint_title}, ${2:\\$hint_text = false})$0"},
		{"trigger": "CTopPanel::GetStandardButtons", "contents": "${1:CTopPanel}::GetStandardButtons()$0"},
		{"trigger": "CTopPanel::InitPanelIcons", "contents": "${1:CTopPanel}::InitPanelIcons()$0"},
		{"trigger": "CTopPanel::IsCanEditPage", "contents": "${1:CTopPanel}::IsCanEditPage(${2:\\$currentFilePath}, ${2:\\$documentRoot}, ${4:\\$filemanExists})$0"},
		{"trigger": "CTopPanel::IsCanEditPermission", "contents": "${1:CTopPanel}::IsCanEditPermission(${2:\\$currentFilePath}, ${2:\\$documentRoot}, ${4:\\$filemanExists})$0"},
		{"trigger": "CTopPanel::ShowPanelScripts", "contents": "${1:CTopPanel}::ShowPanelScripts(${2:\\$bReturn=false})$0"},
		{"trigger": "CTopPanel::SortButtonMenu", "contents": "${1:CTopPanel}::SortButtonMenu(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CTopPanel::SortButtons", "contents": "${1:CTopPanel}::SortButtons(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CUEntityField::__construct", "contents": "${1:CUEntityField}::__construct(${2:array \\$info}, ${2:CBaseEntity \\$entity})$0"},
		{"trigger": "CUEntityField::getBaseType", "contents": "${1:CUEntityField}::getBaseType()$0"},
		{"trigger": "CUEntityField::getFieldId", "contents": "${1:CUEntityField}::getFieldId()$0"},
		{"trigger": "CUEntityField::getTypeId", "contents": "${1:CUEntityField}::getTypeId()$0"},
		{"trigger": "CUEntityField::getValueFieldName", "contents": "${1:CUEntityField}::getValueFieldName()$0"},
		{"trigger": "CUEntityField::isMultiple", "contents": "${1:CUEntityField}::isMultiple()$0"},
		{"trigger": "CUndo::Add", "contents": "${1:CUndo}::Add(${2:\\$params = array()})$0"},
		{"trigger": "CUndo::CheckNotifyMessage", "contents": "${1:CUndo}::CheckNotifyMessage()$0"},
		{"trigger": "CUndo::CleanUpOld", "contents": "${1:CUndo}::CleanUpOld()$0"},
		{"trigger": "CUndo::Delete", "contents": "${1:CUndo}::Delete(${2:\\$ID})$0"},
		{"trigger": "CUndo::Escape", "contents": "${1:CUndo}::Escape(${2:\\$ID}, ${2:\\$params = array()})$0"},
		{"trigger": "CUndo::GetList", "contents": "${1:CUndo}::GetList(${2:\\$Params = array()})$0"},
		{"trigger": "CUndo::ShowUndoMessage", "contents": "${1:CUndo}::ShowUndoMessage(${2:\\$ID}, ${2:\\$params = array()})$0"},
		{"trigger": "CUpdateClientPartner::ActivateCoupon", "contents": "${1:CUpdateClientPartner}::ActivateCoupon(${2:\\$coupon}, ${2:&\\$strError}, ${4:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateClientPartner::AddMessage2Log", "contents": "${1:CUpdateClientPartner}::AddMessage2Log(${2:\\$sText}, ${2:\\$sErrorCode = ''})$0"},
		{"trigger": "CUpdateClientPartner::CheckUpdatability", "contents": "${1:CUpdateClientPartner}::CheckUpdatability(${2:\\$updatesDir}, ${2:&\\$strError})$0"},
		{"trigger": "CUpdateClientPartner::ClearUpdateFolder", "contents": "${1:CUpdateClientPartner}::ClearUpdateFolder(${2:\\$updatesDirFull})$0"},
		{"trigger": "CUpdateClientPartner::GetCurrentModules", "contents": "${1:CUpdateClientPartner}::GetCurrentModules(${2:&\\$strError})$0"},
		{"trigger": "CUpdateClientPartner::GetLicenseKey", "contents": "${1:CUpdateClientPartner}::GetLicenseKey()$0"},
		{"trigger": "CUpdateClientPartner::GetNextStepUpdates", "contents": "${1:CUpdateClientPartner}::GetNextStepUpdates(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'}, ${4:\\$arRequestedModules = array()}, ${6:\\$bStrongList = false})$0"},
		{"trigger": "CUpdateClientPartner::GetRequestedModules", "contents": "${1:CUpdateClientPartner}::GetRequestedModules(${2:\\$strAddModule})$0"},
		{"trigger": "CUpdateClientPartner::GetStepUpdateInfo", "contents": "${1:CUpdateClientPartner}::GetStepUpdateInfo(${2:\\$updatesDir}, ${2:&\\$strError})$0"},
		{"trigger": "CUpdateClientPartner::GetUpdatesList", "contents": "${1:CUpdateClientPartner}::GetUpdatesList(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'}, ${4:\\$arRequestedModules = array()})$0"},
		{"trigger": "CUpdateClientPartner::LoadModuleNoDemand", "contents": "${1:CUpdateClientPartner}::LoadModuleNoDemand(${2:\\$moduleId}, ${2:&\\$strError}, ${4:\\$stableVersionsOnly = 'Y'}, ${4:\\$lang = false})$0"},
		{"trigger": "CUpdateClientPartner::LoadModulesUpdates", "contents": "${1:CUpdateClientPartner}::LoadModulesUpdates(${2:&\\$errorMessage}, ${2:&\\$arUpdateDescription}, ${4:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'}, ${6:\\$arRequestedModules = array()}, ${6:\\$bStrongList = false})$0"},
		{"trigger": "CUpdateClientPartner::RegisterModules", "contents": "${1:CUpdateClientPartner}::RegisterModules(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = false})$0"},
		{"trigger": "CUpdateClientPartner::SearchModules", "contents": "${1:CUpdateClientPartner}::SearchModules(${2:\\$searchModule}, ${2:\\$lang})$0"},
		{"trigger": "CUpdateClientPartner::SearchModulesEx", "contents": "${1:CUpdateClientPartner}::SearchModulesEx(${2:\\$arOrder}, ${2:\\$arFilter}, ${4:\\$searchPage}, ${4:\\$lang}, ${6:&\\$strError})$0"},
		{"trigger": "CUpdateClientPartner::UnGzipArchive", "contents": "${1:CUpdateClientPartner}::UnGzipArchive(${2:&\\$updatesDir}, ${2:&\\$strError}, ${4:\\$bDelArch = true})$0"},
		{"trigger": "CUpdateClientPartner::UpdateStepModules", "contents": "${1:CUpdateClientPartner}::UpdateStepModules(${2:\\$updatesDir}, ${2:&\\$strError}, ${4:\\$bSaveUpdaters = False})$0"},
		{"trigger": "CUpdateClientPartner::__CheckDirPath", "contents": "${1:CUpdateClientPartner}::__CheckDirPath(${2:\\$path}, ${2:\\$bPermission = true})$0"},
		{"trigger": "CUpdateClientPartner::__CollectRequestData", "contents": "${1:CUpdateClientPartner}::__CollectRequestData(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'}, ${4:\\$arRequestedModules = array()}, ${6:\\$arAdditionalData = array()}, ${6:\\$bStrongList = false})$0"},
		{"trigger": "CUpdateClientPartner::__CompareVersions", "contents": "${1:CUpdateClientPartner}::__CompareVersions(${2:\\$strVers1}, ${2:\\$strVers2})$0"},
		{"trigger": "CUpdateClientPartner::__CopyDirFiles", "contents": "${1:CUpdateClientPartner}::__CopyDirFiles(${2:\\$path_from}, ${2:\\$path_to}, ${4:&\\$strError}, ${4:\\$bSkipUpdater = True})$0"},
		{"trigger": "CUpdateClientPartner::__DeleteDirFilesEx", "contents": "${1:CUpdateClientPartner}::__DeleteDirFilesEx(${2:\\$path})$0"},
		{"trigger": "CUpdateClientPartner::__GetFooPath", "contents": "${1:CUpdateClientPartner}::__GetFooPath()$0"},
		{"trigger": "CUpdateClientPartner::__GetFooPath1", "contents": "${1:CUpdateClientPartner}::__GetFooPath1(${2:\\$v = 0})$0"},
		{"trigger": "CUpdateClientPartner::__GetHTTPPage", "contents": "${1:CUpdateClientPartner}::__GetHTTPPage(${2:\\$page}, ${2:\\$strVars}, ${4:&\\$strError})$0"},
		{"trigger": "CUpdateClientPartner::__GetMicroTime", "contents": "${1:CUpdateClientPartner}::__GetMicroTime()$0"},
		{"trigger": "CUpdateClientPartner::__GetModuleInfo", "contents": "${1:CUpdateClientPartner}::__GetModuleInfo(${2:\\$path})$0"},
		{"trigger": "CUpdateClientPartner::__IsGzipInstalled", "contents": "${1:CUpdateClientPartner}::__IsGzipInstalled()$0"},
		{"trigger": "CUpdateClientPartner::__ParseServerData", "contents": "${1:CUpdateClientPartner}::__ParseServerData(${2:&\\$strServerOutput}, ${2:&\\$arRes}, ${4:&\\$strError})$0"},
		{"trigger": "CUpdateClientPartner::__RunUpdaterScript", "contents": "${1:CUpdateClientPartner}::__RunUpdaterScript(${2:\\$path}, ${2:&\\$strError}, ${4:\\$updateDirFrom}, ${4:\\$moduleID})$0"},
		{"trigger": "CUpdateClientPartner::__bxstrrpos", "contents": "${1:CUpdateClientPartner}::__bxstrrpos(${2:\\$haystack}, ${2:\\$needle})$0"},
		{"trigger": "CUpdateOutput::ShowBlock", "contents": "${1:CUpdateOutput}::ShowBlock(${2:\\$top}, ${2:\\$bottom=''}, ${4:\\$icon=''})$0"},
		{"trigger": "CUpdateOutput::ShowBlockInfo", "contents": "${1:CUpdateOutput}::ShowBlockInfo(${2:\\$top}, ${2:\\$bottom}, ${4:\\$id})$0"},
		{"trigger": "CUpdateOutput::ShowScript", "contents": "${1:CUpdateOutput}::ShowScript()$0"},
		{"trigger": "CUpdateSystem::ActivateLicenseKey", "contents": "${1:CUpdateSystem}::ActivateLicenseKey(${2:\\$arFields}, ${2:&\\$strError}, ${4:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::AddMessage2Log", "contents": "${1:CUpdateSystem}::AddMessage2Log(${2:\\$sText}, ${2:\\$sErrorCode = ''})$0"},
		{"trigger": "CUpdateSystem::AddSites", "contents": "${1:CUpdateSystem}::AddSites(${2:\\$strCheck}, ${2:&\\$strError}, ${4:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::CheckDirPath", "contents": "${1:CUpdateSystem}::CheckDirPath(${2:\\$path}, ${2:\\$bPermission = true})$0"},
		{"trigger": "CUpdateSystem::CheckEMail", "contents": "${1:CUpdateSystem}::CheckEMail(${2:\\$email})$0"},
		{"trigger": "CUpdateSystem::CheckFolderUpdatability", "contents": "${1:CUpdateSystem}::CheckFolderUpdatability(${2:\\$destFolder}, ${2:\\$srcFolder}, ${4:&\\$strError})$0"},
		{"trigger": "CUpdateSystem::CheckUpdatability", "contents": "${1:CUpdateSystem}::CheckUpdatability(${2:\\$updates_dir}, ${2:&\\$strError})$0"},
		{"trigger": "CUpdateSystem::CheckVersions", "contents": "${1:CUpdateSystem}::CheckVersions(${2:&\\$arRes}, ${2:&\\$strError}, ${4:\\$arSelectedModules = false})$0"},
		{"trigger": "CUpdateSystem::CompareVersions", "contents": "${1:CUpdateSystem}::CompareVersions(${2:\\$strVers1}, ${2:\\$strVers2})$0"},
		{"trigger": "CUpdateSystem::CopyDirFiles", "contents": "${1:CUpdateSystem}::CopyDirFiles(${2:\\$path_from}, ${2:\\$path_to}, ${4:&\\$strError})$0"},
		{"trigger": "CUpdateSystem::DeleteDirFilesEx", "contents": "${1:CUpdateSystem}::DeleteDirFilesEx(${2:\\$path})$0"},
		{"trigger": "CUpdateSystem::EraseOldFolders", "contents": "${1:CUpdateSystem}::EraseOldFolders(${2:\\$iCnt = 1})$0"},
		{"trigger": "CUpdateSystem::FooMakePath", "contents": "${1:CUpdateSystem}::FooMakePath()$0"},
		{"trigger": "CUpdateSystem::GetAvailableUpdateTypes", "contents": "${1:CUpdateSystem}::GetAvailableUpdateTypes(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::GetDateFormat", "contents": "${1:CUpdateSystem}::GetDateFormat(${2:\\$strDBFormat = false})$0"},
		{"trigger": "CUpdateSystem::GetFooPath", "contents": "${1:CUpdateSystem}::GetFooPath(${2:\\$path})$0"},
		{"trigger": "CUpdateSystem::GetHelps", "contents": "${1:CUpdateSystem}::GetHelps(${2:&\\$strError}, ${2:\\$arSelected = false})$0"},
		{"trigger": "CUpdateSystem::GetLanguages", "contents": "${1:CUpdateSystem}::GetLanguages(${2:&\\$strError}, ${2:\\$arSelected = false})$0"},
		{"trigger": "CUpdateSystem::GetLicenseKey", "contents": "${1:CUpdateSystem}::GetLicenseKey()$0"},
		{"trigger": "CUpdateSystem::GetLoadedHelpUpdates", "contents": "${1:CUpdateSystem}::GetLoadedHelpUpdates(${2:\\$updates_dir}, ${2:&\\$strError})$0"},
		{"trigger": "CUpdateSystem::GetLoadedLangsUpdates", "contents": "${1:CUpdateSystem}::GetLoadedLangsUpdates(${2:\\$updates_dir}, ${2:&\\$strError})$0"},
		{"trigger": "CUpdateSystem::GetLoadedModuleUpdates", "contents": "${1:CUpdateSystem}::GetLoadedModuleUpdates(${2:\\$updates_dir}, ${2:&\\$strError})$0"},
		{"trigger": "CUpdateSystem::GetModuleInfo", "contents": "${1:CUpdateSystem}::GetModuleInfo(${2:\\$path})$0"},
		{"trigger": "CUpdateSystem::GetModuleVersion", "contents": "${1:CUpdateSystem}::GetModuleVersion(${2:\\$module})$0"},
		{"trigger": "CUpdateSystem::GetModules", "contents": "${1:CUpdateSystem}::GetModules(${2:&\\$strError}, ${2:\\$arSelected = false})$0"},
		{"trigger": "CUpdateSystem::GetServerHelpUpdates", "contents": "${1:CUpdateSystem}::GetServerHelpUpdates(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::GetServerLangsUpdates", "contents": "${1:CUpdateSystem}::GetServerLangsUpdates(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::GetServerModuleUpdates", "contents": "${1:CUpdateSystem}::GetServerModuleUpdates(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::InsertSpaces", "contents": "${1:CUpdateSystem}::InsertSpaces(${2:\\$sText}, ${2:\\$iMaxChar=80})$0"},
		{"trigger": "CUpdateSystem::IsGzipInstalled", "contents": "${1:CUpdateSystem}::IsGzipInstalled()$0"},
		{"trigger": "CUpdateSystem::IsInCommonKernel", "contents": "${1:CUpdateSystem}::IsInCommonKernel()$0"},
		{"trigger": "CUpdateSystem::LoadHelpUpdates", "contents": "${1:CUpdateSystem}::LoadHelpUpdates(${2:\\$arHelp}, ${2:&\\$strError}, ${4:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::LoadLangsUpdates", "contents": "${1:CUpdateSystem}::LoadLangsUpdates(${2:\\$arLangs}, ${2:&\\$strError}, ${4:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::LoadModuleUpdates", "contents": "${1:CUpdateSystem}::LoadModuleUpdates(${2:\\$arModules}, ${2:&\\$strError}, ${4:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::LoadSources", "contents": "${1:CUpdateSystem}::LoadSources(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::Modulesarray2Query", "contents": "${1:CUpdateSystem}::Modulesarray2Query(${2:\\$arClientModules}, ${2:\\$pref = 'bitm_'})$0"},
		{"trigger": "CUpdateSystem::NumberEndings", "contents": "${1:CUpdateSystem}::NumberEndings(${2:\\$num}, ${2:\\$lang = false}, ${4:\\$arEnds = false})$0"},
		{"trigger": "CUpdateSystem::ParseServerData", "contents": "${1:CUpdateSystem}::ParseServerData(${2:&\\$strServerOutput}, ${2:&\\$arRes}, ${4:&\\$strError})$0"},
		{"trigger": "CUpdateSystem::RegisterVersion", "contents": "${1:CUpdateSystem}::RegisterVersion(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::Report2Server", "contents": "${1:CUpdateSystem}::Report2Server(${2:\\$arServerReport})$0"},
		{"trigger": "CUpdateSystem::RunUpdaterScript", "contents": "${1:CUpdateSystem}::RunUpdaterScript(${2:\\$path}, ${2:&\\$strError}, ${4:\\$from_dir}, ${4:\\$moduleID})$0"},
		{"trigger": "CUpdateSystem::SubscribeUpdates", "contents": "${1:CUpdateSystem}::SubscribeUpdates(${2:\\$strEmails}, ${2:&\\$strError}, ${4:\\$lang = false})$0"},
		{"trigger": "CUpdateSystem::UnGzipArchive", "contents": "${1:CUpdateSystem}::UnGzipArchive(${2:&\\$updates_dir}, ${2:&\\$strError}, ${4:\\$DelArch = 'Y'})$0"},
		{"trigger": "CUpdateSystem::UpdateHelp", "contents": "${1:CUpdateSystem}::UpdateHelp(${2:\\$updates_dir}, ${2:\\$arHelp}, ${4:&\\$strError}, ${4:&\\$arErrorHelp}, ${6:&\\$arSuccessHelp})$0"},
		{"trigger": "CUpdateSystem::UpdateKernel", "contents": "${1:CUpdateSystem}::UpdateKernel(${2:\\$updates_dir}, ${2:\\$arModules}, ${4:&\\$strError}, ${4:&\\$arErrorModules}, ${6:&\\$arSuccessModules})$0"},
		{"trigger": "CUpdateSystem::UpdateLangs", "contents": "${1:CUpdateSystem}::UpdateLangs(${2:\\$updates_dir}, ${2:\\$arLangs}, ${4:&\\$strError}, ${4:&\\$arErrorLangs}, ${6:&\\$arSuccessLangs})$0"},
		{"trigger": "CUpdateSystem::UpdateUpdate", "contents": "${1:CUpdateSystem}::UpdateUpdate(${2:&\\$strError}, ${2:\\$lang = false}, ${4:\\$stableVersionsOnly = 'Y'})$0"},
		{"trigger": "CUpdateSystem::bxstrrpos", "contents": "${1:CUpdateSystem}::bxstrrpos(${2:\\$haystack}, ${2:\\$needle})$0"},
		{"trigger": "CUpdateSystem::getHTTPPage", "contents": "${1:CUpdateSystem}::getHTTPPage(${2:\\$page}, ${2:\\$strVars}, ${4:&\\$strError})$0"},
		{"trigger": "CUpdateSystem::getmicrotime", "contents": "${1:CUpdateSystem}::getmicrotime()$0"},
		{"trigger": "CUpdater::CanUpdateDatabase", "contents": "${1:CUpdater}::CanUpdateDatabase()$0"},
		{"trigger": "CUpdater::CanUpdateKernel", "contents": "${1:CUpdater}::CanUpdateKernel()$0"},
		{"trigger": "CUpdater::CanUpdatePersonalFiles", "contents": "${1:CUpdater}::CanUpdatePersonalFiles()$0"},
		{"trigger": "CUpdater::CopyDirFiles", "contents": "${1:CUpdater}::CopyDirFiles(${2:\\$fromDir}, ${2:\\$toDir})$0"},
		{"trigger": "CUpdater::CopyFiles", "contents": "${1:CUpdater}::CopyFiles(${2:\\$fromDir}, ${2:\\$toDir})$0"},
		{"trigger": "CUpdater::Init", "contents": "${1:CUpdater}::Init(${2:\\$curPath}, ${2:$DBType}, ${4:\\$updater}, ${4:\\$curDir}, ${6:\\$moduleID}, ${6:\\$callType = 'ALL'})$0"},
		{"trigger": "CUpdater::InstallComponent", "contents": "${1:CUpdater}::InstallComponent(${2:\\$componentName}, ${2:\\$arDeleteFiles = array()})$0"},
		{"trigger": "CUpdater::InstallComponents", "contents": "${1:CUpdater}::InstallComponents(${2:\\$arDeleteFiles = array()})$0"},
		{"trigger": "CUpdater::InstallWizard", "contents": "${1:CUpdater}::InstallWizard(${2:\\$wizardName}, ${2:\\$arDeleteFiles = array()})$0"},
		{"trigger": "CUpdater::InstallWizards", "contents": "${1:CUpdater}::InstallWizards(${2:\\$arDeleteFiles = array()})$0"},
		{"trigger": "CUpdater::Query", "contents": "${1:CUpdater}::Query(${2:\\$query}, ${2:\\$tableName = ''})$0"},
		{"trigger": "CUpdater::QueryBatch", "contents": "${1:CUpdater}::QueryBatch(${2:\\$queryPath}, ${2:\\$tableName = ''})$0"},
		{"trigger": "CUpdater::TableExists", "contents": "${1:CUpdater}::TableExists(${2:\\$tableName})$0"},
		{"trigger": "CUpdater::__MakeComponentPath", "contents": "${1:CUpdater}::__MakeComponentPath(${2:\\$componentName})$0"},
		{"trigger": "CUpdatesXML::CUpdatesXML", "contents": "${1:CUpdatesXML}::CUpdatesXML(${2:\\$TrimWhiteSpace = True})$0"},
		{"trigger": "CUpdatesXML::Load", "contents": "${1:CUpdatesXML}::Load(${2:\\$file})$0"},
		{"trigger": "CUpdatesXML::LoadString", "contents": "${1:CUpdatesXML}::LoadString(${2:\\$text})$0"},
		{"trigger": "CUpdatesXML::__stripComments", "contents": "${1:CUpdatesXML}::__stripComments(${2:&\\$str})$0"},
		{"trigger": "CUpdatesXMLDocument::CUpdatesXMLDocument", "contents": "${1:CUpdatesXMLDocument}::CUpdatesXMLDocument()$0"},
		{"trigger": "CUpdatesXMLNode::CUpdatesXMLNode", "contents": "${1:CUpdatesXMLNode}::CUpdatesXMLNode()$0"},
		{"trigger": "CUrlRewriter::Add", "contents": "${1:CUrlRewriter}::Add(${2:\\$arFields})$0"},
		{"trigger": "CUrlRewriter::CheckPath", "contents": "${1:CUrlRewriter}::CheckPath(${2:\\$path})$0"},
		{"trigger": "CUrlRewriter::Delete", "contents": "${1:CUrlRewriter}::Delete(${2:\\$arFilter})$0"},
		{"trigger": "CUrlRewriter::GetKey", "contents": "${1:CUrlRewriter}::GetKey(${2:\\$arRule})$0"},
		{"trigger": "CUrlRewriter::GetList", "contents": "${1:CUrlRewriter}::GetList(${2:\\$arFilter = array()}, ${2:\\$arOrder = array()})$0"},
		{"trigger": "CUrlRewriter::ReIndexAll", "contents": "${1:CUrlRewriter}::ReIndexAll(${2:\\$max_execution_time = 0}, ${2:\\$NS = array()})$0"},
		{"trigger": "CUrlRewriter::RecurseIndex", "contents": "${1:CUrlRewriter}::RecurseIndex(${2:\\$path=array()}, ${2:\\$max_execution_time = 0}, ${4:&\\$NS})$0"},
		{"trigger": "CUrlRewriter::ReindexFile", "contents": "${1:CUrlRewriter}::ReindexFile(${2:\\$path}, ${2:\\$SEARCH_SESS_ID=''}, ${4:\\$max_file_size = 0})$0"},
		{"trigger": "CUrlRewriter::Update", "contents": "${1:CUrlRewriter}::Update(${2:\\$arFilter}, ${2:\\$arFields})$0"},
		{"trigger": "CUrlRewriter::__RecordsCompare", "contents": "${1:CUrlRewriter}::__RecordsCompare(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CUrlRewriter::printarray", "contents": "${1:CUrlRewriter}::printarray(${2:\\$arr})$0"},
		{"trigger": "\\$USER->Add", "contents": "\\$USER->Add(${2:\\$arFields})$0"},
		{"trigger": "\\$USER->AddHitAuthHash", "contents": "\\$USER->AddHitAuthHash(${2:\\$url}, ${2:\\$user_id = false}, ${4:\\$site_id = false})$0"},
		{"trigger": "\\$USER->Authorize", "contents": "\\$USER->Authorize(${2:\\$id}, ${2:\\$bSave = false})$0"},
		{"trigger": "\\$USER->CanAccess", "contents": "\\$USER->CanAccess(${2:\\$arCodes})$0"},
		{"trigger": "\\$USER->CanDoFileOperation", "contents": "\\$USER->CanDoFileOperation(${2:\\$op_name,\\$arPath})$0"},
		{"trigger": "\\$USER->CanDoOperation", "contents": "\\$USER->CanDoOperation(${2:\\$op_name})$0"},
		{"trigger": "\\$USER->ChangePassword", "contents": "\\$USER->ChangePassword(${2:\\$LOGIN}, ${2:\\$CHECKWORD}, ${4:\\$PASSWORD}, ${4:\\$CONFIRM_PASSWORD}, ${6:\\$SITE_ID=false})$0"},
		{"trigger": "\\$USER->CheckFields", "contents": "\\$USER->CheckFields(${2:&\\$arFields}, ${2:\\$ID=false})$0"},
		{"trigger": "\\$USER->CheckStoredHash", "contents": "\\$USER->CheckStoredHash(${2:\\$iUserId}, ${2:\\$sHash})$0"},
		{"trigger": "\\$USER->CleanUpAgent", "contents": "\\$USER->CleanUpAgent()$0"},
		{"trigger": "\\$USER->CleanUpHitAuthAgent", "contents": "\\$USER->CleanUpHitAuthAgent()$0"},
		{"trigger": "\\$USER->Delete", "contents": "\\$USER->Delete(${2:\\$ID})$0"},
		{"trigger": "\\$USER->FormatName", "contents": "\\$USER->FormatName(${2:\\$NAME_TEMPLATE}, ${2:\\$arUser}, ${4:\\$bUseLogin = true}, ${4:\\$bHTMLSpec = true})$0"},
		{"trigger": "\\$USER->GetAccessCodes", "contents": "\\$USER->GetAccessCodes()$0"},
		{"trigger": "\\$USER->GetActiveUsersCount", "contents": "\\$USER->GetActiveUsersCount()$0"},
		{"trigger": "\\$USER->GetAllOperations", "contents": "\\$USER->GetAllOperations()$0"},
		{"trigger": "\\$USER->GetByID", "contents": "\\$USER->GetByID(${2:\\$ID})$0"},
		{"trigger": "\\$USER->GetByLogin", "contents": "\\$USER->GetByLogin(${2:\\$LOGIN})$0"},
		{"trigger": "\\$USER->GetCount", "contents": "\\$USER->GetCount()$0"},
		{"trigger": "\\$USER->GetDropDownList", "contents": "\\$USER->GetDropDownList(${2:\\$strSqlSearch='and ACTIVE='Y''}, ${2:\\$strSqlOrder='ORDER BY ID}, ${4:NAME}, ${4:LAST_NAME'})$0"},
		{"trigger": "\\$USER->GetEmail", "contents": "\\$USER->GetEmail()$0"},
		{"trigger": "\\$USER->GetExternalAuthList", "contents": "\\$USER->GetExternalAuthList()$0"},
		{"trigger": "\\$USER->GetFileOperations", "contents": "\\$USER->GetFileOperations(${2:\\$arPath}, ${2:\\$arGroups=false})$0"},
		{"trigger": "\\$USER->GetFirstName", "contents": "\\$USER->GetFirstName()$0"},
		{"trigger": "\\$USER->GetFullName", "contents": "\\$USER->GetFullName()$0"},
		{"trigger": "\\$USER->GetGroupPolicy", "contents": "\\$USER->GetGroupPolicy(${2:\\$iUserId})$0"},
		{"trigger": "\\$USER->GetGroups", "contents": "\\$USER->GetGroups()$0"},
		{"trigger": "\\$USER->GetHitAuthHash", "contents": "\\$USER->GetHitAuthHash(${2:\\$url_mask}, ${2:\\$userID = false})$0"},
		{"trigger": "\\$USER->GetID", "contents": "\\$USER->GetID()$0"},
		{"trigger": "\\$USER->GetLastName", "contents": "\\$USER->GetLastName()$0"},
		{"trigger": "\\$USER->GetList", "contents": "\\$USER->GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:\\$arParams=array()})$0"},
		{"trigger": "\\$USER->GetLogin", "contents": "\\$USER->GetLogin()$0"},
		{"trigger": "\\$USER->GetParam", "contents": "\\$USER->GetParam(${2:\\$name})$0"},
		{"trigger": "\\$USER->GetPasswordHash", "contents": "\\$USER->GetPasswordHash(${2:\\$PASSWORD_HASH})$0"},
		{"trigger": "\\$USER->GetSecurityPolicy", "contents": "\\$USER->GetSecurityPolicy()$0"},
		{"trigger": "\\$USER->GetSessionHash", "contents": "\\$USER->GetSessionHash()$0"},
		{"trigger": "\\$USER->GetUserGroup", "contents": "\\$USER->GetUserGroup(${2:\\$ID})$0"},
		{"trigger": "\\$USER->GetUserGrouparray", "contents": "\\$USER->GetUserGrouparray()$0"},
		{"trigger": "\\$USER->GetUserGroupEx", "contents": "\\$USER->GetUserGroupEx(${2:\\$ID})$0"},
		{"trigger": "\\$USER->GetUserGroupList", "contents": "\\$USER->GetUserGroupList(${2:\\$ID})$0"},
		{"trigger": "\\$USER->GetUserGroupString", "contents": "\\$USER->GetUserGroupString()$0"},
		{"trigger": "\\$USER->IsAdmin", "contents": "\\$USER->IsAdmin()$0"},
		{"trigger": "\\$USER->IsAuthorized", "contents": "\\$USER->IsAuthorized()$0"},
		{"trigger": "\\$USER->IsOnLine", "contents": "\\$USER->IsOnLine(${2:\\$id}, ${2:\\$interval = 120})$0"},
		{"trigger": "\\$USER->Login", "contents": "\\$USER->Login(${2:\\$login}, ${2:\\$password}, ${4:\\$remember='N'}, ${4:\\$password_original='Y'})$0"},
		{"trigger": "\\$USER->LoginByDigest", "contents": "\\$USER->LoginByDigest(${2:\\$arDigest})$0"},
		{"trigger": "\\$USER->LoginByHash", "contents": "\\$USER->LoginByHash(${2:\\$login}, ${2:\\$hash})$0"},
		{"trigger": "\\$USER->LoginHitByHash", "contents": "\\$USER->LoginHitByHash()$0"},
		{"trigger": "\\$USER->Logout", "contents": "\\$USER->Logout()$0"},
		{"trigger": "\\$USER->Register", "contents": "\\$USER->Register(${2:\\$USER_LOGIN}, ${2:\\$USER_NAME}, ${4:\\$USER_LAST_NAME}, ${4:\\$USER_PASSWORD}, ${6:\\$USER_CONFIRM_PASSWORD}, ${6:\\$USER_EMAIL}, ${8:\\$SITE_ID = false}, ${8:\\$captcha_word = ''}, ${10:\\$captcha_sid = 0})$0"},
		{"trigger": "\\$USER->RequiredHTTPAuthBasic", "contents": "\\$USER->RequiredHTTPAuthBasic(${2:\\$Realm = 'Bitrix'})$0"},
		{"trigger": "\\$USER->SavePasswordHash", "contents": "\\$USER->SavePasswordHash()$0"},
		{"trigger": "\\$USER->SearchUserByName", "contents": "\\$USER->SearchUserByName(${2:\\$arName}, ${2:\\$email = ''}, ${4:\\$bLoginMode = false})$0"},
		{"trigger": "\\$USER->SendPassword", "contents": "\\$USER->SendPassword(${2:\\$LOGIN}, ${2:\\$EMAIL}, ${4:\\$SITE_ID = false})$0"},
		{"trigger": "\\$USER->SendUserInfo", "contents": "\\$USER->SendUserInfo(${2:\\$ID}, ${2:\\$SITE_ID}, ${4:\\$MSG}, ${4:\\$bImmediate=false}, ${6:\\$eventName='USER_INFO'})$0"},
		{"trigger": "\\$USER->SetControllerAdmin", "contents": "\\$USER->SetControllerAdmin(${2:\\$isAdmin=true})$0"},
		{"trigger": "\\$USER->SetLastActivityDate", "contents": "\\$USER->SetLastActivityDate(${2:\\$id})$0"},
		{"trigger": "\\$USER->SetParam", "contents": "\\$USER->SetParam(${2:\\$name}, ${2:\\$value})$0"},
		{"trigger": "\\$USER->SetUserGroup", "contents": "\\$USER->SetUserGroup(${2:\\$USER_ID}, ${2:\\$arGroups})$0"},
		{"trigger": "\\$USER->SetUserGrouparray", "contents": "\\$USER->SetUserGrouparray(${2:\\$arr})$0"},
		{"trigger": "\\$USER->SimpleRegister", "contents": "\\$USER->SimpleRegister(${2:\\$USER_EMAIL}, ${2:\\$SITE_ID = false}, ${4:\\$captcha_word = ''}, ${4:\\$captcha_sid = 0})$0"},
		{"trigger": "\\$USER->Update", "contents": "\\$USER->Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "\\$USER->UpdateDigest", "contents": "\\$USER->UpdateDigest(${2:\\$ID}, ${2:\\$pass})$0"},
		{"trigger": "\\$USER->UserTypeRightsCheck", "contents": "\\$USER->UserTypeRightsCheck(${2:\\$entity_id})$0"},
		{"trigger": "\\$USER->err_mess", "contents": "\\$USER->err_mess()$0"},
		{"trigger": "CUserAuthProvider::AjaxRequest", "contents": "${1:CUserAuthProvider}::AjaxRequest(${2:\\$arParams=false})$0"},
		{"trigger": "CUserAuthProvider::GetFormHtml", "contents": "${1:CUserAuthProvider}::GetFormHtml(${2:\\$arParams=false})$0"},
		{"trigger": "CUserAuthProvider::GetNames", "contents": "${1:CUserAuthProvider}::GetNames(${2:\\$arCodes})$0"},
		{"trigger": "CUserAuthProvider::UpdateCodes", "contents": "${1:CUserAuthProvider}::UpdateCodes(${2:\\$USER_ID})$0"},
		{"trigger": "CUserAuthProvider::__construct", "contents": "${1:CUserAuthProvider}::__construct()$0"},
		{"trigger": "CUserCounter::Clear", "contents": "${1:CUserCounter}::Clear(${2:\\$user_id}, ${2:\\$code}, ${4:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::ClearAll", "contents": "${1:CUserCounter}::ClearAll(${2:\\$user_id}, ${2:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::ClearByTag", "contents": "${1:CUserCounter}::ClearByTag(${2:\\$tag}, ${2:\\$code}, ${4:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::ClearByUser", "contents": "${1:CUserCounter}::ClearByUser(${2:\\$user_id}, ${2:\\$site_id = SITE_ID}, ${4:\\$code = '**'})$0"},
		{"trigger": "CUserCounter::Decrement", "contents": "${1:CUserCounter}::Decrement(${2:\\$user_id}, ${2:\\$code}, ${4:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::GetCodeValuesByUserID", "contents": "${1:CUserCounter}::GetCodeValuesByUserID(${2:\\$user_id}, ${2:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::GetLastDate", "contents": "${1:CUserCounter}::GetLastDate(${2:\\$user_id}, ${2:\\$code}, ${4:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::GetLastDateByUserAndCode", "contents": "${1:CUserCounter}::GetLastDateByUserAndCode(${2:\\$user_id}, ${2:\\$site_id = SITE_ID}, ${4:\\$code = '**'})$0"},
		{"trigger": "CUserCounter::GetValue", "contents": "${1:CUserCounter}::GetValue(${2:\\$user_id}, ${2:\\$code}, ${4:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::GetValueByUserID", "contents": "${1:CUserCounter}::GetValueByUserID(${2:\\$user_id}, ${2:\\$site_id = SITE_ID}, ${4:\\$code = '**'})$0"},
		{"trigger": "CUserCounter::GetValues", "contents": "${1:CUserCounter}::GetValues(${2:\\$user_id}, ${2:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::Increment", "contents": "${1:CUserCounter}::Increment(${2:\\$user_id}, ${2:\\$code}, ${4:\\$site_id = SITE_ID})$0"},
		{"trigger": "CUserCounter::IncrementWithSelect", "contents": "${1:CUserCounter}::IncrementWithSelect(${2:\\$sub_select})$0"},
		{"trigger": "CUserCounter::Set", "contents": "${1:CUserCounter}::Set(${2:\\$user_id}, ${2:\\$code}, ${4:\\$value}, ${4:\\$site_id = SITE_ID}, ${6:\\$tag = ''})$0"},
		{"trigger": "CUserCounter::dbIF", "contents": "${1:CUserCounter}::dbIF(${2:\\$condition}, ${2:\\$yes}, ${4:\\$no})$0"},
		{"trigger": "CUserEntity::__construct", "contents": "${1:CUserEntity}::__construct()$0"},
		{"trigger": "CUserEntity::initialize", "contents": "${1:CUserEntity}::initialize()$0"},
		{"trigger": "CUserFieldEnum::DeleteFieldEnum", "contents": "${1:CUserFieldEnum}::DeleteFieldEnum(${2:\\$FIELD_ID})$0"},
		{"trigger": "CUserFieldEnum::GetList", "contents": "${1:CUserFieldEnum}::GetList(${2:\\$aSort=array()}, ${2:\\$aFilter=array()})$0"},
		{"trigger": "CUserFieldEnum::SetEnumValues", "contents": "${1:CUserFieldEnum}::SetEnumValues(${2:\\$FIELD_ID}, ${2:\\$values})$0"},
		{"trigger": "CUserGroupEntity::__construct", "contents": "${1:CUserGroupEntity}::__construct()$0"},
		{"trigger": "CUserGroupEntity::initialize", "contents": "${1:CUserGroupEntity}::initialize()$0"},
		{"trigger": "CUserOptions::DeleteCommonOptions", "contents": "${1:CUserOptions}::DeleteCommonOptions()$0"},
		{"trigger": "CUserOptions::DeleteOption", "contents": "${1:CUserOptions}::DeleteOption(${2:\\$category}, ${2:\\$name}, ${4:\\$bCommon=false}, ${4:\\$user_id=false})$0"},
		{"trigger": "CUserOptions::DeleteUsersOptions", "contents": "${1:CUserOptions}::DeleteUsersOptions(${2:\\$user_id=false})$0"},
		{"trigger": "CUserOptions::GetList", "contents": "${1:CUserOptions}::GetList(${2:\\$arOrder = array('ID' => 'ASC')}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CUserOptions::GetOption", "contents": "${1:CUserOptions}::GetOption(${2:\\$category}, ${2:\\$name}, ${4:\\$default_value=false}, ${4:\\$user_id=false})$0"},
		{"trigger": "CUserOptions::OnUserDelete", "contents": "${1:CUserOptions}::OnUserDelete(${2:\\$user_id})$0"},
		{"trigger": "CUserOptions::SetCookieOptions", "contents": "${1:CUserOptions}::SetCookieOptions(${2:\\$cookieName})$0"},
		{"trigger": "CUserOptions::SetOption", "contents": "${1:CUserOptions}::SetOption(${2:\\$category}, ${2:\\$name}, ${4:\\$value}, ${4:\\$bCommon=false}, ${6:\\$user_id=false})$0"},
		{"trigger": "CUserOptions::SetOptionsFromarray", "contents": "${1:CUserOptions}::SetOptionsFromarray(${2:\\$aOptions})$0"},
		{"trigger": "CUserTypeBoolean::GetAdminListEditHTML", "contents": "${1:CUserTypeBoolean}::GetAdminListEditHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeBoolean::GetAdminListViewHTML", "contents": "${1:CUserTypeBoolean}::GetAdminListViewHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeBoolean::GetDBColumnType", "contents": "${1:CUserTypeBoolean}::GetDBColumnType(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeBoolean::GetEditFormHTML", "contents": "${1:CUserTypeBoolean}::GetEditFormHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeBoolean::GetFilterHTML", "contents": "${1:CUserTypeBoolean}::GetFilterHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeBoolean::GetSettingsHTML", "contents": "${1:CUserTypeBoolean}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeBoolean::GetUserTypeDescription", "contents": "${1:CUserTypeBoolean}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeBoolean::OnBeforeSave", "contents": "${1:CUserTypeBoolean}::OnBeforeSave(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeBoolean::PrepareSettings", "contents": "${1:CUserTypeBoolean}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeDateTime::CheckFields", "contents": "${1:CUserTypeDateTime}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeDateTime::GetAdminListEditHTML", "contents": "${1:CUserTypeDateTime}::GetAdminListEditHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeDateTime::GetAdminListViewHTML", "contents": "${1:CUserTypeDateTime}::GetAdminListViewHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeDateTime::GetDBColumnType", "contents": "${1:CUserTypeDateTime}::GetDBColumnType(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeDateTime::GetEditFormHTML", "contents": "${1:CUserTypeDateTime}::GetEditFormHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeDateTime::GetFilterHTML", "contents": "${1:CUserTypeDateTime}::GetFilterHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeDateTime::GetSettingsHTML", "contents": "${1:CUserTypeDateTime}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeDateTime::GetUserTypeDescription", "contents": "${1:CUserTypeDateTime}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeDateTime::PrepareSettings", "contents": "${1:CUserTypeDateTime}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeDouble::CheckFields", "contents": "${1:CUserTypeDouble}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeDouble::GetAdminListEditHTML", "contents": "${1:CUserTypeDouble}::GetAdminListEditHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeDouble::GetAdminListViewHTML", "contents": "${1:CUserTypeDouble}::GetAdminListViewHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeDouble::GetDBColumnType", "contents": "${1:CUserTypeDouble}::GetDBColumnType(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeDouble::GetEditFormHTML", "contents": "${1:CUserTypeDouble}::GetEditFormHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeDouble::GetFilterHTML", "contents": "${1:CUserTypeDouble}::GetFilterHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeDouble::GetSettingsHTML", "contents": "${1:CUserTypeDouble}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeDouble::GetUserTypeDescription", "contents": "${1:CUserTypeDouble}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeDouble::OnBeforeSave", "contents": "${1:CUserTypeDouble}::OnBeforeSave(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeDouble::OnSearchIndex", "contents": "${1:CUserTypeDouble}::OnSearchIndex(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeDouble::PrepareSettings", "contents": "${1:CUserTypeDouble}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeEntity::Add", "contents": "${1:CUserTypeEntity}::Add(${2:\\$arFields}, ${2:\\$bCheckUserType = true})$0"},
		{"trigger": "CUserTypeEntity::CheckFields", "contents": "${1:CUserTypeEntity}::CheckFields(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$bCheckUserType = true})$0"},
		{"trigger": "CUserTypeEntity::CreatePropertyTables", "contents": "${1:CUserTypeEntity}::CreatePropertyTables(${2:\\$entity_id})$0"},
		{"trigger": "CUserTypeEntity::Delete", "contents": "${1:CUserTypeEntity}::Delete(${2:\\$ID})$0"},
		{"trigger": "CUserTypeEntity::DropColumnSQL", "contents": "${1:CUserTypeEntity}::DropColumnSQL(${2:\\$strTable}, ${2:\\$arColumns})$0"},
		{"trigger": "CUserTypeEntity::DropEntity", "contents": "${1:CUserTypeEntity}::DropEntity(${2:\\$entity_id})$0"},
		{"trigger": "CUserTypeEntity::Fetch", "contents": "${1:CUserTypeEntity}::Fetch()$0"},
		{"trigger": "CUserTypeEntity::GetByID", "contents": "${1:CUserTypeEntity}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CUserTypeEntity::GetList", "contents": "${1:CUserTypeEntity}::GetList(${2:\\$aSort=array()}, ${2:\\$aFilter=array()})$0"},
		{"trigger": "CUserTypeEntity::Update", "contents": "${1:CUserTypeEntity}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CUserTypeEnum::CheckFields", "contents": "${1:CUserTypeEnum}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeEnum::GetAdminListEditHTML", "contents": "${1:CUserTypeEnum}::GetAdminListEditHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeEnum::GetAdminListEditHTMLMulty", "contents": "${1:CUserTypeEnum}::GetAdminListEditHTMLMulty(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeEnum::GetAdminListViewHTML", "contents": "${1:CUserTypeEnum}::GetAdminListViewHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeEnum::GetDBColumnType", "contents": "${1:CUserTypeEnum}::GetDBColumnType(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeEnum::GetEditFormHTML", "contents": "${1:CUserTypeEnum}::GetEditFormHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeEnum::GetEditFormHTMLMulty", "contents": "${1:CUserTypeEnum}::GetEditFormHTMLMulty(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeEnum::GetFilterHTML", "contents": "${1:CUserTypeEnum}::GetFilterHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeEnum::GetList", "contents": "${1:CUserTypeEnum}::GetList(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeEnum::GetSettingsHTML", "contents": "${1:CUserTypeEnum}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeEnum::GetUserTypeDescription", "contents": "${1:CUserTypeEnum}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeEnum::OnSearchIndex", "contents": "${1:CUserTypeEnum}::OnSearchIndex(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeEnum::PrepareSettings", "contents": "${1:CUserTypeEnum}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeFile::CheckFields", "contents": "${1:CUserTypeFile}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeFile::GetAdminListEditHTML", "contents": "${1:CUserTypeFile}::GetAdminListEditHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeFile::GetAdminListEditHTMLMulty", "contents": "${1:CUserTypeFile}::GetAdminListEditHTMLMulty(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeFile::GetAdminListViewHTML", "contents": "${1:CUserTypeFile}::GetAdminListViewHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeFile::GetDBColumnType", "contents": "${1:CUserTypeFile}::GetDBColumnType(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeFile::GetEditFormHTML", "contents": "${1:CUserTypeFile}::GetEditFormHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeFile::GetFilterHTML", "contents": "${1:CUserTypeFile}::GetFilterHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeFile::GetSettingsHTML", "contents": "${1:CUserTypeFile}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeFile::GetUserTypeDescription", "contents": "${1:CUserTypeFile}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeFile::OnBeforeSave", "contents": "${1:CUserTypeFile}::OnBeforeSave(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeFile::OnSearchIndex", "contents": "${1:CUserTypeFile}::OnSearchIndex(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeFile::PrepareSettings", "contents": "${1:CUserTypeFile}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeFile::__GetFileContent", "contents": "${1:CUserTypeFile}::__GetFileContent(${2:\\$FILE_ID})$0"},
		{"trigger": "CUserTypeIBlockElement::CheckFields", "contents": "${1:CUserTypeIBlockElement}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeIBlockElement::GetList", "contents": "${1:CUserTypeIBlockElement}::GetList(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeIBlockElement::GetSettingsHTML", "contents": "${1:CUserTypeIBlockElement}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeIBlockElement::GetUserTypeDescription", "contents": "${1:CUserTypeIBlockElement}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeIBlockElement::OnSearchIndex", "contents": "${1:CUserTypeIBlockElement}::OnSearchIndex(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeIBlockElement::PrepareSettings", "contents": "${1:CUserTypeIBlockElement}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeIBlockSection::CheckFields", "contents": "${1:CUserTypeIBlockSection}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeIBlockSection::GetList", "contents": "${1:CUserTypeIBlockSection}::GetList(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeIBlockSection::GetSettingsHTML", "contents": "${1:CUserTypeIBlockSection}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeIBlockSection::GetUserTypeDescription", "contents": "${1:CUserTypeIBlockSection}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeIBlockSection::OnSearchIndex", "contents": "${1:CUserTypeIBlockSection}::OnSearchIndex(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeIBlockSection::PrepareSettings", "contents": "${1:CUserTypeIBlockSection}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeInteger::CheckFields", "contents": "${1:CUserTypeInteger}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeInteger::GetAdminListEditHTML", "contents": "${1:CUserTypeInteger}::GetAdminListEditHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeInteger::GetAdminListViewHTML", "contents": "${1:CUserTypeInteger}::GetAdminListViewHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeInteger::GetDBColumnType", "contents": "${1:CUserTypeInteger}::GetDBColumnType(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeInteger::GetEditFormHTML", "contents": "${1:CUserTypeInteger}::GetEditFormHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeInteger::GetFilterHTML", "contents": "${1:CUserTypeInteger}::GetFilterHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeInteger::GetSettingsHTML", "contents": "${1:CUserTypeInteger}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeInteger::GetUserTypeDescription", "contents": "${1:CUserTypeInteger}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeInteger::OnSearchIndex", "contents": "${1:CUserTypeInteger}::OnSearchIndex(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeInteger::PrepareSettings", "contents": "${1:CUserTypeInteger}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeManager::AddFindFields", "contents": "${1:CUserTypeManager}::AddFindFields(${2:\\$entity_id}, ${2:&\\$arFindFields})$0"},
		{"trigger": "CUserTypeManager::AddUserFields", "contents": "${1:CUserTypeManager}::AddUserFields(${2:\\$entity_id}, ${2:\\$arRes}, ${4:&\\$row})$0"},
		{"trigger": "CUserTypeManager::AdminListAddFilter", "contents": "${1:CUserTypeManager}::AdminListAddFilter(${2:\\$entity_id}, ${2:&\\$arFilter})$0"},
		{"trigger": "CUserTypeManager::AdminListAddFilterFields", "contents": "${1:CUserTypeManager}::AdminListAddFilterFields(${2:\\$entity_id}, ${2:&\\$arFilterFields})$0"},
		{"trigger": "CUserTypeManager::AdminListAddHeaders", "contents": "${1:CUserTypeManager}::AdminListAddHeaders(${2:\\$entity_id}, ${2:&\\$arHeaders})$0"},
		{"trigger": "CUserTypeManager::AdminListPrepareFields", "contents": "${1:CUserTypeManager}::AdminListPrepareFields(${2:\\$entity_id}, ${2:&\\$arFields})$0"},
		{"trigger": "CUserTypeManager::AdminListShowFilter", "contents": "${1:CUserTypeManager}::AdminListShowFilter(${2:\\$entity_id})$0"},
		{"trigger": "CUserTypeManager::CleanCache", "contents": "${1:CUserTypeManager}::CleanCache()$0"},
		{"trigger": "CUserTypeManager::DateTimeToChar", "contents": "${1:CUserTypeManager}::DateTimeToChar(${2:\\$FIELD_NAME})$0"},
		{"trigger": "CUserTypeManager::EditFormAddFields", "contents": "${1:CUserTypeManager}::EditFormAddFields(${2:\\$entity_id}, ${2:&\\$arFields})$0"},
		{"trigger": "CUserTypeManager::EditFormShowTab", "contents": "${1:CUserTypeManager}::EditFormShowTab(${2:\\$entity_id}, ${2:\\$bVarsFromForm}, ${4:\\$ID})$0"},
		{"trigger": "CUserTypeManager::EditFormTab", "contents": "${1:CUserTypeManager}::EditFormTab(${2:\\$entity_id})$0"},
		{"trigger": "CUserTypeManager::GetDBColumnType", "contents": "${1:CUserTypeManager}::GetDBColumnType(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeManager::GetEditFormHTML", "contents": "${1:CUserTypeManager}::GetEditFormHTML(${2:\\$bVarsFromForm}, ${2:\\$form_value}, ${4:\\$arUserField})$0"},
		{"trigger": "CUserTypeManager::GetUserFields", "contents": "${1:CUserTypeManager}::GetUserFields(${2:\\$entity_id}, ${2:\\$value_id=0}, ${4:\\$LANG=false})$0"},
		{"trigger": "CUserTypeManager::GetUserType", "contents": "${1:CUserTypeManager}::GetUserType(${2:\\$user_type_id = false})$0"},
		{"trigger": "CUserTypeManager::IsNotEmpty", "contents": "${1:CUserTypeManager}::IsNotEmpty(${2:\\$value})$0"},
		{"trigger": "CUserTypeManager::OnEntityDelete", "contents": "${1:CUserTypeManager}::OnEntityDelete(${2:\\$entity_id})$0"},
		{"trigger": "CUserTypeManager::PrepareSettings", "contents": "${1:CUserTypeManager}::PrepareSettings(${2:\\$ID}, ${2:\\$arUserField}, ${4:\\$bCheckUserType = true})$0"},
		{"trigger": "CUserTypeManager::ShowScript", "contents": "${1:CUserTypeManager}::ShowScript()$0"},
		{"trigger": "CUserTypeSQL::GetDistinct", "contents": "${1:CUserTypeSQL}::GetDistinct()$0"},
		{"trigger": "CUserTypeSQL::GetFilter", "contents": "${1:CUserTypeSQL}::GetFilter()$0"},
		{"trigger": "CUserTypeSQL::GetJoin", "contents": "${1:CUserTypeSQL}::GetJoin(${2:\\$ID})$0"},
		{"trigger": "CUserTypeSQL::GetOrder", "contents": "${1:CUserTypeSQL}::GetOrder(${2:\\$field})$0"},
		{"trigger": "CUserTypeSQL::GetSelect", "contents": "${1:CUserTypeSQL}::GetSelect()$0"},
		{"trigger": "CUserTypeSQL::SetEntity", "contents": "${1:CUserTypeSQL}::SetEntity(${2:\\$entity_id}, ${2:\\$ID})$0"},
		{"trigger": "CUserTypeSQL::SetFilter", "contents": "${1:CUserTypeSQL}::SetFilter(${2:\\$arFilter})$0"},
		{"trigger": "CUserTypeSQL::SetOrder", "contents": "${1:CUserTypeSQL}::SetOrder(${2:\\$arOrder})$0"},
		{"trigger": "CUserTypeSQL::SetSelect", "contents": "${1:CUserTypeSQL}::SetSelect(${2:\\$arSelect})$0"},
		{"trigger": "CUserTypeString::CheckFields", "contents": "${1:CUserTypeString}::CheckFields(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeString::GetAdminListEditHTML", "contents": "${1:CUserTypeString}::GetAdminListEditHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeString::GetAdminListEditHTMLMulty", "contents": "${1:CUserTypeString}::GetAdminListEditHTMLMulty(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeString::GetAdminListViewHTML", "contents": "${1:CUserTypeString}::GetAdminListViewHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeString::GetAdminListViewHTMLMulty", "contents": "${1:CUserTypeString}::GetAdminListViewHTMLMulty(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeString::GetDBColumnType", "contents": "${1:CUserTypeString}::GetDBColumnType(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeString::GetEditFormHTML", "contents": "${1:CUserTypeString}::GetEditFormHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeString::GetEditFormHTMLMulty", "contents": "${1:CUserTypeString}::GetEditFormHTMLMulty(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeString::GetFilterHTML", "contents": "${1:CUserTypeString}::GetFilterHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeString::GetSettingsHTML", "contents": "${1:CUserTypeString}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeString::GetUserTypeDescription", "contents": "${1:CUserTypeString}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeString::OnBeforeSave", "contents": "${1:CUserTypeString}::OnBeforeSave(${2:\\$arUserField}, ${2:\\$value})$0"},
		{"trigger": "CUserTypeString::OnSearchIndex", "contents": "${1:CUserTypeString}::OnSearchIndex(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeString::PrepareSettings", "contents": "${1:CUserTypeString}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUserTypeStringFormatted::GetPublicViewHTML", "contents": "${1:CUserTypeStringFormatted}::GetPublicViewHTML(${2:\\$arUserField}, ${2:\\$arHtmlControl})$0"},
		{"trigger": "CUserTypeStringFormatted::GetSettingsHTML", "contents": "${1:CUserTypeStringFormatted}::GetSettingsHTML(${2:\\$arUserField = false}, ${2:\\$arHtmlControl}, ${4:\\$bVarsFromForm})$0"},
		{"trigger": "CUserTypeStringFormatted::GetUserTypeDescription", "contents": "${1:CUserTypeStringFormatted}::GetUserTypeDescription()$0"},
		{"trigger": "CUserTypeStringFormatted::PrepareSettings", "contents": "${1:CUserTypeStringFormatted}::PrepareSettings(${2:\\$arUserField})$0"},
		{"trigger": "CUtil::BinStrlen", "contents": "${1:CUtil}::BinStrlen(${2:\\$buf})$0"},
		{"trigger": "CUtil::DetectUTF8", "contents": "${1:CUtil}::DetectUTF8(${2:\\$string})$0"},
		{"trigger": "CUtil::GetPopupSize", "contents": "${1:CUtil}::GetPopupSize(${2:\\$resize_id}, ${2:\\$arDefaults = array()})$0"},
		{"trigger": "CUtil::JSEscape", "contents": "${1:CUtil}::JSEscape(${2:\\$s})$0"},
		{"trigger": "CUtil::JSPostUnescape", "contents": "${1:CUtil}::JSPostUnescape()$0"},
		{"trigger": "CUtil::addslashes", "contents": "${1:CUtil}::addslashes(${2:\\$s})$0"},
		{"trigger": "CUtil::closetags", "contents": "${1:CUtil}::closetags(${2:\\$html})$0"},
		{"trigger": "CUtmUserEntity::__construct", "contents": "${1:CUtmUserEntity}::__construct()$0"},
		{"trigger": "CUtmUserEntity::initialize", "contents": "${1:CUtmUserEntity}::initialize()$0"},
		{"trigger": "CUtsUserEntity::IsUts", "contents": "${1:CUtsUserEntity}::IsUts()$0"},
		{"trigger": "CUtsUserEntity::__construct", "contents": "${1:CUtsUserEntity}::__construct()$0"},
		{"trigger": "CUtsUserEntity::initialize", "contents": "${1:CUtsUserEntity}::initialize()$0"},
		{"trigger": "CVariable::__construct", "contents": "${1:CVariable}::__construct(${2:\\$name})$0"},
		{"trigger": "CVariable::newDeclare", "contents": "${1:CVariable}::newDeclare(${2:\\$id,\\$line,\\$start,\\$end,\\$tokens,\\$comment,\\$dependencies,\\$tainted_vars})$0"},
		{"trigger": "CVariableDeclare::__construct", "contents": "${1:CVariableDeclare}::__construct(${2:\\$id,\\$line,\\$start,\\$end,\\$tokens,\\$comment,\\$dependencies,\\$tainted_vars})$0"},
		{"trigger": "CVuln::__construct", "contents": "${1:CVuln}::__construct(${2:\\$filename,\\$line,\\$name,\\$tokens,\\$dependencies,\\$tainted_vars,\\$comment})$0"},
		{"trigger": "CVulnScanner::__construct", "contents": "${1:CVulnScanner}::__construct(${2:\\$file_name}, ${2:\\$arParams}, ${4:\\$template = '.default'}, ${4:\\$component_template = ''})$0"},
		{"trigger": "CVulnScanner::addVariable", "contents": "${1:CVulnScanner}::addVariable(${2:\\$var}, ${2:\\$id}, ${4:\\$line}, ${4:\\$start}, ${6:\\$end}, ${6:\\$comment = ''}, ${8:\\$custom_tokens = array()})$0"},
		{"trigger": "CVulnScanner::clearVariables", "contents": "${1:CVulnScanner}::clearVariables(${2:\\$var})$0"},
		{"trigger": "CVulnScanner::dependenciesTraverse", "contents": "${1:CVulnScanner}::dependenciesTraverse(${2:\\$dependencies = array()})$0"},
		{"trigger": "CVulnScanner::dependencyHave", "contents": "${1:CVulnScanner}::dependencyHave(${2:\\$tokens}, ${2:\\$type})$0"},
		{"trigger": "CVulnScanner::fixTokens", "contents": "${1:CVulnScanner}::fixTokens(${2:\\$tokens}, ${2:\\$component_template = ''})$0"},
		{"trigger": "CVulnScanner::getBraceEnd", "contents": "${1:CVulnScanner}::getBraceEnd(${2:\\$tokens}, ${2:\\$i})$0"},
		{"trigger": "CVulnScanner::getColor", "contents": "${1:CVulnScanner}::getColor(${2:\\$token})$0"},
		{"trigger": "CVulnScanner::getHelp", "contents": "${1:CVulnScanner}::getHelp(${2:\\$category})$0"},
		{"trigger": "CVulnScanner::getOutput", "contents": "${1:CVulnScanner}::getOutput()$0"},
		{"trigger": "CVulnScanner::getTokensValue", "contents": "${1:CVulnScanner}::getTokensValue(${2:\\$file_name}, ${2:\\$tokens}, ${4:\\$start = 0}, ${4:\\$stop = 0})$0"},
		{"trigger": "CVulnScanner::getVarName", "contents": "${1:CVulnScanner}::getVarName(${2:\\$token}, ${2:\\$level = -1})$0"},
		{"trigger": "CVulnScanner::getVulnNodeDescription", "contents": "${1:CVulnScanner}::getVulnNodeDescription(${2:\\$func_name})$0"},
		{"trigger": "CVulnScanner::getVulnNodeTitle", "contents": "${1:CVulnScanner}::getVulnNodeTitle(${2:\\$func_name})$0"},
		{"trigger": "CVulnScanner::haveUserInput", "contents": "${1:CVulnScanner}::haveUserInput(${2:\\$tokens}, ${2:\\$var_declare = true}, ${4:\\$function = ''})$0"},
		{"trigger": "CVulnScanner::highlightarray", "contents": "${1:CVulnScanner}::highlightarray(${2:\\$token})$0"},
		{"trigger": "CVulnScanner::highlightLine", "contents": "${1:CVulnScanner}::highlightLine(${2:\\$line}, ${2:\\$tokens = array()}, ${4:\\$tainted_vars = array()}, ${4:\\$comment = ''})$0"},
		{"trigger": "CVulnScanner::prepareOutput", "contents": "${1:CVulnScanner}::prepareOutput(${2:\\$output})$0"},
		{"trigger": "CVulnScanner::prepareTokens", "contents": "${1:CVulnScanner}::prepareTokens(${2:\\$tokens})$0"},
		{"trigger": "CVulnScanner::process", "contents": "${1:CVulnScanner}::process()$0"},
		{"trigger": "CVulnScanner::reconstructarray", "contents": "${1:CVulnScanner}::reconstructarray(${2:\\$tokens})$0"},
		{"trigger": "CVulnScanner::removeTernary", "contents": "${1:CVulnScanner}::removeTernary(${2:\\$tokens})$0"},
		{"trigger": "CVulnScanner::searchSimilarVuln", "contents": "${1:CVulnScanner}::searchSimilarVuln(${2:\\$output}, ${2:\\$max})$0"},
		{"trigger": "CVulnScanner::tokenToString", "contents": "${1:CVulnScanner}::tokenToString(${2:\\$token})$0"},
		{"trigger": "CVulnScanner::tokenize", "contents": "${1:CVulnScanner}::tokenize(${2:\\$code}, ${2:\\$component_template = ''})$0"},
		{"trigger": "CVulnScanner::traverseVar", "contents": "${1:CVulnScanner}::traverseVar(${2:\\$var}, ${2:\\$id = -1})$0"},
		{"trigger": "CVulnScanner::wrapBraces", "contents": "${1:CVulnScanner}::wrapBraces(${2:\\$tokens}, ${2:\\$start}, ${4:\\$between}, ${4:\\$end})$0"},
		{"trigger": "CWizard::CWizard", "contents": "${1:CWizard}::CWizard(${2:\\$wizardName})$0"},
		{"trigger": "CWizard::GetDescription", "contents": "${1:CWizard}::GetDescription()$0"},
		{"trigger": "CWizard::GetErrors", "contents": "${1:CWizard}::GetErrors()$0"},
		{"trigger": "CWizard::GetID", "contents": "${1:CWizard}::GetID()$0"},
		{"trigger": "CWizard::GetPath", "contents": "${1:CWizard}::GetPath()$0"},
		{"trigger": "CWizard::GetServices", "contents": "${1:CWizard}::GetServices(${2:\\$arFilter = array()})$0"},
		{"trigger": "CWizard::GetSiteGroupID", "contents": "${1:CWizard}::GetSiteGroupID()$0"},
		{"trigger": "CWizard::GetSiteID", "contents": "${1:CWizard}::GetSiteID()$0"},
		{"trigger": "CWizard::GetSiteServiceID", "contents": "${1:CWizard}::GetSiteServiceID()$0"},
		{"trigger": "CWizard::GetSiteTemplateID", "contents": "${1:CWizard}::GetSiteTemplateID()$0"},
		{"trigger": "CWizard::GetStructure", "contents": "${1:CWizard}::GetStructure(${2:\\$arFilter = array()})$0"},
		{"trigger": "CWizard::GetTemplateGroups", "contents": "${1:CWizard}::GetTemplateGroups(${2:\\$arFilter = array()})$0"},
		{"trigger": "CWizard::GetTemplates", "contents": "${1:CWizard}::GetTemplates(${2:\\$arFilter = array()})$0"},
		{"trigger": "CWizard::IncludeWizardLang", "contents": "${1:CWizard}::IncludeWizardLang(${2:\\$relativePath = ''}, ${2:\\$lang = false})$0"},
		{"trigger": "CWizard::Install", "contents": "${1:CWizard}::Install()$0"},
		{"trigger": "CWizard::SetError", "contents": "${1:CWizard}::SetError(${2:\\$strError}, ${2:\\$id = false})$0"},
		{"trigger": "CWizard::_InitSubStep", "contents": "${1:CWizard}::_InitSubStep(${2:\\$stepType}, ${2:&\\$arInstallation}, ${4:\\$bInitStep = true})$0"},
		{"trigger": "CWizard::_SetNextStep", "contents": "${1:CWizard}::_SetNextStep(${2:\\$obStep}, ${2:\\$currentStep}, ${4:\\$stepType = 'select'})$0"},
		{"trigger": "CWizard::__CheckDepends", "contents": "${1:CWizard}::__CheckDepends()$0"},
		{"trigger": "CWizard::__CreateMenuItem", "contents": "${1:CWizard}::__CreateMenuItem(${2:\\$arPage})$0"},
		{"trigger": "CWizard::__GetDescription", "contents": "${1:CWizard}::__GetDescription()$0"},
		{"trigger": "CWizard::__GetFileName", "contents": "${1:CWizard}::__GetFileName(${2:\\$fileName}, ${2:\\$postFix})$0"},
		{"trigger": "CWizard::__GetInstallationScript", "contents": "${1:CWizard}::__GetInstallationScript()$0"},
		{"trigger": "CWizard::__GetLicensePath", "contents": "${1:CWizard}::__GetLicensePath()$0"},
		{"trigger": "CWizard::__GetNewStructure", "contents": "${1:CWizard}::__GetNewStructure(${2:\\$structureID}, ${2:&\\$arStructure})$0"},
		{"trigger": "CWizard::__GetPageProperties", "contents": "${1:CWizard}::__GetPageProperties(${2:\\$pageID}, ${2:&\\$arStructure})$0"},
		{"trigger": "CWizard::__GetServices", "contents": "${1:CWizard}::__GetServices()$0"},
		{"trigger": "CWizard::__GetSites", "contents": "${1:CWizard}::__GetSites()$0"},
		{"trigger": "CWizard::__GetStructure", "contents": "${1:CWizard}::__GetStructure()$0"},
		{"trigger": "CWizard::__GetTemplates", "contents": "${1:CWizard}::__GetTemplates()$0"},
		{"trigger": "CWizard::__GetTemplatesPath", "contents": "${1:CWizard}::__GetTemplatesPath()$0"},
		{"trigger": "CWizard::__GetUserStep", "contents": "${1:CWizard}::__GetUserStep(${2:\\$stepName}, ${2:&\\$step})$0"},
		{"trigger": "CWizard::__InitVariables", "contents": "${1:CWizard}::__InitVariables()$0"},
		{"trigger": "CWizard::__Install", "contents": "${1:CWizard}::__Install()$0"},
		{"trigger": "CWizard::__InstallService", "contents": "${1:CWizard}::__InstallService(${2:\\$serviceID})$0"},
		{"trigger": "CWizard::__InstallSite", "contents": "${1:CWizard}::__InstallSite(${2:\\$siteID})$0"},
		{"trigger": "CWizard::__InstallStructure", "contents": "${1:CWizard}::__InstallStructure()$0"},
		{"trigger": "CWizard::__InstallTemplate", "contents": "${1:CWizard}::__InstallTemplate(${2:\\$templateID})$0"},
		{"trigger": "CWizard::__MoveDirFiles", "contents": "${1:CWizard}::__MoveDirFiles(${2:&\\$arFiles})$0"},
		{"trigger": "CWizard::__PackageError", "contents": "${1:CWizard}::__PackageError()$0"},
		{"trigger": "CWizard::__SetStepDescription", "contents": "${1:CWizard}::__SetStepDescription(${2:\\$obStep}, ${2:\\$stepName})$0"},
		{"trigger": "CWizard::__SetTemplate", "contents": "${1:CWizard}::__SetTemplate()$0"},
		{"trigger": "CWizardAdminTemplate::GetLayout", "contents": "${1:CWizardAdminTemplate}::GetLayout()$0"},
		{"trigger": "CWizardBase::AddStep", "contents": "${1:CWizardBase}::AddStep(${2:\\$obStep}, ${2:\\$stepID = null})$0"},
		{"trigger": "CWizardBase::AddSteps", "contents": "${1:CWizardBase}::AddSteps(${2:\\$arClasses})$0"},
		{"trigger": "CWizardBase::CWizardBase", "contents": "${1:CWizardBase}::CWizardBase(${2:\\$wizardName}, ${2:\\$package})$0"},
		{"trigger": "CWizardBase::DisableAdminTemplate", "contents": "${1:CWizardBase}::DisableAdminTemplate()$0"},
		{"trigger": "CWizardBase::Display", "contents": "${1:CWizardBase}::Display()$0"},
		{"trigger": "CWizardBase::GetCancelButtonID", "contents": "${1:CWizardBase}::GetCancelButtonID()$0"},
		{"trigger": "CWizardBase::GetCancelStepID", "contents": "${1:CWizardBase}::GetCancelStepID()$0"},
		{"trigger": "CWizardBase::GetCurrentStep", "contents": "${1:CWizardBase}::GetCurrentStep()$0"},
		{"trigger": "CWizardBase::GetCurrentStepID", "contents": "${1:CWizardBase}::GetCurrentStepID()$0"},
		{"trigger": "CWizardBase::GetDefaultVar", "contents": "${1:CWizardBase}::GetDefaultVar(${2:\\$varName})$0"},
		{"trigger": "CWizardBase::GetDefaultVars", "contents": "${1:CWizardBase}::GetDefaultVars()$0"},
		{"trigger": "CWizardBase::GetFinishButtonID", "contents": "${1:CWizardBase}::GetFinishButtonID()$0"},
		{"trigger": "CWizardBase::GetFinishStepID", "contents": "${1:CWizardBase}::GetFinishStepID()$0"},
		{"trigger": "CWizardBase::GetFormActionScript", "contents": "${1:CWizardBase}::GetFormActionScript()$0"},
		{"trigger": "CWizardBase::GetFormName", "contents": "${1:CWizardBase}::GetFormName()$0"},
		{"trigger": "CWizardBase::GetID", "contents": "${1:CWizardBase}::GetID()$0"},
		{"trigger": "CWizardBase::GetNextButtonID", "contents": "${1:CWizardBase}::GetNextButtonID()$0"},
		{"trigger": "CWizardBase::GetNextStepID", "contents": "${1:CWizardBase}::GetNextStepID()$0"},
		{"trigger": "CWizardBase::GetPackage", "contents": "${1:CWizardBase}::GetPackage()$0"},
		{"trigger": "CWizardBase::GetPath", "contents": "${1:CWizardBase}::GetPath()$0"},
		{"trigger": "CWizardBase::GetPrevButtonID", "contents": "${1:CWizardBase}::GetPrevButtonID()$0"},
		{"trigger": "CWizardBase::GetPrevStepID", "contents": "${1:CWizardBase}::GetPrevStepID()$0"},
		{"trigger": "CWizardBase::GetRealName", "contents": "${1:CWizardBase}::GetRealName(${2:\\$varName})$0"},
		{"trigger": "CWizardBase::GetSiteGroupID", "contents": "${1:CWizardBase}::GetSiteGroupID()$0"},
		{"trigger": "CWizardBase::GetSiteID", "contents": "${1:CWizardBase}::GetSiteID()$0"},
		{"trigger": "CWizardBase::GetSiteServiceID", "contents": "${1:CWizardBase}::GetSiteServiceID()$0"},
		{"trigger": "CWizardBase::GetSiteTemplateID", "contents": "${1:CWizardBase}::GetSiteTemplateID()$0"},
		{"trigger": "CWizardBase::GetVar", "contents": "${1:CWizardBase}::GetVar(${2:\\$varName}, ${2:\\$useDefault = false})$0"},
		{"trigger": "CWizardBase::GetVarPrefix", "contents": "${1:CWizardBase}::GetVarPrefix()$0"},
		{"trigger": "CWizardBase::GetVars", "contents": "${1:CWizardBase}::GetVars(${2:\\$useDefault = false})$0"},
		{"trigger": "CWizardBase::GetWizardName", "contents": "${1:CWizardBase}::GetWizardName()$0"},
		{"trigger": "CWizardBase::GetWizardSteps", "contents": "${1:CWizardBase}::GetWizardSteps()$0"},
		{"trigger": "CWizardBase::IsCancelButtonClick", "contents": "${1:CWizardBase}::IsCancelButtonClick()$0"},
		{"trigger": "CWizardBase::IsFinishButtonClick", "contents": "${1:CWizardBase}::IsFinishButtonClick()$0"},
		{"trigger": "CWizardBase::IsNextButtonClick", "contents": "${1:CWizardBase}::IsNextButtonClick()$0"},
		{"trigger": "CWizardBase::IsPrevButtonClick", "contents": "${1:CWizardBase}::IsPrevButtonClick()$0"},
		{"trigger": "CWizardBase::SetCancelButtonID", "contents": "${1:CWizardBase}::SetCancelButtonID(${2:\\$buttonID})$0"},
		{"trigger": "CWizardBase::SetCurrentStep", "contents": "${1:CWizardBase}::SetCurrentStep(${2:\\$stepID})$0"},
		{"trigger": "CWizardBase::SetDefaultVar", "contents": "${1:CWizardBase}::SetDefaultVar(${2:\\$varName}, ${2:\\$varValue})$0"},
		{"trigger": "CWizardBase::SetDefaultVars", "contents": "${1:CWizardBase}::SetDefaultVars(${2:\\$arVars})$0"},
		{"trigger": "CWizardBase::SetFinishButtonID", "contents": "${1:CWizardBase}::SetFinishButtonID(${2:\\$buttonID})$0"},
		{"trigger": "CWizardBase::SetFirstStep", "contents": "${1:CWizardBase}::SetFirstStep(${2:\\$stepID})$0"},
		{"trigger": "CWizardBase::SetFormActionScript", "contents": "${1:CWizardBase}::SetFormActionScript(${2:\\$actionScript})$0"},
		{"trigger": "CWizardBase::SetFormName", "contents": "${1:CWizardBase}::SetFormName(${2:\\$formName})$0"},
		{"trigger": "CWizardBase::SetNextButtonID", "contents": "${1:CWizardBase}::SetNextButtonID(${2:\\$buttonID})$0"},
		{"trigger": "CWizardBase::SetPrevButtonID", "contents": "${1:CWizardBase}::SetPrevButtonID(${2:\\$buttonID})$0"},
		{"trigger": "CWizardBase::SetReturnOutput", "contents": "${1:CWizardBase}::SetReturnOutput(${2:\\$mode = true})$0"},
		{"trigger": "CWizardBase::SetTemplate", "contents": "${1:CWizardBase}::SetTemplate(${2:\\$obStepTemplate}, ${2:\\$stepID = null})$0"},
		{"trigger": "CWizardBase::SetVar", "contents": "${1:CWizardBase}::SetVar(${2:\\$varName}, ${2:\\$varValue})$0"},
		{"trigger": "CWizardBase::SetVarPrefix", "contents": "${1:CWizardBase}::SetVarPrefix(${2:\\$varPrefix})$0"},
		{"trigger": "CWizardBase::UnSetVar", "contents": "${1:CWizardBase}::UnSetVar(${2:\\$varName})$0"},
		{"trigger": "CWizardBase::_DisplayStep", "contents": "${1:CWizardBase}::_DisplayStep()$0"},
		{"trigger": "CWizardBase::__DisplayHiddenVars", "contents": "${1:CWizardBase}::__DisplayHiddenVars(${2:\\$arVars}, ${2:\\$oStep}, ${4:\\$concatString = null})$0"},
		{"trigger": "CWizardBase::__GetComplexVar", "contents": "${1:CWizardBase}::__GetComplexVar(${2:\\$varName}, ${2:&\\$arVars})$0"},
		{"trigger": "CWizardBase::__GetStepLayout", "contents": "${1:CWizardBase}::__GetStepLayout()$0"},
		{"trigger": "CWizardBase::__SetComplexVar", "contents": "${1:CWizardBase}::__SetComplexVar(${2:\\$varName}, ${2:\\$value}, ${4:&\\$arVars})$0"},
		{"trigger": "CWizardBase::__ShowError", "contents": "${1:CWizardBase}::__ShowError(${2:\\$errorMessage})$0"},
		{"trigger": "CWizardBase::__UnSetComplexVar", "contents": "${1:CWizardBase}::__UnSetComplexVar(${2:\\$varName}, ${2:&\\$arVars})$0"},
		{"trigger": "CWizardStep::CWizardStep", "contents": "${1:CWizardStep}::CWizardStep()$0"},
		{"trigger": "CWizardStep::DisplayVarExists", "contents": "${1:CWizardStep}::DisplayVarExists(${2:\\$varName})$0"},
		{"trigger": "CWizardStep::GetCancelCaption", "contents": "${1:CWizardStep}::GetCancelCaption()$0"},
		{"trigger": "CWizardStep::GetCancelStepID", "contents": "${1:CWizardStep}::GetCancelStepID()$0"},
		{"trigger": "CWizardStep::GetDisplayVars", "contents": "${1:CWizardStep}::GetDisplayVars()$0"},
		{"trigger": "CWizardStep::GetErrors", "contents": "${1:CWizardStep}::GetErrors()$0"},
		{"trigger": "CWizardStep::GetFinishCaption", "contents": "${1:CWizardStep}::GetFinishCaption()$0"},
		{"trigger": "CWizardStep::GetFinishStepID", "contents": "${1:CWizardStep}::GetFinishStepID()$0"},
		{"trigger": "CWizardStep::GetNextCaption", "contents": "${1:CWizardStep}::GetNextCaption()$0"},
		{"trigger": "CWizardStep::GetNextStepID", "contents": "${1:CWizardStep}::GetNextStepID()$0"},
		{"trigger": "CWizardStep::GetPrevCaption", "contents": "${1:CWizardStep}::GetPrevCaption()$0"},
		{"trigger": "CWizardStep::GetPrevStepID", "contents": "${1:CWizardStep}::GetPrevStepID()$0"},
		{"trigger": "CWizardStep::GetStepID", "contents": "${1:CWizardStep}::GetStepID()$0"},
		{"trigger": "CWizardStep::GetSubTitle", "contents": "${1:CWizardStep}::GetSubTitle()$0"},
		{"trigger": "CWizardStep::GetTitle", "contents": "${1:CWizardStep}::GetTitle()$0"},
		{"trigger": "CWizardStep::GetWizard", "contents": "${1:CWizardStep}::GetWizard()$0"},
		{"trigger": "CWizardStep::InitStep", "contents": "${1:CWizardStep}::InitStep()$0"},
		{"trigger": "CWizardStep::IsAutoSubmit", "contents": "${1:CWizardStep}::IsAutoSubmit()$0"},
		{"trigger": "CWizardStep::OnPostForm", "contents": "${1:CWizardStep}::OnPostForm()$0"},
		{"trigger": "CWizardStep::SaveFile", "contents": "${1:CWizardStep}::SaveFile(${2:\\$name}, ${2:\\$arRestriction = array()})$0"},
		{"trigger": "CWizardStep::SetAutoSubmit", "contents": "${1:CWizardStep}::SetAutoSubmit(${2:\\$bool = true})$0"},
		{"trigger": "CWizardStep::SetCancelCaption", "contents": "${1:CWizardStep}::SetCancelCaption(${2:\\$caption})$0"},
		{"trigger": "CWizardStep::SetCancelStep", "contents": "${1:CWizardStep}::SetCancelStep(${2:\\$stepID})$0"},
		{"trigger": "CWizardStep::SetDisplayVars", "contents": "${1:CWizardStep}::SetDisplayVars(${2:\\$arVars})$0"},
		{"trigger": "CWizardStep::SetError", "contents": "${1:CWizardStep}::SetError(${2:\\$strError}, ${2:\\$id = false})$0"},
		{"trigger": "CWizardStep::SetFinishCaption", "contents": "${1:CWizardStep}::SetFinishCaption(${2:\\$caption})$0"},
		{"trigger": "CWizardStep::SetFinishStep", "contents": "${1:CWizardStep}::SetFinishStep(${2:\\$stepID})$0"},
		{"trigger": "CWizardStep::SetNextCaption", "contents": "${1:CWizardStep}::SetNextCaption(${2:\\$caption})$0"},
		{"trigger": "CWizardStep::SetNextStep", "contents": "${1:CWizardStep}::SetNextStep(${2:\\$stepID})$0"},
		{"trigger": "CWizardStep::SetPrevCaption", "contents": "${1:CWizardStep}::SetPrevCaption(${2:\\$caption})$0"},
		{"trigger": "CWizardStep::SetPrevStep", "contents": "${1:CWizardStep}::SetPrevStep(${2:\\$stepID})$0"},
		{"trigger": "CWizardStep::SetStepID", "contents": "${1:CWizardStep}::SetStepID(${2:\\$stepID})$0"},
		{"trigger": "CWizardStep::SetSubTitle", "contents": "${1:CWizardStep}::SetSubTitle(${2:\\$stepSubTitle})$0"},
		{"trigger": "CWizardStep::SetTitle", "contents": "${1:CWizardStep}::SetTitle(${2:\\$title})$0"},
		{"trigger": "CWizardStep::ShowCheckboxField", "contents": "${1:CWizardStep}::ShowCheckboxField(${2:\\$name}, ${2:\\$value}, ${4:\\$arAttributes = array()})$0"},
		{"trigger": "CWizardStep::ShowFileField", "contents": "${1:CWizardStep}::ShowFileField(${2:\\$name}, ${2:\\$arAttributes = array()})$0"},
		{"trigger": "CWizardStep::ShowHiddenField", "contents": "${1:CWizardStep}::ShowHiddenField(${2:\\$name}, ${2:\\$value}, ${4:\\$arAttributes = array()})$0"},
		{"trigger": "CWizardStep::ShowInputField", "contents": "${1:CWizardStep}::ShowInputField(${2:\\$type}, ${2:\\$name}, ${4:\\$arAttributes = array()})$0"},
		{"trigger": "CWizardStep::ShowRadioField", "contents": "${1:CWizardStep}::ShowRadioField(${2:\\$name}, ${2:\\$value}, ${4:\\$arAttributes = array()})$0"},
		{"trigger": "CWizardStep::ShowSelectField", "contents": "${1:CWizardStep}::ShowSelectField(${2:\\$name}, ${2:\\$arValues = array()}, ${4:\\$arAttributes = array()})$0"},
		{"trigger": "CWizardStep::ShowStep", "contents": "${1:CWizardStep}::ShowStep()$0"},
		{"trigger": "CWizardStep::_SetWizard", "contents": "${1:CWizardStep}::_SetWizard(${2:\\$wizard})$0"},
		{"trigger": "CWizardStep::_ShowAttributes", "contents": "${1:CWizardStep}::_ShowAttributes(${2:\\$arAttributes})$0"},
		{"trigger": "CWizardTemplate::GetLayout", "contents": "${1:CWizardTemplate}::GetLayout()$0"},
		{"trigger": "CWizardTemplate::GetWizard", "contents": "${1:CWizardTemplate}::GetWizard()$0"},
		{"trigger": "CWizardTemplate::_SetWizard", "contents": "${1:CWizardTemplate}::_SetWizard(${2:\\$wizard})$0"},
		{"trigger": "CWizardUtil::CheckName", "contents": "${1:CWizardUtil}::CheckName(${2:\\$wizardName})$0"},
		{"trigger": "CWizardUtil::CopyFile", "contents": "${1:CWizardUtil}::CopyFile(${2:\\$fileID}, ${2:\\$destPath}, ${4:\\$deleteAfterCopy = true})$0"},
		{"trigger": "CWizardUtil::CopyWizard", "contents": "${1:CWizardUtil}::CopyWizard(${2:\\$wizardName}, ${2:\\$newName})$0"},
		{"trigger": "CWizardUtil::CreateThumbnail", "contents": "${1:CWizardUtil}::CreateThumbnail(${2:\\$sourcePath}, ${2:\\$previewPath}, ${4:\\$maxWidth}, ${4:\\$maxHeight})$0"},
		{"trigger": "CWizardUtil::DeleteWizard", "contents": "${1:CWizardUtil}::DeleteWizard(${2:\\$wizardName})$0"},
		{"trigger": "CWizardUtil::GetModules", "contents": "${1:CWizardUtil}::GetModules()$0"},
		{"trigger": "CWizardUtil::GetNamespaceList", "contents": "${1:CWizardUtil}::GetNamespaceList()$0"},
		{"trigger": "CWizardUtil::GetRepositoryPath", "contents": "${1:CWizardUtil}::GetRepositoryPath()$0"},
		{"trigger": "CWizardUtil::GetWizardList", "contents": "${1:CWizardUtil}::GetWizardList(${2:\\$filterNamespace = false}, ${2:\\$bLoadFromModules = false})$0"},
		{"trigger": "CWizardUtil::MakeWizardPath", "contents": "${1:CWizardUtil}::MakeWizardPath(${2:\\$wizardName})$0"},
		{"trigger": "CWizardUtil::ReplaceMacros", "contents": "${1:CWizardUtil}::ReplaceMacros(${2:\\$filePath}, ${2:\\$arReplace}, ${4:\\$skipSharp = false})$0"},
		{"trigger": "CWizardUtil::ReplaceMacrosRecursive", "contents": "${1:CWizardUtil}::ReplaceMacrosRecursive(${2:\\$filePath}, ${2:\\$arReplace})$0"},
		{"trigger": "CWorkgroupEntity::__construct", "contents": "${1:CWorkgroupEntity}::__construct()$0"},
		{"trigger": "CWorkgroupEntity::initialize", "contents": "${1:CWorkgroupEntity}::initialize()$0"},
		{"trigger": "CZip::Add", "contents": "${1:CZip}::Add(${2:\\$arFileList}, ${2:\\$arParams = 0})$0"},
		{"trigger": "CZip::Create", "contents": "${1:CZip}::Create(${2:\\$arFileList}, ${2:\\$arParams = 0})$0"},
		{"trigger": "CZip::Delete", "contents": "${1:CZip}::Delete(${2:\\$arParams})$0"},
		{"trigger": "CZip::Extract", "contents": "${1:CZip}::Extract(${2:\\$arParams = 0})$0"},
		{"trigger": "CZip::GetContent", "contents": "${1:CZip}::GetContent()$0"},
		{"trigger": "CZip::GetErrors", "contents": "${1:CZip}::GetErrors()$0"},
		{"trigger": "CZip::GetOptions", "contents": "${1:CZip}::GetOptions()$0"},
		{"trigger": "CZip::GetProperties", "contents": "${1:CZip}::GetProperties()$0"},
		{"trigger": "CZip::GetStartFile", "contents": "${1:CZip}::GetStartFile()$0"},
		{"trigger": "CZip::Pack", "contents": "${1:CZip}::Pack(${2:\\$arFileList}, ${2:\\$startFile = ''})$0"},
		{"trigger": "CZip::SetOptions", "contents": "${1:CZip}::SetOptions(${2:\\$arOptions})$0"},
		{"trigger": "CZip::Unpack", "contents": "${1:CZip}::Unpack(${2:\\$strPath})$0"},
		{"trigger": "CZip::__construct", "contents": "${1:CZip}::__construct(${2:\\$pzipname})$0"},
		{"trigger": "CZip::_addData", "contents": "${1:CZip}::_addData(${2:\\$arFilesList}, ${2:&\\$arResultList}, ${4:&\\$arParams})$0"},
		{"trigger": "CZip::_addFile", "contents": "${1:CZip}::_addFile(${2:\\$filename}, ${2:&\\$arHeader}, ${4:\\$addDir}, ${4:\\$removeDir}, ${6:\\$removeAllDir}, ${6:&\\$arParams})$0"},
		{"trigger": "CZip::_addFileList", "contents": "${1:CZip}::_addFileList(${2:\\$arFilesList}, ${2:&\\$arResultList}, ${4:\\$addDir}, ${4:\\$removeDir}, ${6:\\$removeAllDir}, ${6:&\\$arParams})$0"},
		{"trigger": "CZip::_addList", "contents": "${1:CZip}::_addList(${2:\\$arFilesList}, ${2:&\\$arResultList}, ${4:\\$addDir}, ${4:\\$removeDir}, ${6:\\$removeAllDir}, ${6:&\\$arParams})$0"},
		{"trigger": "CZip::_checkDir", "contents": "${1:CZip}::_checkDir(${2:\\$dir}, ${2:\\$isDir = false})$0"},
		{"trigger": "CZip::_checkFormat", "contents": "${1:CZip}::_checkFormat(${2:\\$level = 0})$0"},
		{"trigger": "CZip::_checkParams", "contents": "${1:CZip}::_checkParams(${2:&\\$arParams}, ${2:\\$arDefaultValues})$0"},
		{"trigger": "CZip::_cleanFile", "contents": "${1:CZip}::_cleanFile()$0"},
		{"trigger": "CZip::_closeFile", "contents": "${1:CZip}::_closeFile()$0"},
		{"trigger": "CZip::_containsPath", "contents": "${1:CZip}::_containsPath(${2:\\$dir}, ${2:\\$path})$0"},
		{"trigger": "CZip::_convertHeader2FileInfo", "contents": "${1:CZip}::_convertHeader2FileInfo(${2:\\$arHeader}, ${2:&\\$arInfo})$0"},
		{"trigger": "CZip::_convertWinPath", "contents": "${1:CZip}::_convertWinPath(${2:\\$path}, ${2:\\$removeDiskLetter = true})$0"},
		{"trigger": "CZip::_copyBlocks", "contents": "${1:CZip}::_copyBlocks(${2:\\$source}, ${2:\\$dest}, ${4:\\$blockSize}, ${4:\\$mode = 0})$0"},
		{"trigger": "CZip::_createArchive", "contents": "${1:CZip}::_createArchive(${2:\\$arFilesList}, ${2:&\\$arResultList}, ${4:&\\$arParams})$0"},
		{"trigger": "CZip::_deleteByRule", "contents": "${1:CZip}::_deleteByRule(${2:&\\$arResultList}, ${2:&\\$arParams})$0"},
		{"trigger": "CZip::_errorLog", "contents": "${1:CZip}::_errorLog(${2:\\$errorName}, ${2:\\$errorString = ''})$0"},
		{"trigger": "CZip::_errorReset", "contents": "${1:CZip}::_errorReset()$0"},
		{"trigger": "CZip::_extractByRule", "contents": "${1:CZip}::_extractByRule(${2:&\\$arFileList}, ${2:&\\$arParams})$0"},
		{"trigger": "CZip::_extractFile", "contents": "${1:CZip}::_extractFile(${2:&\\$arEntry}, ${2:\\$path}, ${4:\\$removePath}, ${4:\\$removeAllPath}, ${6:&\\$arParams})$0"},
		{"trigger": "CZip::_extractFileAsString", "contents": "${1:CZip}::_extractFileAsString(${2:&\\$arEntry}, ${2:&\\$string})$0"},
		{"trigger": "CZip::_getFileList", "contents": "${1:CZip}::_getFileList(${2:&\\$arFilesList})$0"},
		{"trigger": "CZip::_getfileSystemEncoding", "contents": "${1:CZip}::_getfileSystemEncoding()$0"},
		{"trigger": "CZip::_haveTime", "contents": "${1:CZip}::_haveTime()$0"},
		{"trigger": "CZip::_openFile", "contents": "${1:CZip}::_openFile(${2:\\$mode})$0"},
		{"trigger": "CZip::_processFiles", "contents": "${1:CZip}::_processFiles(${2:\\$arFileList}, ${2:\\$addPath}, ${4:\\$removePath}, ${4:\\$startFile = ''})$0"},
		{"trigger": "CZip::_readCentralFileHeader", "contents": "${1:CZip}::_readCentralFileHeader(${2:&\\$arHeader})$0"},
		{"trigger": "CZip::_readEndCentralDir", "contents": "${1:CZip}::_readEndCentralDir(${2:&\\$arCentralDir})$0"},
		{"trigger": "CZip::_readFileHeader", "contents": "${1:CZip}::_readFileHeader(${2:&\\$arHeader})$0"},
		{"trigger": "CZip::_reducePath", "contents": "${1:CZip}::_reducePath(${2:\\$dir})$0"},
		{"trigger": "CZip::_renameTmpFile", "contents": "${1:CZip}::_renameTmpFile(${2:\\$source}, ${2:\\$dest})$0"},
		{"trigger": "CZip::_writeCentralFileHeader", "contents": "${1:CZip}::_writeCentralFileHeader(${2:&\\$arHeader})$0"},
		{"trigger": "CZip::_writeCentralHeader", "contents": "${1:CZip}::_writeCentralHeader(${2:\\$entriesNumber}, ${2:\\$blockSize}, ${4:\\$offset}, ${4:\\$comment})$0"},
		{"trigger": "CZip::_writeFileHeader", "contents": "${1:CZip}::_writeFileHeader(${2:&\\$arHeader})$0"},
		{"trigger": "CharsetConverter::AddError", "contents": "${1:CharsetConverter}::AddError(${2:\\$error}, ${2:\\$errorCode = ''})$0"},
		{"trigger": "CharsetConverter::BuildConvertTable", "contents": "${1:CharsetConverter}::BuildConvertTable()$0"},
		{"trigger": "CharsetConverter::ClearErrors", "contents": "${1:CharsetConverter}::ClearErrors()$0"},
		{"trigger": "CharsetConverter::Convert", "contents": "${1:CharsetConverter}::Convert(${2:\\$sourceString}, ${2:\\$charsetFrom}, ${4:\\$charsetTo})$0"},
		{"trigger": "CharsetConverter::ConvertCharset", "contents": "${1:CharsetConverter}::ConvertCharset(${2:\\$string}, ${2:\\$charset_in}, ${4:\\$charset_out}, ${4:&\\$errorMessage = ''})$0"},
		{"trigger": "CharsetConverter::GetErrors", "contents": "${1:CharsetConverter}::GetErrors()$0"},
		{"trigger": "CharsetConverter::GetInstance", "contents": "${1:CharsetConverter}::GetInstance()$0"},
		{"trigger": "CharsetConverter::HexToUtf", "contents": "${1:CharsetConverter}::HexToUtf(${2:\\$utfCharInHex})$0"},
		{"trigger": "IBXArchive::GetErrors", "contents": "${1:IBXArchive}::GetErrors()$0"},
		{"trigger": "IBXArchive::GetOptions", "contents": "${1:IBXArchive}::GetOptions()$0"},
		{"trigger": "IBXArchive::GetStartFile", "contents": "${1:IBXArchive}::GetStartFile()$0"},
		{"trigger": "IBXArchive::Pack", "contents": "${1:IBXArchive}::Pack(${2:\\$arFileList}, ${2:\\$curFile = ''})$0"},
		{"trigger": "IBXArchive::SetOptions", "contents": "${1:IBXArchive}::SetOptions(${2:\\$arOptions})$0"},
		{"trigger": "IBXArchive::Unpack", "contents": "${1:IBXArchive}::Unpack(${2:\\$strArchivePath})$0"},
		{"trigger": "IBXGetErrors::GetErrors", "contents": "${1:IBXGetErrors}::GetErrors()$0"},
		{"trigger": "IBXVirtualIO::ClearCache", "contents": "${1:IBXVirtualIO}::ClearCache()$0"},
		{"trigger": "IBXVirtualIO::CombinePath", "contents": "${1:IBXVirtualIO}::CombinePath()$0"},
		{"trigger": "IBXVirtualIO::Copy", "contents": "${1:IBXVirtualIO}::Copy(${2:\\$source}, ${2:\\$target}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "IBXVirtualIO::CreateDirectory", "contents": "${1:IBXVirtualIO}::CreateDirectory(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::Delete", "contents": "${1:IBXVirtualIO}::Delete(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::DirectoryExists", "contents": "${1:IBXVirtualIO}::DirectoryExists(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::ExtractNameFromPath", "contents": "${1:IBXVirtualIO}::ExtractNameFromPath(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::ExtractPathFromPath", "contents": "${1:IBXVirtualIO}::ExtractPathFromPath(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::FileExists", "contents": "${1:IBXVirtualIO}::FileExists(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::GetDirectory", "contents": "${1:IBXVirtualIO}::GetDirectory(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::GetFile", "contents": "${1:IBXVirtualIO}::GetFile(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::GetLogicalName", "contents": "${1:IBXVirtualIO}::GetLogicalName(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::GetPhysicalName", "contents": "${1:IBXVirtualIO}::GetPhysicalName(${2:\\$path})$0"},
		{"trigger": "IBXVirtualIO::Move", "contents": "${1:IBXVirtualIO}::Move(${2:\\$source}, ${2:\\$target}, ${4:\\$bRewrite = true})$0"},
		{"trigger": "IBXVirtualIO::OpenFile", "contents": "${1:IBXVirtualIO}::OpenFile(${2:\\$path}, ${2:\\$mode})$0"},
		{"trigger": "IBXVirtualIO::RelativeToAbsolutePath", "contents": "${1:IBXVirtualIO}::RelativeToAbsolutePath(${2:\\$relativePath})$0"},
		{"trigger": "IBXVirtualIO::Rename", "contents": "${1:IBXVirtualIO}::Rename(${2:\\$source}, ${2:\\$target})$0"},
		{"trigger": "IBXVirtualIO::SiteRelativeToAbsolutePath", "contents": "${1:IBXVirtualIO}::SiteRelativeToAbsolutePath(${2:\\$relativePath}, ${2:\\$site = null})$0"},
		{"trigger": "IBXVirtualIO::ValidateFilenameString", "contents": "${1:IBXVirtualIO}::ValidateFilenameString(${2:\\$filename})$0"},
		{"trigger": "IBXVirtualIO::ValidatePathString", "contents": "${1:IBXVirtualIO}::ValidatePathString(${2:\\$path})$0"},
		{"trigger": "IProviderInterface::GetFormHtml", "contents": "${1:IProviderInterface}::GetFormHtml(${2:\\$arParams=false})$0"},
		{"trigger": "IProviderInterface::GetNames", "contents": "${1:IProviderInterface}::GetNames(${2:\\$arCodes})$0"},
		{"trigger": "PHPParser::CheckForComponent", "contents": "${1:PHPParser}::CheckForComponent(${2:\\$str})$0"},
		{"trigger": "PHPParser::CheckForComponent2", "contents": "${1:PHPParser}::CheckForComponent2(${2:\\$str})$0"},
		{"trigger": "PHPParser::FindComponent", "contents": "${1:PHPParser}::FindComponent(${2:\\$component_name}, ${2:\\$filesrc}, ${4:\\$src_line})$0"},
		{"trigger": "PHPParser::GetComponentParams", "contents": "${1:PHPParser}::GetComponentParams(${2:\\$instruction}, ${2:\\$arAllStr})$0"},
		{"trigger": "PHPParser::GetParams", "contents": "${1:PHPParser}::GetParams(${2:\\$params})$0"},
		{"trigger": "PHPParser::GetParamsRec", "contents": "${1:PHPParser}::GetParamsRec(${2:\\$params}, ${2:&\\$arAllStr}, ${4:&\\$arResult})$0"},
		{"trigger": "PHPParser::ParseFile", "contents": "${1:PHPParser}::ParseFile(${2:\\$filesrc})$0"},
		{"trigger": "PHPParser::ParseScript", "contents": "${1:PHPParser}::ParseScript(${2:\\$scriptContent})$0"},
		{"trigger": "PHPParser::PreparePHP", "contents": "${1:PHPParser}::PreparePHP(${2:\\$str})$0"},
		{"trigger": "PHPParser::ReplString", "contents": "${1:PHPParser}::ReplString(${2:\\$str}, ${2:\\$arAllStr})$0"},
		{"trigger": "PHPParser::ReturnPHPStr", "contents": "${1:PHPParser}::ReturnPHPStr(${2:\\$arVals}, ${2:\\$arParams})$0"},
		{"trigger": "PHPParser::ReturnPHPStr2", "contents": "${1:PHPParser}::ReturnPHPStr2(${2:\\$arVals}, ${2:\\$arParams=array()})$0"},
		{"trigger": "PHPParser::ReturnPHPStrRec", "contents": "${1:PHPParser}::ReturnPHPStrRec(${2:\\$arVal}, ${2:\\$level}, ${4:\\$comm=''})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::addError", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::addError(${2:PHPUnit_Framework_Test \\$test}, ${2:Exception \\$e}, ${4:\\$time})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::addFailure", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::addFailure(${2:PHPUnit_Framework_Test \\$test}, ${2:PHPUnit_Framework_AssertionFailedError \\$e}, ${4:\\$time})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::addIncompleteTest", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::addIncompleteTest(${2:PHPUnit_Framework_Test \\$test}, ${2:Exception \\$e}, ${4:\\$time})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::addSkippedTest", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::addSkippedTest(${2:PHPUnit_Framework_Test \\$test}, ${2:Exception \\$e}, ${4:\\$time})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::endTest", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::endTest(${2:PHPUnit_Framework_Test \\$test}, ${2:\\$time})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::endTestSuite", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::endTestSuite(${2:PHPUnit_Framework_TestSuite \\$suite})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::getMessages", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::getMessages()$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::startTest", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::startTest(${2:PHPUnit_Framework_Test \\$test})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::startTestSuite", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::startTestSuite(${2:PHPUnit_Framework_TestSuite \\$suite})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::write", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::write(${2:\\$buffer})$0"},
		{"trigger": "PHPUnit_Util_Log_BX_Plain::writeCase", "contents": "${1:PHPUnit_Util_Log_BX_Plain}::writeCase(${2:\\$status}, ${2:\\$time}, ${4:array \\$trace = array()}, ${4:\\$message = ''}, ${6:\\$test = NULL})$0"},
		{"trigger": "UpdateTools::CheckUpdates", "contents": "${1:UpdateTools}::CheckUpdates()$0"},
		{"trigger": "WLL_ConsentToken::WLL_ConsentToken", "contents": "${1:WLL_ConsentToken}::WLL_ConsentToken(${2:N/A})$0"},
		{"trigger": "WLL_ConsentToken::__construct", "contents": "${1:WLL_ConsentToken}::__construct(${2:N/A})$0"},
		{"trigger": "WLL_ConsentToken::copy", "contents": "${1:WLL_ConsentToken}::copy(${2:\\$ct})$0"},
		{"trigger": "WLL_ConsentToken::getContext", "contents": "${1:WLL_ConsentToken}::getContext()$0"},
		{"trigger": "WLL_ConsentToken::getDecodedToken", "contents": "${1:WLL_ConsentToken}::getDecodedToken()$0"},
		{"trigger": "WLL_ConsentToken::getDelegationToken", "contents": "${1:WLL_ConsentToken}::getDelegationToken()$0"},
		{"trigger": "WLL_ConsentToken::getError", "contents": "${1:WLL_ConsentToken}::getError()$0"},
		{"trigger": "WLL_ConsentToken::getExpiry", "contents": "${1:WLL_ConsentToken}::getExpiry()$0"},
		{"trigger": "WLL_ConsentToken::getLocationID", "contents": "${1:WLL_ConsentToken}::getLocationID()$0"},
		{"trigger": "WLL_ConsentToken::getOffers", "contents": "${1:WLL_ConsentToken}::getOffers()$0"},
		{"trigger": "WLL_ConsentToken::getOffersString", "contents": "${1:WLL_ConsentToken}::getOffersString()$0"},
		{"trigger": "WLL_ConsentToken::getRefreshToken", "contents": "${1:WLL_ConsentToken}::getRefreshToken()$0"},
		{"trigger": "WLL_ConsentToken::getSessionKey", "contents": "${1:WLL_ConsentToken}::getSessionKey()$0"},
		{"trigger": "WLL_ConsentToken::getToken", "contents": "${1:WLL_ConsentToken}::getToken()$0"},
		{"trigger": "WLL_ConsentToken::isValid", "contents": "${1:WLL_ConsentToken}::isValid()$0"},
		{"trigger": "WLL_ConsentToken::refresh", "contents": "${1:WLL_ConsentToken}::refresh()$0"},
		{"trigger": "WLL_ConsentToken::setContext", "contents": "${1:WLL_ConsentToken}::setContext(${2:\\$context})$0"},
		{"trigger": "WLL_ConsentToken::setDecodedToken", "contents": "${1:WLL_ConsentToken}::setDecodedToken(${2:\\$decodedtoken})$0"},
		{"trigger": "WLL_ConsentToken::setDelegationToken", "contents": "${1:WLL_ConsentToken}::setDelegationToken(${2:\\$delegationtoken})$0"},
		{"trigger": "WLL_ConsentToken::setError", "contents": "${1:WLL_ConsentToken}::setError(${2:\\$str})$0"},
		{"trigger": "WLL_ConsentToken::setExpiry", "contents": "${1:WLL_ConsentToken}::setExpiry(${2:\\$expiry})$0"},
		{"trigger": "WLL_ConsentToken::setLocationID", "contents": "${1:WLL_ConsentToken}::setLocationID(${2:\\$locationID})$0"},
		{"trigger": "WLL_ConsentToken::setOffers", "contents": "${1:WLL_ConsentToken}::setOffers(${2:\\$offers})$0"},
		{"trigger": "WLL_ConsentToken::setRefreshToken", "contents": "${1:WLL_ConsentToken}::setRefreshToken(${2:\\$refreshtoken})$0"},
		{"trigger": "WLL_ConsentToken::setSessionKey", "contents": "${1:WLL_ConsentToken}::setSessionKey(${2:\\$sessionkey})$0"},
		{"trigger": "WLL_ConsentToken::setToken", "contents": "${1:WLL_ConsentToken}::setToken(${2:\\$token})$0"},
		{"trigger": "WLL_User::WLL_User", "contents": "${1:WLL_User}::WLL_User(${2:\\$timestamp}, ${2:\\$id}, ${4:\\$flags}, ${4:\\$context}, ${6:\\$token})$0"},
		{"trigger": "WLL_User::__construct", "contents": "${1:WLL_User}::__construct(${2:\\$timestamp}, ${2:\\$id}, ${4:\\$flags}, ${4:\\$context}, ${6:\\$token})$0"},
		{"trigger": "WLL_User::getContext", "contents": "${1:WLL_User}::getContext()$0"},
		{"trigger": "WLL_User::getError", "contents": "${1:WLL_User}::getError()$0"},
		{"trigger": "WLL_User::getId", "contents": "${1:WLL_User}::getId()$0"},
		{"trigger": "WLL_User::getTimestamp", "contents": "${1:WLL_User}::getTimestamp()$0"},
		{"trigger": "WLL_User::getToken", "contents": "${1:WLL_User}::getToken()$0"},
		{"trigger": "WLL_User::setContext", "contents": "${1:WLL_User}::setContext(${2:\\$context})$0"},
		{"trigger": "WLL_User::setError", "contents": "${1:WLL_User}::setError(${2:\\$str})$0"},
		{"trigger": "WLL_User::setFlags", "contents": "${1:WLL_User}::setFlags(${2:\\$flags})$0"},
		{"trigger": "WLL_User::setId", "contents": "${1:WLL_User}::setId(${2:\\$id})$0"},
		{"trigger": "WLL_User::setTimestamp", "contents": "${1:WLL_User}::setTimestamp(${2:\\$timestamp})$0"},
		{"trigger": "WLL_User::setToken", "contents": "${1:WLL_User}::setToken(${2:\\$token})$0"},
		{"trigger": "WLL_User::usePersistentCookie", "contents": "${1:WLL_User}::usePersistentCookie()$0"},
		{"trigger": "WindowsLiveLogin::IsAvailable", "contents": "${1:WindowsLiveLogin}::IsAvailable()$0"},
		{"trigger": "WindowsLiveLogin::OnExternalAuthList", "contents": "${1:WindowsLiveLogin}::OnExternalAuthList()$0"},
		{"trigger": "WindowsLiveLogin::WindowsLiveLogin", "contents": "${1:WindowsLiveLogin}::WindowsLiveLogin(${2:N/A})$0"},
		{"trigger": "WindowsLiveLogin::__construct", "contents": "${1:WindowsLiveLogin}::__construct(${2:N/A})$0"},
		{"trigger": "WindowsLiveLogin::debug", "contents": "${1:WindowsLiveLogin}::debug(${2:\\$string})$0"},
		{"trigger": "WindowsLiveLogin::decodeAndValidateToken", "contents": "${1:WindowsLiveLogin}::decodeAndValidateToken(${2:N/A})$0"},
		{"trigger": "WindowsLiveLogin::decodeToken", "contents": "${1:WindowsLiveLogin}::decodeToken(${2:\\$token}, ${2:\\$cryptkey=null})$0"},
		{"trigger": "WindowsLiveLogin::derive", "contents": "${1:WindowsLiveLogin}::derive(${2:\\$secret}, ${2:\\$prefix})$0"},
		{"trigger": "WindowsLiveLogin::e64", "contents": "${1:WindowsLiveLogin}::e64(${2:\\$input})$0"},
		{"trigger": "WindowsLiveLogin::fatal", "contents": "${1:WindowsLiveLogin}::fatal(${2:\\$string})$0"},
		{"trigger": "WindowsLiveLogin::fetch", "contents": "${1:WindowsLiveLogin}::fetch(${2:\\$url})$0"},
		{"trigger": "WindowsLiveLogin::getAppId", "contents": "${1:WindowsLiveLogin}::getAppId()$0"},
		{"trigger": "WindowsLiveLogin::getAppLoginUrl", "contents": "${1:WindowsLiveLogin}::getAppLoginUrl(${2:\\$siteid=null}, ${2:\\$ip=null}, ${4:\\$js=null})$0"},
		{"trigger": "WindowsLiveLogin::getAppRetCode", "contents": "${1:WindowsLiveLogin}::getAppRetCode()$0"},
		{"trigger": "WindowsLiveLogin::getAppSecurityToken", "contents": "${1:WindowsLiveLogin}::getAppSecurityToken(${2:\\$siteid=null}, ${2:\\$ip=null})$0"},
		{"trigger": "WindowsLiveLogin::getAppVerifier", "contents": "${1:WindowsLiveLogin}::getAppVerifier(${2:\\$ip=null})$0"},
		{"trigger": "WindowsLiveLogin::getBaseUrl", "contents": "${1:WindowsLiveLogin}::getBaseUrl()$0"},
		{"trigger": "WindowsLiveLogin::getClearCookieResponse", "contents": "${1:WindowsLiveLogin}::getClearCookieResponse()$0"},
		{"trigger": "WindowsLiveLogin::getConsentBaseUrl", "contents": "${1:WindowsLiveLogin}::getConsentBaseUrl()$0"},
		{"trigger": "WindowsLiveLogin::getConsentUrl", "contents": "${1:WindowsLiveLogin}::getConsentUrl(${2:\\$offers}, ${2:\\$context=null}, ${4:\\$ru=null}, ${4:\\$market=null})$0"},
		{"trigger": "WindowsLiveLogin::getError", "contents": "${1:WindowsLiveLogin}::getError()$0"},
		{"trigger": "WindowsLiveLogin::getLoginUrl", "contents": "${1:WindowsLiveLogin}::getLoginUrl(${2:\\$context=null}, ${2:\\$market=null})$0"},
		{"trigger": "WindowsLiveLogin::getLogoutUrl", "contents": "${1:WindowsLiveLogin}::getLogoutUrl(${2:\\$market=null})$0"},
		{"trigger": "WindowsLiveLogin::getManageConsentUrl", "contents": "${1:WindowsLiveLogin}::getManageConsentUrl(${2:\\$market=null})$0"},
		{"trigger": "WindowsLiveLogin::getOldSecretExpiry", "contents": "${1:WindowsLiveLogin}::getOldSecretExpiry()$0"},
		{"trigger": "WindowsLiveLogin::getPolicyUrl", "contents": "${1:WindowsLiveLogin}::getPolicyUrl()$0"},
		{"trigger": "WindowsLiveLogin::getRefreshConsentTokenUrl", "contents": "${1:WindowsLiveLogin}::getRefreshConsentTokenUrl(${2:\\$offers}, ${2:\\$refreshtoken}, ${4:\\$ru=null})$0"},
		{"trigger": "WindowsLiveLogin::getReturnUrl", "contents": "${1:WindowsLiveLogin}::getReturnUrl()$0"},
		{"trigger": "WindowsLiveLogin::getSecureUrl", "contents": "${1:WindowsLiveLogin}::getSecureUrl()$0"},
		{"trigger": "WindowsLiveLogin::getSecurityAlgorithm", "contents": "${1:WindowsLiveLogin}::getSecurityAlgorithm()$0"},
		{"trigger": "WindowsLiveLogin::getTimestamp", "contents": "${1:WindowsLiveLogin}::getTimestamp()$0"},
		{"trigger": "WindowsLiveLogin::getTrustedLoginUrl", "contents": "${1:WindowsLiveLogin}::getTrustedLoginUrl()$0"},
		{"trigger": "WindowsLiveLogin::getTrustedLogoutUrl", "contents": "${1:WindowsLiveLogin}::getTrustedLogoutUrl()$0"},
		{"trigger": "WindowsLiveLogin::getTrustedParams", "contents": "${1:WindowsLiveLogin}::getTrustedParams(${2:\\$user}, ${2:\\$retcode=null})$0"},
		{"trigger": "WindowsLiveLogin::getTrustedToken", "contents": "${1:WindowsLiveLogin}::getTrustedToken(${2:\\$user})$0"},
		{"trigger": "WindowsLiveLogin::initFromXml", "contents": "${1:WindowsLiveLogin}::initFromXml(${2:\\$settingsFile})$0"},
		{"trigger": "WindowsLiveLogin::parse", "contents": "${1:WindowsLiveLogin}::parse(${2:\\$input})$0"},
		{"trigger": "WindowsLiveLogin::parseSettings", "contents": "${1:WindowsLiveLogin}::parseSettings(${2:\\$settingsFile})$0"},
		{"trigger": "WindowsLiveLogin::processConsent", "contents": "${1:WindowsLiveLogin}::processConsent(${2:\\$query})$0"},
		{"trigger": "WindowsLiveLogin::processConsentToken", "contents": "${1:WindowsLiveLogin}::processConsentToken(${2:\\$token}, ${2:\\$context=null})$0"},
		{"trigger": "WindowsLiveLogin::processLogin", "contents": "${1:WindowsLiveLogin}::processLogin(${2:\\$query})$0"},
		{"trigger": "WindowsLiveLogin::processToken", "contents": "${1:WindowsLiveLogin}::processToken(${2:\\$token}, ${2:\\$context=null})$0"},
		{"trigger": "WindowsLiveLogin::refreshConsentToken", "contents": "${1:WindowsLiveLogin}::refreshConsentToken(${2:\\$token}, ${2:\\$ru=null})$0"},
		{"trigger": "WindowsLiveLogin::refreshConsentToken2", "contents": "${1:WindowsLiveLogin}::refreshConsentToken2(${2:\\$offers_string}, ${2:\\$refreshtoken}, ${4:\\$ru=null})$0"},
		{"trigger": "WindowsLiveLogin::setAppId", "contents": "${1:WindowsLiveLogin}::setAppId(${2:\\$appid})$0"},
		{"trigger": "WindowsLiveLogin::setBaseUrl", "contents": "${1:WindowsLiveLogin}::setBaseUrl(${2:\\$baseurl})$0"},
		{"trigger": "WindowsLiveLogin::setConsentBaseUrl", "contents": "${1:WindowsLiveLogin}::setConsentBaseUrl(${2:\\$consenturl})$0"},
		{"trigger": "WindowsLiveLogin::setDebug", "contents": "${1:WindowsLiveLogin}::setDebug(${2:\\$debug})$0"},
		{"trigger": "WindowsLiveLogin::setError", "contents": "${1:WindowsLiveLogin}::setError(${2:\\$str})$0"},
		{"trigger": "WindowsLiveLogin::setForceDelAuthNonProvisioned", "contents": "${1:WindowsLiveLogin}::setForceDelAuthNonProvisioned(${2:\\$force_delauth_nonprovisioned})$0"},
		{"trigger": "WindowsLiveLogin::setOldSecret", "contents": "${1:WindowsLiveLogin}::setOldSecret(${2:\\$secret})$0"},
		{"trigger": "WindowsLiveLogin::setOldSecretExpiry", "contents": "${1:WindowsLiveLogin}::setOldSecretExpiry(${2:\\$timestamp})$0"},
		{"trigger": "WindowsLiveLogin::setPolicyUrl", "contents": "${1:WindowsLiveLogin}::setPolicyUrl(${2:\\$policyurl})$0"},
		{"trigger": "WindowsLiveLogin::setReturnUrl", "contents": "${1:WindowsLiveLogin}::setReturnUrl(${2:\\$returnurl})$0"},
		{"trigger": "WindowsLiveLogin::setSecret", "contents": "${1:WindowsLiveLogin}::setSecret(${2:\\$secret})$0"},
		{"trigger": "WindowsLiveLogin::setSecureUrl", "contents": "${1:WindowsLiveLogin}::setSecureUrl(${2:\\$secureurl})$0"},
		{"trigger": "WindowsLiveLogin::setSecurityAlgorithm", "contents": "${1:WindowsLiveLogin}::setSecurityAlgorithm(${2:\\$securityalgorithm})$0"},
		{"trigger": "WindowsLiveLogin::signToken", "contents": "${1:WindowsLiveLogin}::signToken(${2:\\$token}, ${2:\\$signkey=null})$0"},
		{"trigger": "WindowsLiveLogin::u64", "contents": "${1:WindowsLiveLogin}::u64(${2:\\$input})$0"},
		{"trigger": "WindowsLiveLogin::validateToken", "contents": "${1:WindowsLiveLogin}::validateToken(${2:\\$token}, ${2:\\$signkey=null})$0"},
		{"trigger": "_CEventTypeResult::Fetch", "contents": "${1:_CEventTypeResult}::Fetch()$0"},
		{"trigger": "_CEventTypeResult::_CEventTypeResult", "contents": "${1:_CEventTypeResult}::_CEventTypeResult(${2:\\$res}, ${2:\\$arParams = array()})$0"},
		{"trigger": "_CFileTree::ExtractFileFromPath", "contents": "${1:_CFileTree}::ExtractFileFromPath(${2:&\\$path})$0"},
		{"trigger": "_CFileTree::FileExists", "contents": "${1:_CFileTree}::FileExists(${2:\\$file})$0"},
		{"trigger": "_CFileTree::GetNextFile", "contents": "${1:_CFileTree}::GetNextFile()$0"},
		{"trigger": "_CFileTree::GoUp", "contents": "${1:_CFileTree}::GoUp()$0"},
		{"trigger": "_CFileTree::ReadDir", "contents": "${1:_CFileTree}::ReadDir(${2:\\$dir})$0"},
		{"trigger": "_CFileTree::Start", "contents": "${1:_CFileTree}::Start(${2:\\$path='/'})$0"},
		{"trigger": "_CFileTree::__construct", "contents": "${1:_CFileTree}::__construct(${2:\\$in_path='/'})$0"},
		{"trigger": "_CLangDBResult::Fetch", "contents": "${1:_CLangDBResult}::Fetch()$0"},
		{"trigger": "_CLangDBResult::_CLangDBResult", "contents": "${1:_CLangDBResult}::_CLangDBResult(${2:\\$res})$0"},
		{"trigger": "_FilesCmp::cmp_name_asc", "contents": "${1:_FilesCmp}::cmp_name_asc(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "_FilesCmp::cmp_size_desc", "contents": "${1:_FilesCmp}::cmp_size_desc(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "__CControllerPacket::_decode", "contents": "${1:__CControllerPacket}::_decode(${2:&\\$arParameters}, ${2:\\$from ,\\$to})$0"},
		{"trigger": "__CControllerPacketRequest::Check", "contents": "${1:__CControllerPacketRequest}::Check()$0"},
		{"trigger": "__CControllerPacketRequest::InitFromRequest", "contents": "${1:__CControllerPacketRequest}::InitFromRequest()$0"},
		{"trigger": "__CControllerPacketRequest::Internal", "contents": "${1:__CControllerPacketRequest}::Internal()$0"},
		{"trigger": "__CControllerPacketRequest::MakeRequestString", "contents": "${1:__CControllerPacketRequest}::MakeRequestString()$0"},
		{"trigger": "__CControllerPacketRequest::RedirectRequest", "contents": "${1:__CControllerPacketRequest}::RedirectRequest(${2:\\$url})$0"},
		{"trigger": "__CControllerPacketRequest::Send", "contents": "${1:__CControllerPacketRequest}::Send(${2:\\$url}, ${2:\\$page})$0"},
		{"trigger": "__CControllerPacketRequest::Sign", "contents": "${1:__CControllerPacketRequest}::Sign()$0"},
		{"trigger": "__CControllerPacketResponse::Check", "contents": "${1:__CControllerPacketResponse}::Check()$0"},
		{"trigger": "__CControllerPacketResponse::GetResponseBody", "contents": "${1:__CControllerPacketResponse}::GetResponseBody(${2:\\$log = false})$0"},
		{"trigger": "__CControllerPacketResponse::OK", "contents": "${1:__CControllerPacketResponse}::OK()$0"},
		{"trigger": "__CControllerPacketResponse::ParseResult", "contents": "${1:__CControllerPacketResponse}::ParseResult(${2:\\$result})$0"},
		{"trigger": "__CControllerPacketResponse::Send", "contents": "${1:__CControllerPacketResponse}::Send()$0"},
		{"trigger": "__CControllerPacketResponse::Sign", "contents": "${1:__CControllerPacketResponse}::Sign()$0"},
		{"trigger": "__CControllerPacketResponse::_InitFromRequest", "contents": "${1:__CControllerPacketResponse}::_InitFromRequest(${2:\\$oPacket}, ${2:\\$arExclude = array('operation'}, ${4:'arParameters')})$0"},
		{"trigger": "CPerfAccel::CPerfAccel", "contents": "${1:CPerfAccel}::CPerfAccel(${2:\\$enabled}, ${2:\\$cache_ttl}, ${4:\\$max_file_size}, ${4:\\$check_mtime}, ${6:\\$memory_total}, ${6:\\$memory_used}, ${8:\\$cache_limit=-1})$0"},
		{"trigger": "CPerfAccel::GetRecommendations", "contents": "${1:CPerfAccel}::GetRecommendations()$0"},
		{"trigger": "CPerfAccel::IsWorking", "contents": "${1:CPerfAccel}::IsWorking()$0"},
		{"trigger": "CPerfAccel::__construct", "contents": "${1:CPerfAccel}::__construct(${2:\\$enabled}, ${2:\\$cache_ttl}, ${4:\\$max_file_size}, ${4:\\$check_mtime}, ${6:\\$memory_total}, ${6:\\$memory_used}, ${8:\\$cache_limit=-1})$0"},
		{"trigger": "CPerfAccel::unformat", "contents": "${1:CPerfAccel}::unformat(${2:\\$str})$0"},
		{"trigger": "CPerfAccelAPC::CPerfAccelAPC", "contents": "${1:CPerfAccelAPC}::CPerfAccelAPC()$0"},
		{"trigger": "CPerfAccelAPC::GetParams", "contents": "${1:CPerfAccelAPC}::GetParams()$0"},
		{"trigger": "CPerfAccelAPC::__construct", "contents": "${1:CPerfAccelAPC}::__construct()$0"},
		{"trigger": "CPerfAccelEAccel::CPerfAccelEAccel", "contents": "${1:CPerfAccelEAccel}::CPerfAccelEAccel()$0"},
		{"trigger": "CPerfAccelEAccel::GetParams", "contents": "${1:CPerfAccelEAccel}::GetParams()$0"},
		{"trigger": "CPerfAccelEAccel::__construct", "contents": "${1:CPerfAccelEAccel}::__construct()$0"},
		{"trigger": "CPerfAccelWinCache::CPerfAccelWinCache", "contents": "${1:CPerfAccelWinCache}::CPerfAccelWinCache()$0"},
		{"trigger": "CPerfAccelWinCache::GetParams", "contents": "${1:CPerfAccelWinCache}::GetParams()$0"},
		{"trigger": "CPerfAccelWinCache::__construct", "contents": "${1:CPerfAccelWinCache}::__construct()$0"},
		{"trigger": "CPerfAccelXCache::CPerfAccelXCache", "contents": "${1:CPerfAccelXCache}::CPerfAccelXCache()$0"},
		{"trigger": "CPerfAccelXCache::GetParams", "contents": "${1:CPerfAccelXCache}::GetParams()$0"},
		{"trigger": "CPerfAccelXCache::__construct", "contents": "${1:CPerfAccelXCache}::__construct()$0"},
		{"trigger": "CPerfAccelZend::CPerfAccelZend", "contents": "${1:CPerfAccelZend}::CPerfAccelZend()$0"},
		{"trigger": "CPerfAccelZend::GetParams", "contents": "${1:CPerfAccelZend}::GetParams()$0"},
		{"trigger": "CPerfAccelZend::GetRecommendations", "contents": "${1:CPerfAccelZend}::GetRecommendations()$0"},
		{"trigger": "CPerfAccelZend::__construct", "contents": "${1:CPerfAccelZend}::__construct()$0"},
		{"trigger": "CPerfCluster::Add", "contents": "${1:CPerfCluster}::Add(${2:\\$arFields})$0"},
		{"trigger": "CPerfCluster::GetList", "contents": "${1:CPerfCluster}::GetList(${2:\\$arOrder=false}, ${2:\\$arFilter=false}, ${4:\\$arSelect=false})$0"},
		{"trigger": "CPerfCluster::Measure", "contents": "${1:CPerfCluster}::Measure(${2:\\$host}, ${2:\\$port}, ${4:\\$url}, ${4:\\$threads}, ${6:\\$iterations = 3}, ${6:\\$arOptions = array()})$0"},
		{"trigger": "CPerfCluster::Truncate", "contents": "${1:CPerfCluster}::Truncate()$0"},
		{"trigger": "CPerfQuery::_adjust_columns", "contents": "${1:CPerfQuery}::_adjust_columns(${2:\\$arColumns})$0"},
		{"trigger": "CPerfQuery::array_power_set", "contents": "${1:CPerfQuery}::array_power_set(${2:\\$array})$0"},
		{"trigger": "CPerfQuery::find_join", "contents": "${1:CPerfQuery}::find_join(${2:\\$table_name}, ${2:\\$column_name})$0"},
		{"trigger": "CPerfQuery::find_value", "contents": "${1:CPerfQuery}::find_value(${2:\\$table_name}, ${2:\\$column_name})$0"},
		{"trigger": "CPerfQuery::has_where", "contents": "${1:CPerfQuery}::has_where(${2:\\$table_alias = false})$0"},
		{"trigger": "CPerfQuery::parse", "contents": "${1:CPerfQuery}::parse(${2:\\$sql})$0"},
		{"trigger": "CPerfQuery::parse_subqueries", "contents": "${1:CPerfQuery}::parse_subqueries()$0"},
		{"trigger": "CPerfQuery::removeSpaces", "contents": "${1:CPerfQuery}::removeSpaces(${2:\\$str})$0"},
		{"trigger": "CPerfQuery::remove_literals", "contents": "${1:CPerfQuery}::remove_literals(${2:\\$sql})$0"},
		{"trigger": "CPerfQuery::suggest_index", "contents": "${1:CPerfQuery}::suggest_index(${2:\\$table_alias})$0"},
		{"trigger": "CPerfQuery::table_joins", "contents": "${1:CPerfQuery}::table_joins(${2:\\$table_alias})$0"},
		{"trigger": "CPerfQuery::transform2select", "contents": "${1:CPerfQuery}::transform2select(${2:\\$sql})$0"},
		{"trigger": "CPerfQueryFrom::getTableAliases", "contents": "${1:CPerfQueryFrom}::getTableAliases()$0"},
		{"trigger": "CPerfQueryFrom::parse", "contents": "${1:CPerfQueryFrom}::parse(${2:\\$sql})$0"},
		{"trigger": "CPerfQueryJoin::_parse", "contents": "${1:CPerfQueryJoin}::_parse(${2:\\$sql}, ${2:&\\$table}, ${4:&\\$column}, ${4:&\\$const})$0"},
		{"trigger": "CPerfQueryJoin::parse_left", "contents": "${1:CPerfQueryJoin}::parse_left(${2:\\$sql})$0"},
		{"trigger": "CPerfQueryJoin::parse_right", "contents": "${1:CPerfQueryJoin}::parse_right(${2:\\$sql})$0"},
		{"trigger": "CPerfQueryStat::Ban", "contents": "${1:CPerfQueryStat}::Ban(${2:\\$table}, ${2:\\$columns})$0"},
		{"trigger": "CPerfQueryStat::GatherColumnStatByValue", "contents": "${1:CPerfQueryStat}::GatherColumnStatByValue(${2:\\$table}, ${2:\\$column}, ${4:\\$value})$0"},
		{"trigger": "CPerfQueryStat::GatherColumnStatOverall", "contents": "${1:CPerfQueryStat}::GatherColumnStatOverall(${2:\\$table}, ${2:\\$column})$0"},
		{"trigger": "CPerfQueryStat::GatherExpressStat", "contents": "${1:CPerfQueryStat}::GatherExpressStat(${2:\\$table}, ${2:\\$columns}, ${4:\\$q})$0"},
		{"trigger": "CPerfQueryStat::GatherTableStat", "contents": "${1:CPerfQueryStat}::GatherTableStat(${2:\\$table})$0"},
		{"trigger": "CPerfQueryStat::GetTableColumns", "contents": "${1:CPerfQueryStat}::GetTableColumns(${2:\\$table})$0"},
		{"trigger": "CPerfQueryStat::IsBanned", "contents": "${1:CPerfQueryStat}::IsBanned(${2:\\$table}, ${2:\\$columns})$0"},
		{"trigger": "CPerfQueryStat::IsSelective", "contents": "${1:CPerfQueryStat}::IsSelective(${2:\\$table}, ${2:\\$columns}, ${4:\\$q})$0"},
		{"trigger": "CPerfQueryStat::_gather_stat", "contents": "${1:CPerfQueryStat}::_gather_stat(${2:\\$table}, ${2:\\$column}, ${4:\\$value}, ${4:\\$max_size = -1})$0"},
		{"trigger": "CPerfQueryStat::_get_stat", "contents": "${1:CPerfQueryStat}::_get_stat(${2:\\$table}, ${2:\\$column = ''}, ${4:\\$value = ''})$0"},
		{"trigger": "CPerfQueryTable::parse", "contents": "${1:CPerfQueryTable}::parse(${2:\\$sql})$0"},
		{"trigger": "CPerfQueryWhere::__construct", "contents": "${1:CPerfQueryWhere}::__construct(${2:\\$table_aliases_regex})$0"},
		{"trigger": "CPerfQueryWhere::_or2in", "contents": "${1:CPerfQueryWhere}::_or2in(${2:\\$or_match})$0"},
		{"trigger": "CPerfQueryWhere::_remove_braces", "contents": "${1:CPerfQueryWhere}::_remove_braces(${2:\\$sql})$0"},
		{"trigger": "CPerfQueryWhere::parse", "contents": "${1:CPerfQueryWhere}::parse(${2:\\$sql})$0"},
		{"trigger": "CPerfomanceComponent::Clear", "contents": "${1:CPerfomanceComponent}::Clear()$0"},
		{"trigger": "CPerfomanceComponent::GetList", "contents": "${1:CPerfomanceComponent}::GetList(${2:\\$arOrder}, ${2:\\$arFilter}, ${4:\\$bGroup}, ${4:\\$arNavStartParams}, ${6:\\$arSelect})$0"},
		{"trigger": "CPerfomanceError::Clear", "contents": "${1:CPerfomanceError}::Clear()$0"},
		{"trigger": "CPerfomanceError::Delete", "contents": "${1:CPerfomanceError}::Delete(${2:\\$arFilter})$0"},
		{"trigger": "CPerfomanceError::GetList", "contents": "${1:CPerfomanceError}::GetList(${2:\\$arSelect}, ${2:\\$arFilter}, ${4:\\$arOrder}, ${4:\\$bGroup = false})$0"},
		{"trigger": "CPerfomanceHit::Clear", "contents": "${1:CPerfomanceHit}::Clear()$0"},
		{"trigger": "CPerfomanceHit::GetList", "contents": "${1:CPerfomanceHit}::GetList(${2:\\$arOrder}, ${2:\\$arFilter}, ${4:\\$bGroup}, ${4:\\$arNavStartParams}, ${6:\\$arSelect})$0"},
		{"trigger": "CPerfomanceIndexComplete::Add", "contents": "${1:CPerfomanceIndexComplete}::Add(${2:\\$arFields})$0"},
		{"trigger": "CPerfomanceIndexComplete::Delete", "contents": "${1:CPerfomanceIndexComplete}::Delete(${2:\\$ID})$0"},
		{"trigger": "CPerfomanceIndexComplete::DeleteByTableName", "contents": "${1:CPerfomanceIndexComplete}::DeleteByTableName(${2:\\$table}, ${2:\\$columns})$0"},
		{"trigger": "CPerfomanceIndexComplete::GetList", "contents": "${1:CPerfomanceIndexComplete}::GetList(${2:\\$arFilter = array()}, ${2:\\$arOrder = array()})$0"},
		{"trigger": "CPerfomanceIndexComplete::IsBanned", "contents": "${1:CPerfomanceIndexComplete}::IsBanned(${2:\\$table}, ${2:\\$columns})$0"},
		{"trigger": "CPerfomanceIndexSuggest::Add", "contents": "${1:CPerfomanceIndexSuggest}::Add(${2:\\$arFields})$0"},
		{"trigger": "CPerfomanceIndexSuggest::Clear", "contents": "${1:CPerfomanceIndexSuggest}::Clear()$0"},
		{"trigger": "CPerfomanceIndexSuggest::Delete", "contents": "${1:CPerfomanceIndexSuggest}::Delete(${2:\\$ID})$0"},
		{"trigger": "CPerfomanceIndexSuggest::GetList", "contents": "${1:CPerfomanceIndexSuggest}::GetList(${2:\\$arSelect}, ${2:\\$arFilter}, ${4:\\$arOrder})$0"},
		{"trigger": "CPerfomanceIndexSuggest::UpdateStat", "contents": "${1:CPerfomanceIndexSuggest}::UpdateStat(${2:\\$sql_md5}, ${2:\\$count}, ${4:\\$query_time}, ${4:\\$sql_id})$0"},
		{"trigger": "CPerfomanceKeeper::IsActive", "contents": "${1:CPerfomanceKeeper}::IsActive()$0"},
		{"trigger": "CPerfomanceKeeper::OnAfterAfterEpilog", "contents": "${1:CPerfomanceKeeper}::OnAfterAfterEpilog()$0"},
		{"trigger": "CPerfomanceKeeper::OnBeforeAfterEpilog", "contents": "${1:CPerfomanceKeeper}::OnBeforeAfterEpilog()$0"},
		{"trigger": "CPerfomanceKeeper::OnEpilog", "contents": "${1:CPerfomanceKeeper}::OnEpilog()$0"},
		{"trigger": "CPerfomanceKeeper::OnPageStart", "contents": "${1:CPerfomanceKeeper}::OnPageStart()$0"},
		{"trigger": "CPerfomanceKeeper::SetActive", "contents": "${1:CPerfomanceKeeper}::SetActive(${2:\\$bActive = false}, ${2:\\$end_time = 0})$0"},
		{"trigger": "CPerfomanceKeeper::SetPageTimes", "contents": "${1:CPerfomanceKeeper}::SetPageTimes(${2:\\$START_EXEC_CURRENT_TIME}, ${2:&\\$arFields})$0"},
		{"trigger": "CPerfomanceMeasure::GetAccelerator", "contents": "${1:CPerfomanceMeasure}::GetAccelerator()$0"},
		{"trigger": "CPerfomanceMeasure::GetDBMark", "contents": "${1:CPerfomanceMeasure}::GetDBMark(${2:\\$type})$0"},
		{"trigger": "CPerfomanceMeasure::GetPHPCPUMark", "contents": "${1:CPerfomanceMeasure}::GetPHPCPUMark()$0"},
		{"trigger": "CPerfomanceMeasure::GetPHPFilesMark", "contents": "${1:CPerfomanceMeasure}::GetPHPFilesMark()$0"},
		{"trigger": "CPerfomanceMeasure::GetPHPMailMark", "contents": "${1:CPerfomanceMeasure}::GetPHPMailMark()$0"},
		{"trigger": "CPerfomanceSQL::Clear", "contents": "${1:CPerfomanceSQL}::Clear()$0"},
		{"trigger": "CPerfomanceSQL::Format", "contents": "${1:CPerfomanceSQL}::Format(${2:\\$strSql})$0"},
		{"trigger": "CPerfomanceSQL::GetBacktraceList", "contents": "${1:CPerfomanceSQL}::GetBacktraceList(${2:\\$sql_id})$0"},
		{"trigger": "CPerfomanceSQL::GetList", "contents": "${1:CPerfomanceSQL}::GetList(${2:\\$arSelect}, ${2:\\$arFilter}, ${4:\\$arOrder}, ${4:\\$bGroup}, ${6:\\$arNavStartParams = false})$0"},
		{"trigger": "CPerfomanceSQL::_console_explain", "contents": "${1:CPerfomanceSQL}::_console_explain(${2:\\$strSQL})$0"},
		{"trigger": "CPerfomanceSchema::GetChildren", "contents": "${1:CPerfomanceSchema}::GetChildren(${2:\\$table_name})$0"},
		{"trigger": "CPerfomanceSchema::GetParents", "contents": "${1:CPerfomanceSchema}::GetParents(${2:\\$table_name})$0"},
		{"trigger": "CPerfomanceSchema::Init", "contents": "${1:CPerfomanceSchema}::Init()$0"},
		{"trigger": "CPerfomanceSchema::_sort", "contents": "${1:CPerfomanceSchema}::_sort(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CPerfomanceTable::GetIndexes", "contents": "${1:CPerfomanceTable}::GetIndexes(${2:\\$TABLE_NAME = false})$0"},
		{"trigger": "CPerfomanceTable::GetList", "contents": "${1:CPerfomanceTable}::GetList(${2:\\$arSelect}, ${2:\\$arFilter}, ${4:\\$arOrder = array()}, ${4:\\$arNavParams = false})$0"},
		{"trigger": "CPerfomanceTable::GetTableFields", "contents": "${1:CPerfomanceTable}::GetTableFields(${2:\\$TABLE_NAME = false})$0"},
		{"trigger": "CPerfomanceTable::GetUniqueIndexes", "contents": "${1:CPerfomanceTable}::GetUniqueIndexes(${2:\\$TABLE_NAME = false})$0"},
		{"trigger": "CPerfomanceTable::Init", "contents": "${1:CPerfomanceTable}::Init(${2:\\$TABLE_NAME})$0"},
		{"trigger": "CPerfomanceTable::IsExists", "contents": "${1:CPerfomanceTable}::IsExists(${2:\\$TABLE_NAME = false})$0"},
		{"trigger": "CPerfomanceTable::NavQuery", "contents": "${1:CPerfomanceTable}::NavQuery(${2:\\$arNavParams}, ${2:\\$arQuerySelect}, ${4:\\$strTableName}, ${4:\\$strQueryWhere}, ${6:\\$arQueryOrder})$0"},
		{"trigger": "CPerfomanceTableList::Fetch", "contents": "${1:CPerfomanceTableList}::Fetch()$0"},
		{"trigger": "CPerfomanceTableList::GetList", "contents": "${1:CPerfomanceTableList}::GetList(${2:\\$bFull = true})$0"},
		{"trigger": "CPhotogalleryElement::CheckElement", "contents": "${1:CPhotogalleryElement}::CheckElement(${2:\\$ID}, ${2:&\\$arElement}, ${4:&\\$arSection}, ${4:&\\$arGallery})$0"},
		{"trigger": "CPhotogalleryElement::OnAfterIBlockElementAdd", "contents": "${1:CPhotogalleryElement}::OnAfterIBlockElementAdd(${2:\\$res})$0"},
		{"trigger": "CPhotogalleryElement::OnAfterRecalcGalleries", "contents": "${1:CPhotogalleryElement}::OnAfterRecalcGalleries(${2:\\$IBLOCK_ID}, ${2:\\$INDEX})$0"},
		{"trigger": "CPhotogalleryElement::OnBeforeIBlockElementDelete", "contents": "${1:CPhotogalleryElement}::OnBeforeIBlockElementDelete(${2:\\$ID})$0"},
		{"trigger": "CPhotogalleryElement::OnRecalcGalleries", "contents": "${1:CPhotogalleryElement}::OnRecalcGalleries(${2:\\$ID}, ${2:\\$INDEX})$0"},
		{"trigger": "CRatingsComponentsPhotogallery::BeforeIndex", "contents": "${1:CRatingsComponentsPhotogallery}::BeforeIndex(${2:\\$arParams})$0"},
		{"trigger": "CCSVDataSale::CCSVData", "contents": "${1:CCSVDataSale}::CCSVData(${2:\\$fields_type = 'R'}, ${2:\\$first_header = false})$0"},
		{"trigger": "CCSVDataSale::FetchDelimiter", "contents": "${1:CCSVDataSale}::FetchDelimiter()$0"},
		{"trigger": "CCSVDataSale::GetFirstHeader", "contents": "${1:CCSVDataSale}::GetFirstHeader()$0"},
		{"trigger": "CCSVDataSale::LoadFile", "contents": "${1:CCSVDataSale}::LoadFile(${2:\\$filename})$0"},
		{"trigger": "CCSVDataSale::SaveFile", "contents": "${1:CCSVDataSale}::SaveFile(${2:\\$filename}, ${2:\\$arFields})$0"},
		{"trigger": "CCSVDataSale::SetFieldsType", "contents": "${1:CCSVDataSale}::SetFieldsType(${2:\\$fields_type = 'R'})$0"},
		{"trigger": "CCSVDataSale::SetWidthMap", "contents": "${1:CCSVDataSale}::SetWidthMap(${2:\\$arMap})$0"},
		{"trigger": "CSaleAffiliate::Calculate", "contents": "${1:CSaleAffiliate}::Calculate(${2:\\$dateFrom = false}, ${2:\\$dateTo = false}, ${4:\\$datePlanFrom = false}, ${4:\\$datePlanTo = false})$0"},
		{"trigger": "CSaleAffiliate::CheckFields", "contents": "${1:CSaleAffiliate}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleAffiliate::Delete", "contents": "${1:CSaleAffiliate}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSaleAffiliate::GetAffiliate", "contents": "${1:CSaleAffiliate}::GetAffiliate(${2:\\$affiliateID = 0})$0"},
		{"trigger": "CSaleAffiliate::GetList", "contents": "${1:CSaleAffiliate}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleAffiliate::PayAffiliate", "contents": "${1:CSaleAffiliate}::PayAffiliate(${2:\\$affiliate}, ${2:\\$payType}, ${4:&\\$paySum})$0"},
		{"trigger": "CSaleAffiliatePlan::Add", "contents": "${1:CSaleAffiliatePlan}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleAffiliatePlan::CheckAffiliatePlanFunc", "contents": "${1:CSaleAffiliatePlan}::CheckAffiliatePlanFunc(${2:\\$affiliatePlan})$0"},
		{"trigger": "CSaleAffiliatePlan::GetByID", "contents": "${1:CSaleAffiliatePlan}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleAffiliatePlanSection::Add", "contents": "${1:CSaleAffiliatePlanSection}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleAffiliatePlanSection::CheckFields", "contents": "${1:CSaleAffiliatePlanSection}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleAffiliatePlanSection::DeleteByPlan", "contents": "${1:CSaleAffiliatePlanSection}::DeleteByPlan(${2:\\$planID}, ${2:\\$arSectionIDs})$0"},
		{"trigger": "CSaleAffiliatePlanSection::GetList", "contents": "${1:CSaleAffiliatePlanSection}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleAffiliateTier::Add", "contents": "${1:CSaleAffiliateTier}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleAffiliateTier::CheckFields", "contents": "${1:CSaleAffiliateTier}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleAffiliateTier::GetByID", "contents": "${1:CSaleAffiliateTier}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleAffiliateTransact::Add", "contents": "${1:CSaleAffiliateTransact}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleAffiliateTransact::CheckFields", "contents": "${1:CSaleAffiliateTransact}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleAffiliateTransact::GetByID", "contents": "${1:CSaleAffiliateTransact}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleAffiliateTransact::Update", "contents": "${1:CSaleAffiliateTransact}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleAuxiliary::Add", "contents": "${1:CSaleAuxiliary}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleAuxiliary::CheckAccess", "contents": "${1:CSaleAuxiliary}::CheckAccess(${2:\\$userID}, ${2:\\$itemMD5}, ${4:\\$periodLength}, ${4:\\$periodType})$0"},
		{"trigger": "CSaleAuxiliary::Delete", "contents": "${1:CSaleAuxiliary}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSaleAuxiliary::DeleteByTime", "contents": "${1:CSaleAuxiliary}::DeleteByTime(${2:\\$periodLength}, ${2:\\$periodType})$0"},
		{"trigger": "CSaleAuxiliary::DeleteOldAgent", "contents": "${1:CSaleAuxiliary}::DeleteOldAgent(${2:\\$periodLength}, ${2:\\$periodType})$0"},
		{"trigger": "CSaleAuxiliary::GetByParams", "contents": "${1:CSaleAuxiliary}::GetByParams(${2:\\$userID}, ${2:\\$itemMD5})$0"},
		{"trigger": "CSaleAuxiliary::PrepareItemMD54Where", "contents": "${1:CSaleAuxiliary}::PrepareItemMD54Where(${2:\\$val}, ${2:\\$key}, ${4:\\$operation}, ${4:\\$negative}, ${6:\\$field}, ${6:&\\$arField}, ${8:&\\$arFilter})$0"},
		{"trigger": "CSaleBasket::Add", "contents": "${1:CSaleBasket}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleBasket::CheckFields", "contents": "${1:CSaleBasket}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleBasket::DeleteAll", "contents": "${1:CSaleBasket}::DeleteAll(${2:\\$FUSER_ID = 0}, ${2:\\$bIncOrdered = false})$0"},
		{"trigger": "CSaleBasket::GetBasketUserID", "contents": "${1:CSaleBasket}::GetBasketUserID(${2:\\$bSkipFUserInit = False})$0"},
		{"trigger": "CSaleBasket::GetByID", "contents": "${1:CSaleBasket}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleBasket::GetList", "contents": "${1:CSaleBasket}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleBasket::OnOrderProduct", "contents": "${1:CSaleBasket}::OnOrderProduct(${2:\\$callbackFunc = ''}, ${2:\\$module = ''}, ${4:\\$productID = 0}, ${4:\\$quantity = 0})$0"},
		{"trigger": "CSaleBasket::OrderCanceled", "contents": "${1:CSaleBasket}::OrderCanceled(${2:\\$orderID}, ${2:\\$bCancel})$0"},
		{"trigger": "CSaleBasket::OrderDelivery", "contents": "${1:CSaleBasket}::OrderDelivery(${2:\\$orderID}, ${2:\\$bPaid}, ${4:\\$recurringID = 0})$0"},
		{"trigger": "CSaleBasket::ReReadPrice", "contents": "${1:CSaleBasket}::ReReadPrice(${2:\\$callbackFunc = ''}, ${2:\\$module = ''}, ${4:\\$productID = 0}, ${4:\\$quantity = 0}, ${6:\\$renewal = 'N'})$0"},
		{"trigger": "CSaleBasket::Update", "contents": "${1:CSaleBasket}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleBasket::UpdatePrice", "contents": "${1:CSaleBasket}::UpdatePrice(${2:\\$ID}, ${2:\\$callbackFunc = ''}, ${4:\\$module = ''}, ${4:\\$productID = 0}, ${6:\\$quantity = 0}, ${6:\\$renewal = 'N'})$0"},
		{"trigger": "CSaleDelivery::Add", "contents": "${1:CSaleDelivery}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleDelivery::CheckFields", "contents": "${1:CSaleDelivery}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSaleDelivery::DoLoadDelivery", "contents": "${1:CSaleDelivery}::DoLoadDelivery(${2:\\$location}, ${2:\\$locationZip}, ${4:\\$weight}, ${4:\\$price}, ${6:\\$currency}, ${6:\\$siteId = null})$0"},
		{"trigger": "CSaleDelivery::GetByID", "contents": "${1:CSaleDelivery}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleDelivery::GetList", "contents": "${1:CSaleDelivery}::GetList(${2:\\$arOrder = array('SORT' => 'ASC'}, ${2:'NAME' => 'ASC')}, ${4:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${6:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleDelivery::PrepareCurrency4Where", "contents": "${1:CSaleDelivery}::PrepareCurrency4Where(${2:\\$val}, ${2:\\$key}, ${4:\\$operation}, ${4:\\$negative}, ${6:\\$field}, ${6:&\\$arField}, ${8:&\\$arFilter})$0"},
		{"trigger": "CSaleDeliveryHandler::Calculate", "contents": "${1:CSaleDeliveryHandler}::Calculate(${2:\\$STEP}, ${2:\\$SID}, ${4:\\$profile}, ${4:\\$arOrder}, ${6:\\$currency}, ${6:\\$TMP = false}, ${8:\\$SITE_ID = false})$0"},
		{"trigger": "CSaleDeliveryHandler::GetAdminList", "contents": "${1:CSaleDeliveryHandler}::GetAdminList(${2:\\$arSort = array('SORT' => 'ASC')})$0"},
		{"trigger": "CSaleDeliveryHandler::GetBySID", "contents": "${1:CSaleDeliveryHandler}::GetBySID(${2:\\$SID}, ${2:\\$SITE_ID = false})$0"},
		{"trigger": "CSaleDeliveryHandler::GetHandlerCompability", "contents": "${1:CSaleDeliveryHandler}::GetHandlerCompability(${2:\\$arOrder}, ${2:\\$arHandler}, ${4:\\$SITE_ID = SITE_ID})$0"},
		{"trigger": "CSaleDeliveryHandler::Initialize", "contents": "${1:CSaleDeliveryHandler}::Initialize()$0"},
		{"trigger": "CSaleDeliveryHandler::Reset", "contents": "${1:CSaleDeliveryHandler}::Reset(${2:\\$SID})$0"},
		{"trigger": "CSaleDeliveryHandler::Set", "contents": "${1:CSaleDeliveryHandler}::Set(${2:\\$SID}, ${2:\\$arData}, ${4:\\$SITE_ID = false})$0"},
		{"trigger": "CSaleDeliveryHandler::__getRegisteredHandlers", "contents": "${1:CSaleDeliveryHandler}::__getRegisteredHandlers()$0"},
		{"trigger": "CSaleDeliveryHandler::__sortList", "contents": "${1:CSaleDeliveryHandler}::__sortList(${2:&\\$arHandlersList}, ${2:\\$arSort})$0"},
		{"trigger": "CSaleDeliveryHandler::err_mess", "contents": "${1:CSaleDeliveryHandler}::err_mess()$0"},
		{"trigger": "CSaleDiscount::Add", "contents": "${1:CSaleDiscount}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleDiscount::CheckFields", "contents": "${1:CSaleDiscount}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSaleDiscount::DoProcessOrder", "contents": "${1:CSaleDiscount}::DoProcessOrder(${2:&\\$arOrder}, ${2:\\$arOptions}, ${4:&\\$arErrors})$0"},
		{"trigger": "CSaleDiscount::GetDiscountGroupList", "contents": "${1:CSaleDiscount}::GetDiscountGroupList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleDiscount::PrepareCurrency4Where", "contents": "${1:CSaleDiscount}::PrepareCurrency4Where(${2:\\$val}, ${2:\\$key}, ${4:\\$operation}, ${4:\\$negative}, ${6:\\$field}, ${6:&\\$arField}, ${8:&\\$arFilter})$0"},
		{"trigger": "CSaleDiscount::Update", "contents": "${1:CSaleDiscount}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleExport::Add", "contents": "${1:CSaleExport}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleExport::CheckFields", "contents": "${1:CSaleExport}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleExport::ExportOrders2Xml", "contents": "${1:CSaleExport}::ExportOrders2Xml(${2:\\$arFilter = array()}, ${2:\\$nTopCount = 0}, ${4:\\$currency = ''}, ${4:\\$crmMode = false})$0"},
		{"trigger": "CSaleExport::GetList", "contents": "${1:CSaleExport}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleGroupAccessToFlag::Add", "contents": "${1:CSaleGroupAccessToFlag}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleGroupAccessToFlag::DeleteByFlag", "contents": "${1:CSaleGroupAccessToFlag}::DeleteByFlag(${2:\\$ORDER_FLAG})$0"},
		{"trigger": "CSaleGroupAccessToFlag::GetList", "contents": "${1:CSaleGroupAccessToFlag}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleGroupAccessToSite::Add", "contents": "${1:CSaleGroupAccessToSite}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleGroupAccessToSite::CheckFields", "contents": "${1:CSaleGroupAccessToSite}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleGroupAccessToSite::DeleteByGroup", "contents": "${1:CSaleGroupAccessToSite}::DeleteByGroup(${2:\\$GROUP_ID})$0"},
		{"trigger": "CSaleGroupAccessToSite::GetByID", "contents": "${1:CSaleGroupAccessToSite}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleGroupAccessToSite::GetList", "contents": "${1:CSaleGroupAccessToSite}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleHelper::IsAssociativearray", "contents": "${1:CSaleHelper}::IsAssociativearray(${2:\\$ar})$0"},
		{"trigger": "CSaleLang::Add", "contents": "${1:CSaleLang}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleLang::Delete", "contents": "${1:CSaleLang}::Delete(${2:\\$LID})$0"},
		{"trigger": "CSaleLocation::Add", "contents": "${1:CSaleLocation}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleLocation::AddCity", "contents": "${1:CSaleLocation}::AddCity(${2:\\$arFields})$0"},
		{"trigger": "CSaleLocation::CityCheckFields", "contents": "${1:CSaleLocation}::CityCheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSaleLocation::ClearLocationZIP", "contents": "${1:CSaleLocation}::ClearLocationZIP(${2:\\$location})$0"},
		{"trigger": "CSaleLocation::DeleteAll", "contents": "${1:CSaleLocation}::DeleteAll()$0"},
		{"trigger": "CSaleLocation::DeleteCity", "contents": "${1:CSaleLocation}::DeleteCity(${2:\\$ID})$0"},
		{"trigger": "CSaleLocation::GetCityByID", "contents": "${1:CSaleLocation}::GetCityByID(${2:\\$ID})$0"},
		{"trigger": "CSaleLocation::GetCountryLangByID", "contents": "${1:CSaleLocation}::GetCountryLangByID(${2:\\$ID}, ${2:\\$strLang = LANGUAGE_ID})$0"},
		{"trigger": "CSaleLocation::LocationCheckFields", "contents": "${1:CSaleLocation}::LocationCheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSaleLocation::SetLocationZIP", "contents": "${1:CSaleLocation}::SetLocationZIP(${2:\\$location}, ${2:\\$arZipList})$0"},
		{"trigger": "CSaleLocation::UpdateCity", "contents": "${1:CSaleLocation}::UpdateCity(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleLocationGroup::Add", "contents": "${1:CSaleLocationGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleLocationGroup::CheckFields", "contents": "${1:CSaleLocationGroup}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSaleLocationGroup::GetByID", "contents": "${1:CSaleLocationGroup}::GetByID(${2:\\$ID}, ${2:\\$strLang = LANGUAGE_ID})$0"},
		{"trigger": "CSaleLocationGroup::OnLangDelete", "contents": "${1:CSaleLocationGroup}::OnLangDelete(${2:\\$strLang})$0"},
		{"trigger": "CSaleLocationGroup::Update", "contents": "${1:CSaleLocationGroup}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleOrder::Add", "contents": "${1:CSaleOrder}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleOrder::CanUserCancelOrder", "contents": "${1:CSaleOrder}::CanUserCancelOrder(${2:\\$ID}, ${2:\\$arUserGroups = false}, ${4:\\$userID = 0})$0"},
		{"trigger": "CSaleOrder::CanUserUpdateOrder", "contents": "${1:CSaleOrder}::CanUserUpdateOrder(${2:\\$ID}, ${2:\\$arUserGroups = false})$0"},
		{"trigger": "CSaleOrder::CanUserViewOrder", "contents": "${1:CSaleOrder}::CanUserViewOrder(${2:\\$ID}, ${2:\\$arUserGroups = false}, ${4:\\$userID = 0})$0"},
		{"trigger": "CSaleOrder::CheckFields", "contents": "${1:CSaleOrder}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleOrder::Delete", "contents": "${1:CSaleOrder}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSaleOrder::DeliverOrder", "contents": "${1:CSaleOrder}::DeliverOrder(${2:\\$ID}, ${2:\\$val}, ${4:\\$recurringID = 0}, ${4:\\$arAdditionalFields = array()})$0"},
		{"trigger": "CSaleOrder::DoSaveOrder", "contents": "${1:CSaleOrder}::DoSaveOrder(${2:\\$arOrder}, ${2:\\$arAdditionalFields}, ${4:\\$orderId}, ${4:&\\$arErrors}, ${6:\\$arCoupons = array()})$0"},
		{"trigger": "CSaleOrder::GetFilterOperation", "contents": "${1:CSaleOrder}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CSaleOrder::IsLocked", "contents": "${1:CSaleOrder}::IsLocked(${2:\\$ID}, ${2:&\\$lockedBY}, ${4:&\\$dateLock})$0"},
		{"trigger": "CSaleOrder::Lock", "contents": "${1:CSaleOrder}::Lock(${2:\\$ID})$0"},
		{"trigger": "CSaleOrder::OnBeforeCurrencyDelete", "contents": "${1:CSaleOrder}::OnBeforeCurrencyDelete(${2:\\$currency})$0"},
		{"trigger": "CSaleOrder::PayOrder", "contents": "${1:CSaleOrder}::PayOrder(${2:\\$ID}, ${2:\\$val}, ${4:\\$bWithdraw = True}, ${4:\\$bPay = True}, ${6:\\$recurringID = 0}, ${6:\\$arAdditionalFields = array()})$0"},
		{"trigger": "CSaleOrder::PrepareSql", "contents": "${1:CSaleOrder}::PrepareSql(${2:&\\$arFields}, ${2:\\$arOrder}, ${4:&\\$arFilter}, ${4:\\$arGroupBy}, ${6:\\$arSelectFields})$0"},
		{"trigger": "CSaleOrder::StatusOrder", "contents": "${1:CSaleOrder}::StatusOrder(${2:\\$ID}, ${2:\\$val})$0"},
		{"trigger": "CSaleOrder::Update", "contents": "${1:CSaleOrder}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$bDateUpdate = true})$0"},
		{"trigger": "CSaleOrder::__SaleOrderCount", "contents": "${1:CSaleOrder}::__SaleOrderCount(${2:\\$arFilter}, ${2:\\$strCurrency = ''})$0"},
		{"trigger": "CSaleOrderProps::CheckFields", "contents": "${1:CSaleOrderProps}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleOrderProps::DoProcessOrder", "contents": "${1:CSaleOrderProps}::DoProcessOrder(${2:&\\$arOrder}, ${2:\\$arOrderPropsValues}, ${4:&\\$arErrors}, ${4:&\\$arWarnings})$0"},
		{"trigger": "CSaleOrderProps::GetByID", "contents": "${1:CSaleOrderProps}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleOrderProps::GetList", "contents": "${1:CSaleOrderProps}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleOrderProps::Update", "contents": "${1:CSaleOrderProps}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleOrderPropsGroup::Add", "contents": "${1:CSaleOrderPropsGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleOrderPropsGroup::CheckFields", "contents": "${1:CSaleOrderPropsGroup}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleOrderPropsGroup::GetByID", "contents": "${1:CSaleOrderPropsGroup}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleOrderPropsValue::Add", "contents": "${1:CSaleOrderPropsValue}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleOrderPropsValue::CheckFields", "contents": "${1:CSaleOrderPropsValue}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleOrderPropsValue::DeleteByOrder", "contents": "${1:CSaleOrderPropsValue}::DeleteByOrder(${2:\\$orderID})$0"},
		{"trigger": "CSaleOrderPropsValue::GetList", "contents": "${1:CSaleOrderPropsValue}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleOrderPropsValue::Update", "contents": "${1:CSaleOrderPropsValue}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleOrderPropsVariant::Add", "contents": "${1:CSaleOrderPropsVariant}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleOrderPropsVariant::CheckFields", "contents": "${1:CSaleOrderPropsVariant}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleOrderPropsVariant::DeleteAll", "contents": "${1:CSaleOrderPropsVariant}::DeleteAll(${2:\\$ID})$0"},
		{"trigger": "CSaleOrderPropsVariant::GetByValue", "contents": "${1:CSaleOrderPropsVariant}::GetByValue(${2:\\$PropID}, ${2:\\$Value})$0"},
		{"trigger": "CSaleOrderTax::Add", "contents": "${1:CSaleOrderTax}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleOrderTax::CheckFields", "contents": "${1:CSaleOrderTax}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSaleOrderTax::DeleteEx", "contents": "${1:CSaleOrderTax}::DeleteEx(${2:\\$ORDER_ID})$0"},
		{"trigger": "CSaleOrderTax::GetList", "contents": "${1:CSaleOrderTax}::GetList(${2:\\$arOrder = array('TAX_NAME' => 'ASC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleOrderUserProps::Add", "contents": "${1:CSaleOrderUserProps}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleOrderUserProps::CheckFields", "contents": "${1:CSaleOrderUserProps}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleOrderUserProps::Delete", "contents": "${1:CSaleOrderUserProps}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSaleOrderUserProps::GetList", "contents": "${1:CSaleOrderUserProps}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleOrderUserProps::Update", "contents": "${1:CSaleOrderUserProps}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleOrderUserPropsValue::Delete", "contents": "${1:CSaleOrderUserPropsValue}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSaleOrderUserPropsValue::GetList", "contents": "${1:CSaleOrderUserPropsValue}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSalePaySystem::Add", "contents": "${1:CSalePaySystem}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSalePaySystem::CheckFields", "contents": "${1:CSalePaySystem}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSalePaySystem::DoLoadPaySystems", "contents": "${1:CSalePaySystem}::DoLoadPaySystems(${2:\\$personType}, ${2:\\$deliveryId = 0}, ${4:\\$arDeliveryMap = null})$0"},
		{"trigger": "CSalePaySystem::GetByID", "contents": "${1:CSalePaySystem}::GetByID(${2:\\$ID}, ${2:\\$PERSON_TYPE_ID = 0})$0"},
		{"trigger": "CSalePaySystem::GetList", "contents": "${1:CSalePaySystem}::GetList(${2:\\$arOrder = array('SORT'=>'ASC'}, ${2:'NAME'=>'ASC')}, ${4:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${6:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSalePaySystemAction::Add", "contents": "${1:CSalePaySystemAction}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSalePaySystemAction::CheckFields", "contents": "${1:CSalePaySystemAction}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSalePaySystemAction::GetByID", "contents": "${1:CSalePaySystemAction}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSalePaySystemAction::IncludePrePaySystem", "contents": "${1:CSalePaySystemAction}::IncludePrePaySystem(${2:\\$fileName}, ${2:\\$bDoPayAction}, ${4:&\\$arPaySysResult}, ${4:&\\$strPaySysError}, ${6:&\\$strPaySysWarning}, ${6:\\$BASE_LANG_CURRENCY = False}, ${8:\\$ORDER_PRICE = 0.0}, ${8:\\$TAX_PRICE = 0.0}, ${10:\\$DISCOUNT_PRICE = 0.0}, ${20:\\$DELIVERY_PRICE = 0.0})$0"},
		{"trigger": "CSalePaySystemAction::SerializeParams", "contents": "${1:CSalePaySystemAction}::SerializeParams(${2:\\$arParams})$0"},
		{"trigger": "CSalePaySystemAction::UnSerializeParams", "contents": "${1:CSalePaySystemAction}::UnSerializeParams(${2:\\$strParams})$0"},
		{"trigger": "CSalePersonType::Add", "contents": "${1:CSalePersonType}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSalePersonType::CheckFields", "contents": "${1:CSalePersonType}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID=false})$0"},
		{"trigger": "CSalePersonType::DoProcessOrder", "contents": "${1:CSalePersonType}::DoProcessOrder(${2:&\\$arOrder}, ${2:\\$personTypeId}, ${4:&\\$arErrors})$0"},
		{"trigger": "CSalePersonType::GetList", "contents": "${1:CSalePersonType}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSalePersonType::SelectBox", "contents": "${1:CSalePersonType}::SelectBox(${2:\\$sFieldName}, ${2:\\$sValue}, ${4:\\$sDefaultValue = ''}, ${4:\\$bFullName = True}, ${6:\\$JavaFunc = ''}, ${6:\\$sAddParams = ''})$0"},
		{"trigger": "CSaleProduct::GetBestSellerList", "contents": "${1:CSaleProduct}::GetBestSellerList(${2:\\$by = 'AMOUNT'}, ${2:\\$arFilter = array()}, ${4:\\$arOrderFilter = array()}, ${4:\\$limit = 0})$0"},
		{"trigger": "CSaleProduct::GetProductList", "contents": "${1:CSaleProduct}::GetProductList(${2:\\$ID}, ${2:\\$minCNT}, ${4:\\$limit})$0"},
		{"trigger": "CSaleRecurring::Add", "contents": "${1:CSaleRecurring}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleRecurring::AgentCheckRecurring", "contents": "${1:CSaleRecurring}::AgentCheckRecurring()$0"},
		{"trigger": "CSaleRecurring::CheckRecurring", "contents": "${1:CSaleRecurring}::CheckRecurring()$0"},
		{"trigger": "CSaleRecurring::Delete", "contents": "${1:CSaleRecurring}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSaleRecurring::ExecuteCallbackFunction", "contents": "${1:CSaleRecurring}::ExecuteCallbackFunction(${2:\\$callbackFunc = ''}, ${2:\\$module = ''}, ${4:\\$productID = 0})$0"},
		{"trigger": "CSaleRecurring::GetList", "contents": "${1:CSaleRecurring}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleRecurring::OnCurrencyDelete", "contents": "${1:CSaleRecurring}::OnCurrencyDelete(${2:\\$Currency})$0"},
		{"trigger": "CSaleRecurring::Update", "contents": "${1:CSaleRecurring}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleStatus::CheckFields", "contents": "${1:CSaleStatus}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = ''})$0"},
		{"trigger": "CSaleStatus::Delete", "contents": "${1:CSaleStatus}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSaleStatus::GetByID", "contents": "${1:CSaleStatus}::GetByID(${2:\\$ID}, ${2:\\$strLang = LANGUAGE_ID})$0"},
		{"trigger": "CSaleTax::Add", "contents": "${1:CSaleTax}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleTax::AddExempt", "contents": "${1:CSaleTax}::AddExempt(${2:\\$arFields})$0"},
		{"trigger": "CSaleTax::DeleteExempt", "contents": "${1:CSaleTax}::DeleteExempt(${2:\\$arFields})$0"},
		{"trigger": "CSaleTax::GetByID", "contents": "${1:CSaleTax}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleTax::GetExemptList", "contents": "${1:CSaleTax}::GetExemptList(${2:\\$arFilter = array()})$0"},
		{"trigger": "CSaleTaxRate::Add", "contents": "${1:CSaleTaxRate}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleTaxRate::CheckFields", "contents": "${1:CSaleTaxRate}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSaleTaxRate::GetByID", "contents": "${1:CSaleTaxRate}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleTaxRate::SetTaxRateLocation", "contents": "${1:CSaleTaxRate}::SetTaxRateLocation(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleUser::Add", "contents": "${1:CSaleUser}::Add()$0"},
		{"trigger": "CSaleUser::CheckFields", "contents": "${1:CSaleUser}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleUser::DeleteOld", "contents": "${1:CSaleUser}::DeleteOld(${2:\\$nDays})$0"},
		{"trigger": "CSaleUser::GetList", "contents": "${1:CSaleUser}::GetList(${2:\\$arFilter})$0"},
		{"trigger": "CSaleUser::OnUserDelete", "contents": "${1:CSaleUser}::OnUserDelete(${2:\\$userID})$0"},
		{"trigger": "CSaleUser::Update", "contents": "${1:CSaleUser}::Update(${2:\\$ID})$0"},
		{"trigger": "CSaleUser::_Add", "contents": "${1:CSaleUser}::_Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleUserAccount::CheckFields", "contents": "${1:CSaleUserAccount}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleUserAccount::DoPayOrderFromAccount", "contents": "${1:CSaleUserAccount}::DoPayOrderFromAccount(${2:\\$userId}, ${2:\\$currency}, ${4:\\$orderId}, ${4:\\$orderSum}, ${6:\\$arOptions}, ${6:&\\$arErrors})$0"},
		{"trigger": "CSaleUserAccount::GetByUserID", "contents": "${1:CSaleUserAccount}::GetByUserID(${2:\\$userID}, ${2:\\$currency})$0"},
		{"trigger": "CSaleUserAccount::OnBeforeCurrencyDelete", "contents": "${1:CSaleUserAccount}::OnBeforeCurrencyDelete(${2:\\$Currency})$0"},
		{"trigger": "CSaleUserAccount::OnUserDelete", "contents": "${1:CSaleUserAccount}::OnUserDelete(${2:\\$userID})$0"},
		{"trigger": "CSaleUserAccount::Pay", "contents": "${1:CSaleUserAccount}::Pay(${2:\\$userID}, ${2:\\$paySum}, ${4:\\$payCurrency}, ${4:\\$orderID = 0}, ${6:\\$useCC = True})$0"},
		{"trigger": "CSaleUserAccount::UnLockByID", "contents": "${1:CSaleUserAccount}::UnLockByID(${2:\\$ID})$0"},
		{"trigger": "CSaleUserAccount::Update", "contents": "${1:CSaleUserAccount}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleUserCards::Add", "contents": "${1:CSaleUserCards}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSaleUserCards::CheckFields", "contents": "${1:CSaleUserCards}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleUserCards::CryptData", "contents": "${1:CSaleUserCards}::CryptData(${2:\\$data}, ${2:\\$type})$0"},
		{"trigger": "CSaleUserCards::GetByID", "contents": "${1:CSaleUserCards}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSaleUserCards::OnUserDelete", "contents": "${1:CSaleUserCards}::OnUserDelete(${2:\\$UserID})$0"},
		{"trigger": "CSaleUserCards::Update", "contents": "${1:CSaleUserCards}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSaleUserTransact::CheckFields", "contents": "${1:CSaleUserTransact}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSaleUserTransact::DeleteByOrder", "contents": "${1:CSaleUserTransact}::DeleteByOrder(${2:\\$OrderID})$0"},
		{"trigger": "CSaleUserTransact::GetList", "contents": "${1:CSaleUserTransact}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSaleUserTransact::Update", "contents": "${1:CSaleUserTransact}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSearch::CSearch", "contents": "${1:CSearch}::CSearch(${2:\\$strQuery=false}, ${2:\\$LID=false}, ${4:\\$MODULE_ID=false}, ${4:\\$ITEM_ID=false}, ${6:\\$PARAM1=false}, ${6:\\$PARAM2=false}, ${8:\\$aSort=array()}, ${8:\\$aParamsEx=array()}, ${10:\\$bTagsCloud = false})$0"},
		{"trigger": "CSearch::ChangeIndex", "contents": "${1:CSearch}::ChangeIndex(${2:\\$MODULE_ID}, ${2:\\$arFields}, ${4:\\$ITEM_ID=false}, ${4:\\$PARAM1=false}, ${6:\\$PARAM2=false}, ${6:\\$SITE_ID=false})$0"},
		{"trigger": "CSearch::ChangePermission", "contents": "${1:CSearch}::ChangePermission(${2:\\$MODULE_ID}, ${2:\\$arGroups}, ${4:\\$ITEM_ID=false}, ${4:\\$PARAM1=false}, ${6:\\$PARAM2=false}, ${6:\\$SITE_ID=false}, ${8:\\$PARAMS=false})$0"},
		{"trigger": "CSearch::ChangeSite", "contents": "${1:CSearch}::ChangeSite(${2:\\$MODULE_ID}, ${2:\\$arSite}, ${4:\\$ITEM_ID=false}, ${4:\\$PARAM1=false}, ${6:\\$PARAM2=false}, ${6:\\$SITE_ID=false})$0"},
		{"trigger": "CSearch::CheckPath", "contents": "${1:CSearch}::CheckPath(${2:\\$path})$0"},
		{"trigger": "CSearch::CheckPermissions", "contents": "${1:CSearch}::CheckPermissions(${2:\\$FIELD = 'sc.ID'})$0"},
		{"trigger": "CSearch::CleanFreqCache", "contents": "${1:CSearch}::CleanFreqCache(${2:\\$ID})$0"},
		{"trigger": "CSearch::DBNavStart", "contents": "${1:CSearch}::DBNavStart()$0"},
		{"trigger": "CSearch::DeleteForReindex", "contents": "${1:CSearch}::DeleteForReindex(${2:\\$MODULE_ID})$0"},
		{"trigger": "CSearch::DeleteIndex", "contents": "${1:CSearch}::DeleteIndex(${2:\\$MODULE_ID}, ${2:\\$ITEM_ID=false}, ${4:\\$PARAM1=false}, ${4:\\$PARAM2=false}, ${6:\\$SITE_ID=false})$0"},
		{"trigger": "CSearch::DeleteOld", "contents": "${1:CSearch}::DeleteOld(${2:\\$SESS_ID}, ${2:\\$MODULE_ID=''}, ${4:\\$SITE_ID=''})$0"},
		{"trigger": "CSearch::Fetch", "contents": "${1:CSearch}::Fetch()$0"},
		{"trigger": "CSearch::FormatDateString", "contents": "${1:CSearch}::FormatDateString(${2:\\$strField})$0"},
		{"trigger": "CSearch::FormatLimit", "contents": "${1:CSearch}::FormatLimit(${2:\\$strSql}, ${2:\\$limit})$0"},
		{"trigger": "CSearch::GetFilterMD5", "contents": "${1:CSearch}::GetFilterMD5()$0"},
		{"trigger": "CSearch::GetFreqStatistics", "contents": "${1:CSearch}::GetFreqStatistics(${2:\\$lang_id}, ${2:\\$arStem}, ${4:\\$site_id=''})$0"},
		{"trigger": "CSearch::GetGroupCached", "contents": "${1:CSearch}::GetGroupCached()$0"},
		{"trigger": "CSearch::Index", "contents": "${1:CSearch}::Index(${2:\\$MODULE_ID}, ${2:\\$ITEM_ID}, ${4:\\$arFields}, ${4:\\$bOverWrite=false}, ${6:\\$SEARCH_SESS_ID=''})$0"},
		{"trigger": "CSearch::IndexTitle", "contents": "${1:CSearch}::IndexTitle(${2:\\$arLID}, ${2:\\$ID}, ${4:\\$sTitle})$0"},
		{"trigger": "CSearch::KillEntities", "contents": "${1:CSearch}::KillEntities(${2:\\$str})$0"},
		{"trigger": "CSearch::KillTags", "contents": "${1:CSearch}::KillTags(${2:\\$str})$0"},
		{"trigger": "CSearch::MakeSQL", "contents": "${1:CSearch}::MakeSQL(${2:\\$query}, ${2:\\$strSqlWhere}, ${4:\\$strSort}, ${4:\\$bIncSites}, ${6:\\$bStem})$0"},
		{"trigger": "CSearch::NavStart", "contents": "${1:CSearch}::NavStart(${2:\\$nPageSize=0}, ${2:\\$bShowAll=true}, ${4:\\$iNumPage=false})$0"},
		{"trigger": "CSearch::OnChangeFile", "contents": "${1:CSearch}::OnChangeFile(${2:\\$path}, ${2:\\$site})$0"},
		{"trigger": "CSearch::OnChangeFilePermissions", "contents": "${1:CSearch}::OnChangeFilePermissions(${2:\\$path}, ${2:\\$permission = array()}, ${4:\\$old_permission = array()}, ${4:\\$arGroups = false})$0"},
		{"trigger": "CSearch::OnGroupDelete", "contents": "${1:CSearch}::OnGroupDelete(${2:\\$ID})$0"},
		{"trigger": "CSearch::OnLangDelete", "contents": "${1:CSearch}::OnLangDelete(${2:\\$lang})$0"},
		{"trigger": "CSearch::PrepareSearchResult", "contents": "${1:CSearch}::PrepareSearchResult(${2:\\$str})$0"},
		{"trigger": "CSearch::QueryMnogoSearch", "contents": "${1:CSearch}::QueryMnogoSearch(${2:&\\$xml})$0"},
		{"trigger": "CSearch::ReIndexAll", "contents": "${1:CSearch}::ReIndexAll(${2:\\$bFull = false}, ${2:\\$max_execution_time = 0}, ${4:\\$NS = array()}, ${4:\\$clear_suggest = false})$0"},
		{"trigger": "CSearch::RecurseIndex", "contents": "${1:CSearch}::RecurseIndex(${2:\\$path=array()}, ${2:\\$max_execution_time = 0}, ${4:&\\$NS})$0"},
		{"trigger": "CSearch::RegisterStem", "contents": "${1:CSearch}::RegisterStem(${2:\\$stem})$0"},
		{"trigger": "CSearch::ReindexFile", "contents": "${1:CSearch}::ReindexFile(${2:\\$path}, ${2:\\$SEARCH_SESS_ID=''})$0"},
		{"trigger": "CSearch::ReindexLock", "contents": "${1:CSearch}::ReindexLock()$0"},
		{"trigger": "CSearch::ReindexModule", "contents": "${1:CSearch}::ReindexModule(${2:\\$MODULE_ID}, ${2:\\$bFull=false})$0"},
		{"trigger": "CSearch::RemovePHP", "contents": "${1:CSearch}::RemovePHP(${2:\\$str})$0"},
		{"trigger": "CSearch::Repl", "contents": "${1:CSearch}::Repl(${2:\\$strCond}, ${2:\\$strType}, ${4:\\$strWh})$0"},
		{"trigger": "CSearch::Search", "contents": "${1:CSearch}::Search(${2:\\$arParams}, ${2:\\$aSort=array()}, ${4:\\$aParamsEx=array()}, ${4:\\$bTagsCloud = false})$0"},
		{"trigger": "CSearch::SetContentItemGroups", "contents": "${1:CSearch}::SetContentItemGroups(${2:\\$index_id}, ${2:\\$arGroups})$0"},
		{"trigger": "CSearch::SetContentItemParams", "contents": "${1:CSearch}::SetContentItemParams(${2:\\$index_id}, ${2:\\$arParams})$0"},
		{"trigger": "CSearch::SetOptions", "contents": "${1:CSearch}::SetOptions(${2:\\$arOptions})$0"},
		{"trigger": "CSearch::StemIndex", "contents": "${1:CSearch}::StemIndex(${2:\\$arLID}, ${2:\\$ID}, ${4:\\$sContent})$0"},
		{"trigger": "CSearch::TagsIndex", "contents": "${1:CSearch}::TagsIndex(${2:\\$arLID}, ${2:\\$ID}, ${4:\\$sContent})$0"},
		{"trigger": "CSearch::Update", "contents": "${1:CSearch}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSearch::__PrepareFilter", "contents": "${1:CSearch}::__PrepareFilter(${2:\\$arFilter}, ${2:&\\$bIncSites}, ${4:\\$strSearchContentAlias='sc.'})$0"},
		{"trigger": "CSearch::__PrepareSort", "contents": "${1:CSearch}::__PrepareSort(${2:\\$aSort=array()}, ${2:\\$strSearchContentAlias='sc.'}, ${4:\\$bTagsCloud = false})$0"},
		{"trigger": "CSearch::__construct", "contents": "${1:CSearch}::__construct(${2:\\$strQuery=false}, ${2:\\$SITE_ID=false}, ${4:\\$MODULE_ID=false}, ${4:\\$ITEM_ID=false}, ${6:\\$PARAM1=false}, ${6:\\$PARAM2=false}, ${8:\\$aSort=array()}, ${8:\\$aParamsEx=array()}, ${10:\\$bTagsCloud = false})$0"},
		{"trigger": "CSearch::normdev", "contents": "${1:CSearch}::normdev(${2:\\$words_count})$0"},
		{"trigger": "CSearch::stddev", "contents": "${1:CSearch}::stddev(${2:\\$arValues})$0"},
		{"trigger": "CSearch::tagsMakeSQL", "contents": "${1:CSearch}::tagsMakeSQL(${2:\\$query}, ${2:\\$strSqlWhere}, ${4:\\$strSort}, ${4:\\$bIncSites}, ${6:\\$bStem}, ${6:\\$limit = 100})$0"},
		{"trigger": "CSearchCallback::Index", "contents": "${1:CSearchCallback}::Index(${2:\\$arFields})$0"},
		{"trigger": "CSearchCustomRank::Add", "contents": "${1:CSearchCustomRank}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSearchCustomRank::CheckFields", "contents": "${1:CSearchCustomRank}::CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CSearchCustomRank::Delete", "contents": "${1:CSearchCustomRank}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSearchCustomRank::GetByID", "contents": "${1:CSearchCustomRank}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSearchCustomRank::GetList", "contents": "${1:CSearchCustomRank}::GetList(${2:\\$aSort=array()}, ${2:\\$aFilter=array()})$0"},
		{"trigger": "CSearchCustomRank::ModulesList", "contents": "${1:CSearchCustomRank}::ModulesList()$0"},
		{"trigger": "CSearchCustomRank::ModulesSelectBox", "contents": "${1:CSearchCustomRank}::ModulesSelectBox(${2:\\$sFieldName}, ${2:\\$sValue}, ${4:\\$sDefaultValue=''}, ${4:\\$sFuncName=''}, ${6:\\$field='class=\\'typeselect\\''})$0"},
		{"trigger": "CSearchCustomRank::NextUpdate", "contents": "${1:CSearchCustomRank}::NextUpdate()$0"},
		{"trigger": "CSearchCustomRank::StartUpdate", "contents": "${1:CSearchCustomRank}::StartUpdate()$0"},
		{"trigger": "CSearchCustomRank::Update", "contents": "${1:CSearchCustomRank}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSearchCustomRank::__GetParam", "contents": "${1:CSearchCustomRank}::__GetParam(${2:\\$lang}, ${2:\\$site_id}, ${4:\\$module_id=false}, ${4:\\$param1=false}, ${6:\\$param2=false}, ${6:\\$item_id=false})$0"},
		{"trigger": "CSearchItem::Fetch", "contents": "${1:CSearchItem}::Fetch()$0"},
		{"trigger": "CSearchItem::GetList", "contents": "${1:CSearchItem}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()}, ${4:\\$arSelect = array()})$0"},
		{"trigger": "CSearchParameters::AddFilterParams", "contents": "${1:CSearchParameters}::AddFilterParams(${2:&\\$arComponentParameters}, ${2:\\$arCurrentValues}, ${4:\\$name}, ${4:\\$parent}, ${6:\\$MULTIPLE='Y'})$0"},
		{"trigger": "CSearchParameters::ConvertParamsToFilter", "contents": "${1:CSearchParameters}::ConvertParamsToFilter(${2:\\$arParams}, ${2:\\$strFilterParamName})$0"},
		{"trigger": "CSearchParameters::GetFilterDropDown", "contents": "${1:CSearchParameters}::GetFilterDropDown(${2:\\$bFilter = false})$0"},
		{"trigger": "CSearchParameters::GetModulesList", "contents": "${1:CSearchParameters}::GetModulesList()$0"},
		{"trigger": "CSearchParameters::_blog", "contents": "${1:CSearchParameters}::_blog(${2:\\$arParam})$0"},
		{"trigger": "CSearchParameters::_forum", "contents": "${1:CSearchParameters}::_forum(${2:\\$arParam})$0"},
		{"trigger": "CSearchParameters::_iblock", "contents": "${1:CSearchParameters}::_iblock(${2:\\$arParam}, ${2:\\$strFILTER})$0"},
		{"trigger": "CSearchParameters::_main", "contents": "${1:CSearchParameters}::_main(${2:\\$arParam})$0"},
		{"trigger": "CSearchParameters::_socialnetwork", "contents": "${1:CSearchParameters}::_socialnetwork(${2:\\$arParam})$0"},
		{"trigger": "CSearchParameters::_socialnetwork_user", "contents": "${1:CSearchParameters}::_socialnetwork_user(${2:\\$arParam})$0"},
		{"trigger": "CSearchQuery::BuildWhereClause", "contents": "${1:CSearchQuery}::BuildWhereClause(${2:\\$word})$0"},
		{"trigger": "CSearchQuery::CSearchQuery", "contents": "${1:CSearchQuery}::CSearchQuery(${2:\\$default_query_type = 'and'}, ${2:\\$rus_bool_lang = 'yes'}, ${4:\\$m_casematch = 0}, ${4:\\$site_id = ''})$0"},
		{"trigger": "CSearchQuery::CutKav", "contents": "${1:CSearchQuery}::CutKav(${2:\\$query})$0"},
		{"trigger": "CSearchQuery::GetQueryString", "contents": "${1:CSearchQuery}::GetQueryString(${2:\\$fields}, ${2:\\$query}, ${4:\\$bTagsSearch = false}, ${4:\\$bUseStemming = true}, ${6:\\$bErrorOnEmptyStem = false})$0"},
		{"trigger": "CSearchQuery::ParseQ", "contents": "${1:CSearchQuery}::ParseQ(${2:\\$q})$0"},
		{"trigger": "CSearchQuery::ParseStr", "contents": "${1:CSearchQuery}::ParseStr(${2:\\$qwe})$0"},
		{"trigger": "CSearchQuery::PrepareQuery", "contents": "${1:CSearchQuery}::PrepareQuery(${2:\\$q})$0"},
		{"trigger": "CSearchQuery::StemQuery", "contents": "${1:CSearchQuery}::StemQuery(${2:\\$q}, ${2:\\$lang='en'})$0"},
		{"trigger": "CSearchQuery::StemWord", "contents": "${1:CSearchQuery}::StemWord(${2:\\$w})$0"},
		{"trigger": "CSearchQuery::__construct", "contents": "${1:CSearchQuery}::__construct(${2:\\$default_query_type = 'and'}, ${2:\\$rus_bool_lang = 'yes'}, ${4:\\$m_casematch = 0}, ${4:\\$site_id = ''})$0"},
		{"trigger": "CSearchSQLHelper::_CallbackPARAMS", "contents": "${1:CSearchSQLHelper}::_CallbackPARAMS(${2:\\$field_name}, ${2:\\$operation}, ${4:\\$field_value})$0"},
		{"trigger": "CSearchSQLHelper::_CallbackURL", "contents": "${1:CSearchSQLHelper}::_CallbackURL(${2:\\$field_name}, ${2:\\$operation}, ${4:\\$field_value})$0"},
		{"trigger": "CSearchSQLHelper::__construct", "contents": "${1:CSearchSQLHelper}::__construct(${2:\\$strSearchContentAlias})$0"},
		{"trigger": "CSearchStatistic::CSearchStatistic", "contents": "${1:CSearchStatistic}::CSearchStatistic(${2:\\$phrase = ''}, ${2:\\$tags = ''})$0"},
		{"trigger": "CSearchStatistic::CleanUpAgent", "contents": "${1:CSearchStatistic}::CleanUpAgent()$0"},
		{"trigger": "CSearchStatistic::GetCurrentURL", "contents": "${1:CSearchStatistic}::GetCurrentURL()$0"},
		{"trigger": "CSearchStatistic::GetList", "contents": "${1:CSearchStatistic}::GetList(${2:\\$arOrder = false}, ${2:\\$arFilter = false}, ${4:\\$arSelect = false}, ${4:\\$bGroup = false})$0"},
		{"trigger": "CSearchStatistic::IsActive", "contents": "${1:CSearchStatistic}::IsActive()$0"},
		{"trigger": "CSearchStatistic::OnEpilog", "contents": "${1:CSearchStatistic}::OnEpilog()$0"},
		{"trigger": "CSearchStatistic::PhraseStat", "contents": "${1:CSearchStatistic}::PhraseStat(${2:\\$result_count = 0}, ${2:\\$page_num = 0})$0"},
		{"trigger": "CSearchStatistic::SetActive", "contents": "${1:CSearchStatistic}::SetActive(${2:\\$bActive = false})$0"},
		{"trigger": "CSearchStatistic::__construct", "contents": "${1:CSearchStatistic}::__construct(${2:\\$phrase = ''}, ${2:\\$tags = ''})$0"},
		{"trigger": "CSearchSuggest::CSearchSuggest", "contents": "${1:CSearchSuggest}::CSearchSuggest(${2:\\$strFilterMD5 = ''}, ${2:\\$phrase = ''})$0"},
		{"trigger": "CSearchSuggest::CleanUpAgent", "contents": "${1:CSearchSuggest}::CleanUpAgent()$0"},
		{"trigger": "CSearchSuggest::GetList", "contents": "${1:CSearchSuggest}::GetList(${2:\\$nTopCount})$0"},
		{"trigger": "CSearchSuggest::SetResultCount", "contents": "${1:CSearchSuggest}::SetResultCount(${2:\\$result_count})$0"},
		{"trigger": "CSearchSuggest::__construct", "contents": "${1:CSearchSuggest}::__construct(${2:\\$strFilterMD5 = ''}, ${2:\\$phrase = ''})$0"},
		{"trigger": "CSearchTags::CleanCache", "contents": "${1:CSearchTags}::CleanCache(${2:\\$arTags = ''}, ${2:\\$content_id = false})$0"},
		{"trigger": "CSearchTags::GetList", "contents": "${1:CSearchTags}::GetList(${2:\\$arSelect = array()}, ${2:\\$arFilter = array()}, ${4:\\$arOrder = array()}, ${4:\\$limit = 100})$0"},
		{"trigger": "CSearchTitle::Fetch", "contents": "${1:CSearchTitle}::Fetch()$0"},
		{"trigger": "CSearchTitle::MakeFilterUrl", "contents": "${1:CSearchTitle}::MakeFilterUrl(${2:\\$prefix}, ${2:\\$arFilter})$0"},
		{"trigger": "CSearchTitle::Search", "contents": "${1:CSearchTitle}::Search(${2:\\$phrase = ''}, ${2:\\$nTopCount = 5}, ${4:\\$arParams = array()}, ${4:\\$bNotFilter = false}, ${6:\\$order = ''})$0"},
		{"trigger": "CSearchTitle::__construct", "contents": "${1:CSearchTitle}::__construct()$0"},
		{"trigger": "CSearchUser::AddGroups", "contents": "${1:CSearchUser}::AddGroups(${2:\\$arGroups})$0"},
		{"trigger": "CSearchUser::CheckCurrentUserGroups", "contents": "${1:CSearchUser}::CheckCurrentUserGroups()$0"},
		{"trigger": "CSearchUser::DeleteByUserID", "contents": "${1:CSearchUser}::DeleteByUserID(${2:\\$USER_ID})$0"},
		{"trigger": "CSearchUser::DeleteGroups", "contents": "${1:CSearchUser}::DeleteGroups()$0"},
		{"trigger": "CSearchUser::IsGroupsExists", "contents": "${1:CSearchUser}::IsGroupsExists()$0"},
		{"trigger": "CSearchUser::OnAfterUserUpdate", "contents": "${1:CSearchUser}::OnAfterUserUpdate(${2:&\\$arFields})$0"},
		{"trigger": "CSearchUser::__construct", "contents": "${1:CSearchUser}::__construct(${2:\\$user_id})$0"},
		{"trigger": "CSiteMap::Create", "contents": "${1:CSiteMap}::Create(${2:\\$site_id}, ${2:\\$max_execution_time}, ${4:\\$NS}, ${4:\\$arOptions = array()})$0"},
		{"trigger": "CSiteMap::Fetch", "contents": "${1:CSiteMap}::Fetch()$0"},
		{"trigger": "CSiteMap::GetURLs", "contents": "${1:CSiteMap}::GetURLs(${2:\\$site_id}, ${2:\\$ID}, ${4:\\$limit=0})$0"},
		{"trigger": "CSiteMap::LocationEncode", "contents": "${1:CSiteMap}::LocationEncode(${2:\\$str})$0"},
		{"trigger": "CSiteMap::TimeEncode", "contents": "${1:CSiteMap}::TimeEncode(${2:\\$iTime})$0"},
		{"trigger": "CSiteMap::URLEncode", "contents": "${1:CSiteMap}::URLEncode(${2:\\$str}, ${2:\\$charset})$0"},
		{"trigger": "CSecurityAntiVirus::Analyze", "contents": "${1:CSecurityAntiVirus}::Analyze(${2:&\\$content})$0"},
		{"trigger": "CSecurityAntiVirus::CSecurityAntiVirus", "contents": "${1:CSecurityAntiVirus}::CSecurityAntiVirus(${2:\\$place = 'body'})$0"},
		{"trigger": "CSecurityAntiVirus::CreateTrace", "contents": "${1:CSecurityAntiVirus}::CreateTrace()$0"},
		{"trigger": "CSecurityAntiVirus::GetAuditTypes", "contents": "${1:CSecurityAntiVirus}::GetAuditTypes()$0"},
		{"trigger": "CSecurityAntiVirus::GetWhiteList", "contents": "${1:CSecurityAntiVirus}::GetWhiteList()$0"},
		{"trigger": "CSecurityAntiVirus::IsActive", "contents": "${1:CSecurityAntiVirus}::IsActive()$0"},
		{"trigger": "CSecurityAntiVirus::OnAfterEpilog", "contents": "${1:CSecurityAntiVirus}::OnAfterEpilog()$0"},
		{"trigger": "CSecurityAntiVirus::OnEndBufferContent", "contents": "${1:CSecurityAntiVirus}::OnEndBufferContent(${2:&\\$content})$0"},
		{"trigger": "CSecurityAntiVirus::OnPageStart", "contents": "${1:CSecurityAntiVirus}::OnPageStart()$0"},
		{"trigger": "CSecurityAntiVirus::PHPShutdown", "contents": "${1:CSecurityAntiVirus}::PHPShutdown()$0"},
		{"trigger": "CSecurityAntiVirus::SetActive", "contents": "${1:CSecurityAntiVirus}::SetActive(${2:\\$bActive = false})$0"},
		{"trigger": "CSecurityAntiVirus::UpdateWhiteList", "contents": "${1:CSecurityAntiVirus}::UpdateWhiteList(${2:\\$arWhiteList})$0"},
		{"trigger": "CSecurityAntiVirus::__construct", "contents": "${1:CSecurityAntiVirus}::__construct(${2:\\$place = 'body'})$0"},
		{"trigger": "CSecurityAntiVirus::addtocache", "contents": "${1:CSecurityAntiVirus}::addtocache()$0"},
		{"trigger": "CSecurityAntiVirus::dolog", "contents": "${1:CSecurityAntiVirus}::dolog()$0"},
		{"trigger": "CSecurityAntiVirus::end_blkblock", "contents": "${1:CSecurityAntiVirus}::end_blkblock()$0"},
		{"trigger": "CSecurityAntiVirus::end_okblock", "contents": "${1:CSecurityAntiVirus}::end_okblock()$0"},
		{"trigger": "CSecurityAntiVirus::end_whiteblock", "contents": "${1:CSecurityAntiVirus}::end_whiteblock()$0"},
		{"trigger": "CSecurityAntiVirus::getnames", "contents": "${1:CSecurityAntiVirus}::getnames(${2:\\$str})$0"},
		{"trigger": "CSecurityAntiVirus::getnames_cb", "contents": "${1:CSecurityAntiVirus}::getnames_cb(${2:\\$m})$0"},
		{"trigger": "CSecurityAntiVirus::getstatchars", "contents": "${1:CSecurityAntiVirus}::getstatchars(${2:&\\$str})$0"},
		{"trigger": "CSecurityAntiVirus::isinwhitelist", "contents": "${1:CSecurityAntiVirus}::isinwhitelist()$0"},
		{"trigger": "CSecurityAntiVirus::isnormalname", "contents": "${1:CSecurityAntiVirus}::isnormalname(${2:\\$nm}, ${2:&\\$l})$0"},
		{"trigger": "CSecurityAntiVirus::returnblockrating", "contents": "${1:CSecurityAntiVirus}::returnblockrating()$0"},
		{"trigger": "CSecurityAntiVirus::returnfromcache", "contents": "${1:CSecurityAntiVirus}::returnfromcache()$0"},
		{"trigger": "CSecurityAntiVirus::returnscriptbody", "contents": "${1:CSecurityAntiVirus}::returnscriptbody(${2:\\$str})$0"},
		{"trigger": "CSecurityAntiVirus::ruleallsources", "contents": "${1:CSecurityAntiVirus}::ruleallsources()$0"},
		{"trigger": "CSecurityAntiVirus::ruleframevisiblity", "contents": "${1:CSecurityAntiVirus}::ruleframevisiblity()$0"},
		{"trigger": "CSecurityAntiVirus::rulescriptbasics", "contents": "${1:CSecurityAntiVirus}::rulescriptbasics()$0"},
		{"trigger": "CSecurityAntiVirus::rulescriptblocks", "contents": "${1:CSecurityAntiVirus}::rulescriptblocks()$0"},
		{"trigger": "CSecurityAntiVirus::rulescriptfrequensy", "contents": "${1:CSecurityAntiVirus}::rulescriptfrequensy()$0"},
		{"trigger": "CSecurityAntiVirus::rulescriptglobals", "contents": "${1:CSecurityAntiVirus}::rulescriptglobals()$0"},
		{"trigger": "CSecurityAntiVirus::rulescriptlenghts", "contents": "${1:CSecurityAntiVirus}::rulescriptlenghts()$0"},
		{"trigger": "CSecurityAntiVirus::rulescriptnamerules", "contents": "${1:CSecurityAntiVirus}::rulescriptnamerules()$0"},
		{"trigger": "CSecurityAntiVirus::rulescriptvbscript", "contents": "${1:CSecurityAntiVirus}::rulescriptvbscript()$0"},
		{"trigger": "CSecurityAntiVirus::rulescriptwhiterules", "contents": "${1:CSecurityAntiVirus}::rulescriptwhiterules()$0"},
		{"trigger": "CSecurityDB::CurrentTimeFunction", "contents": "${1:CSecurityDB}::CurrentTimeFunction()$0"},
		{"trigger": "CSecurityDB::Disconnect", "contents": "${1:CSecurityDB}::Disconnect()$0"},
		{"trigger": "CSecurityDB::Fetch", "contents": "${1:CSecurityDB}::Fetch(${2:\\$result})$0"},
		{"trigger": "CSecurityDB::Init", "contents": "${1:CSecurityDB}::Init(${2:\\$bDoConnect = false})$0"},
		{"trigger": "CSecurityDB::Lock", "contents": "${1:CSecurityDB}::Lock(${2:\\$id}, ${2:\\$timeout = 60})$0"},
		{"trigger": "CSecurityDB::LockTable", "contents": "${1:CSecurityDB}::LockTable(${2:\\$table_name}, ${2:\\$lock_id})$0"},
		{"trigger": "CSecurityDB::Query", "contents": "${1:CSecurityDB}::Query(${2:\\$strSql}, ${2:\\$error_position})$0"},
		{"trigger": "CSecurityDB::QueryBind", "contents": "${1:CSecurityDB}::QueryBind(${2:\\$strSql}, ${2:\\$arBinds}, ${4:\\$error_position})$0"},
		{"trigger": "CSecurityDB::SecondsAgo", "contents": "${1:CSecurityDB}::SecondsAgo(${2:\\$sec})$0"},
		{"trigger": "CSecurityDB::UnlockTable", "contents": "${1:CSecurityDB}::UnlockTable(${2:\\$table_lock})$0"},
		{"trigger": "CSecurityFilter::CSecurityFilter", "contents": "${1:CSecurityFilter}::CSecurityFilter(${2:\\$char = false})$0"},
		{"trigger": "CSecurityFilter::GetAuditTypes", "contents": "${1:CSecurityFilter}::GetAuditTypes()$0"},
		{"trigger": "CSecurityFilter::IsActive", "contents": "${1:CSecurityFilter}::IsActive()$0"},
		{"trigger": "CSecurityFilter::OnBeforeProlog", "contents": "${1:CSecurityFilter}::OnBeforeProlog()$0"},
		{"trigger": "CSecurityFilter::SetActive", "contents": "${1:CSecurityFilter}::SetActive(${2:\\$bActive = false})$0"},
		{"trigger": "CSecurityFilter::TestXSS", "contents": "${1:CSecurityFilter}::TestXSS(${2:\\$str}, ${2:\\$action = 'clear'})$0"},
		{"trigger": "CSecurityFilter::__construct", "contents": "${1:CSecurityFilter}::__construct(${2:\\$char = false})$0"},
		{"trigger": "CSecurityFilter::_block", "contents": "${1:CSecurityFilter}::_block(${2:\\$ip})$0"},
		{"trigger": "CSecurityFilter::_cleartmpfiles", "contents": "${1:CSecurityFilter}::_cleartmpfiles()$0"},
		{"trigger": "CSecurityFilter::_decode", "contents": "${1:CSecurityFilter}::_decode(${2:\\$str})$0"},
		{"trigger": "CSecurityFilter::_decode_cb", "contents": "${1:CSecurityFilter}::_decode_cb(${2:\\$in})$0"},
		{"trigger": "CSecurityFilter::_decode_cb_hex", "contents": "${1:CSecurityFilter}::_decode_cb_hex(${2:\\$in})$0"},
		{"trigger": "CSecurityFilter::_do", "contents": "${1:CSecurityFilter}::_do()$0"},
		{"trigger": "CSecurityFilter::_doarray", "contents": "${1:CSecurityFilter}::_doarray(${2:&\\$ar}, ${2:\\$var_name}, ${4:\\$skip = ''})$0"},
		{"trigger": "CSecurityFilter::_doarraysqlfragment", "contents": "${1:CSecurityFilter}::_doarraysqlfragment(${2:&\\$ar}, ${2:\\$var_name}, ${4:\\$skip = '' ,\\$search = ''}, ${4:\\$replace = ''})$0"},
		{"trigger": "CSecurityFilter::_dostr", "contents": "${1:CSecurityFilter}::_dostr(${2:&\\$str}, ${2:\\$var_name})$0"},
		{"trigger": "CSecurityFilter::_dostrphp", "contents": "${1:CSecurityFilter}::_dostrphp(${2:&\\$str}, ${2:\\$var_name})$0"},
		{"trigger": "CSecurityFilter::_dostrsql", "contents": "${1:CSecurityFilter}::_dostrsql(${2:&\\$str}, ${2:\\$var_name})$0"},
		{"trigger": "CSecurityFilter::_dostrsqlfragment", "contents": "${1:CSecurityFilter}::_dostrsqlfragment(${2:&\\$str}, ${2:\\$var_name ,\\$search = '' ,\\$replace = ''})$0"},
		{"trigger": "CSecurityFilter::_fixsize", "contents": "${1:CSecurityFilter}::_fixsize(${2:&\\$tmpname}, ${2:&\\$size}, ${4:&\\$error})$0"},
		{"trigger": "CSecurityFilter::_fixtmpnames", "contents": "${1:CSecurityFilter}::_fixtmpnames(${2:&\\$ar})$0"},
		{"trigger": "CSecurityFilter::_initfiles", "contents": "${1:CSecurityFilter}::_initfiles()$0"},
		{"trigger": "CSecurityFilter::_log", "contents": "${1:CSecurityFilter}::_log(${2:\\$str}, ${2:\\$var_name}, ${4:\\$type})$0"},
		{"trigger": "CSecurityFilter::_prefilter", "contents": "${1:CSecurityFilter}::_prefilter(${2:\\$str})$0"},
		{"trigger": "CSecurityFilter::_returnfiles", "contents": "${1:CSecurityFilter}::_returnfiles()$0"},
		{"trigger": "CSecurityFilter::_returnfilesar", "contents": "${1:CSecurityFilter}::_returnfilesar(${2:\\$fname}, ${2:\\$index}, ${4:\\$tmpname}, ${4:\\$name}, ${6:\\$type})$0"},
		{"trigger": "CSecurityFilter::_returnhiddens", "contents": "${1:CSecurityFilter}::_returnhiddens(${2:\\$ar}, ${2:\\$prefix})$0"},
		{"trigger": "CSecurityFilter::_teststr", "contents": "${1:CSecurityFilter}::_teststr(${2:\\$str})$0"},
		{"trigger": "CSecurityFilter::_usercanexcept", "contents": "${1:CSecurityFilter}::_usercanexcept()$0"},
		{"trigger": "CSecurityFilterMask::Check", "contents": "${1:CSecurityFilterMask}::Check(${2:\\$site_id}, ${2:\\$uri})$0"},
		{"trigger": "CSecurityFilterMask::GetList", "contents": "${1:CSecurityFilterMask}::GetList()$0"},
		{"trigger": "CSecurityFilterMask::Update", "contents": "${1:CSecurityFilterMask}::Update(${2:\\$arMasks})$0"},
		{"trigger": "CSecurityFrame::IsActive", "contents": "${1:CSecurityFrame}::IsActive()$0"},
		{"trigger": "CSecurityFrame::SetActive", "contents": "${1:CSecurityFrame}::SetActive(${2:\\$bActive = false})$0"},
		{"trigger": "CSecurityFrame::SetHeader", "contents": "${1:CSecurityFrame}::SetHeader()$0"},
		{"trigger": "CSecurityFrameMask::Check", "contents": "${1:CSecurityFrameMask}::Check(${2:\\$site_id}, ${2:\\$uri})$0"},
		{"trigger": "CSecurityFrameMask::GetList", "contents": "${1:CSecurityFrameMask}::GetList()$0"},
		{"trigger": "CSecurityFrameMask::Update", "contents": "${1:CSecurityFrameMask}::Update(${2:\\$arMasks})$0"},
		{"trigger": "CSecurityIPRule::Add", "contents": "${1:CSecurityIPRule}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSecurityIPRule::CheckAntiFile", "contents": "${1:CSecurityIPRule}::CheckAntiFile(${2:\\$retun_message = false})$0"},
		{"trigger": "CSecurityIPRule::CheckFields", "contents": "${1:CSecurityIPRule}::CheckFields(${2:&\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CSecurityIPRule::CheckIP", "contents": "${1:CSecurityIPRule}::CheckIP(${2:\\$arInclIPs=false}, ${2:\\$arExclIPs=false})$0"},
		{"trigger": "CSecurityIPRule::CleanUpAgent", "contents": "${1:CSecurityIPRule}::CleanUpAgent()$0"},
		{"trigger": "CSecurityIPRule::Delete", "contents": "${1:CSecurityIPRule}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSecurityIPRule::GetActiveCount", "contents": "${1:CSecurityIPRule}::GetActiveCount()$0"},
		{"trigger": "CSecurityIPRule::GetList", "contents": "${1:CSecurityIPRule}::GetList(${2:\\$arSelect}, ${2:\\$arFilter}, ${4:\\$arOrder})$0"},
		{"trigger": "CSecurityIPRule::GetRuleExclIPs", "contents": "${1:CSecurityIPRule}::GetRuleExclIPs(${2:\\$IPRULE_ID})$0"},
		{"trigger": "CSecurityIPRule::GetRuleExclMasks", "contents": "${1:CSecurityIPRule}::GetRuleExclMasks(${2:\\$IPRULE_ID})$0"},
		{"trigger": "CSecurityIPRule::GetRuleInclIPs", "contents": "${1:CSecurityIPRule}::GetRuleInclIPs(${2:\\$IPRULE_ID})$0"},
		{"trigger": "CSecurityIPRule::GetRuleInclMasks", "contents": "${1:CSecurityIPRule}::GetRuleInclMasks(${2:\\$IPRULE_ID})$0"},
		{"trigger": "CSecurityIPRule::IsActive", "contents": "${1:CSecurityIPRule}::IsActive()$0"},
		{"trigger": "CSecurityIPRule::OnPageStart", "contents": "${1:CSecurityIPRule}::OnPageStart(${2:\\$use_query = false})$0"},
		{"trigger": "CSecurityIPRule::SetActive", "contents": "${1:CSecurityIPRule}::SetActive(${2:\\$bActive = false}, ${2:\\$end_time = 0})$0"},
		{"trigger": "CSecurityIPRule::Update", "contents": "${1:CSecurityIPRule}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSecurityIPRule::UpdateRuleIPs", "contents": "${1:CSecurityIPRule}::UpdateRuleIPs(${2:\\$IPRULE_ID}, ${2:\\$arInclIPs=false}, ${4:\\$arExclIPs=false})$0"},
		{"trigger": "CSecurityIPRule::UpdateRuleMasks", "contents": "${1:CSecurityIPRule}::UpdateRuleMasks(${2:\\$IPRULE_ID}, ${2:\\$arInclMasks = false}, ${4:\\$arExclMasks = false})$0"},
		{"trigger": "CSecurityIPRule::ip2number", "contents": "${1:CSecurityIPRule}::ip2number(${2:\\$ip})$0"},
		{"trigger": "CSecurityRedirect::BeforeLocalRedirect", "contents": "${1:CSecurityRedirect}::BeforeLocalRedirect(${2:&\\$url}, ${2:\\$skip_security_check})$0"},
		{"trigger": "CSecurityRedirect::EndBufferContent", "contents": "${1:CSecurityRedirect}::EndBufferContent(${2:&\\$content})$0"},
		{"trigger": "CSecurityRedirect::GetDefaultMessage", "contents": "${1:CSecurityRedirect}::GetDefaultMessage(${2:\\$language_id = false})$0"},
		{"trigger": "CSecurityRedirect::GetDomains", "contents": "${1:CSecurityRedirect}::GetDomains()$0"},
		{"trigger": "CSecurityRedirect::GetList", "contents": "${1:CSecurityRedirect}::GetList()$0"},
		{"trigger": "CSecurityRedirect::GetUrls", "contents": "${1:CSecurityRedirect}::GetUrls()$0"},
		{"trigger": "CSecurityRedirect::IsActive", "contents": "${1:CSecurityRedirect}::IsActive()$0"},
		{"trigger": "CSecurityRedirect::ReplaceHREF", "contents": "${1:CSecurityRedirect}::ReplaceHREF(${2:\\$matches})$0"},
		{"trigger": "CSecurityRedirect::SetActive", "contents": "${1:CSecurityRedirect}::SetActive(${2:\\$bActive = false})$0"},
		{"trigger": "CSecurityRedirect::Update", "contents": "${1:CSecurityRedirect}::Update(${2:\\$arUrls})$0"},
		{"trigger": "CSecuritySession::CheckSessionId", "contents": "${1:CSecuritySession}::CheckSessionId(${2:\\$id})$0"},
		{"trigger": "CSecuritySession::CleanUpAgent", "contents": "${1:CSecuritySession}::CleanUpAgent()$0"},
		{"trigger": "CSecuritySession::Init", "contents": "${1:CSecuritySession}::Init()$0"},
		{"trigger": "CSecuritySession::UpdateSessID", "contents": "${1:CSecuritySession}::UpdateSessID()$0"},
		{"trigger": "CSecuritySessionDB::Init", "contents": "${1:CSecuritySessionDB}::Init()$0"},
		{"trigger": "CSecuritySessionDB::close", "contents": "${1:CSecuritySessionDB}::close()$0"},
		{"trigger": "CSecuritySessionDB::destroy", "contents": "${1:CSecuritySessionDB}::destroy(${2:\\$id})$0"},
		{"trigger": "CSecuritySessionDB::gc", "contents": "${1:CSecuritySessionDB}::gc(${2:\\$maxlifetime})$0"},
		{"trigger": "CSecuritySessionDB::open", "contents": "${1:CSecuritySessionDB}::open(${2:\\$save_path}, ${2:\\$session_name})$0"},
		{"trigger": "CSecuritySessionDB::read", "contents": "${1:CSecuritySessionDB}::read(${2:\\$id})$0"},
		{"trigger": "CSecuritySessionDB::write", "contents": "${1:CSecuritySessionDB}::write(${2:\\$id}, ${2:\\$sess_data})$0"},
		{"trigger": "CSecuritySessionMC::Init", "contents": "${1:CSecuritySessionMC}::Init()$0"},
		{"trigger": "CSecuritySessionMC::close", "contents": "${1:CSecuritySessionMC}::close()$0"},
		{"trigger": "CSecuritySessionMC::destroy", "contents": "${1:CSecuritySessionMC}::destroy(${2:\\$id})$0"},
		{"trigger": "CSecuritySessionMC::gc", "contents": "${1:CSecuritySessionMC}::gc(${2:\\$maxlifetime})$0"},
		{"trigger": "CSecuritySessionMC::open", "contents": "${1:CSecuritySessionMC}::open(${2:\\$save_path}, ${2:\\$session_name})$0"},
		{"trigger": "CSecuritySessionMC::read", "contents": "${1:CSecuritySessionMC}::read(${2:\\$id})$0"},
		{"trigger": "CSecuritySessionMC::write", "contents": "${1:CSecuritySessionMC}::write(${2:\\$id}, ${2:\\$sess_data})$0"},
		{"trigger": "CSecurityUser::Deactivate", "contents": "${1:CSecurityUser}::Deactivate(${2:\\$USER_ID})$0"},
		{"trigger": "CSecurityUser::Delete", "contents": "${1:CSecurityUser}::Delete(${2:\\$USER_ID})$0"},
		{"trigger": "CSecurityUser::GetSyncCounter", "contents": "${1:CSecurityUser}::GetSyncCounter(${2:\\$bin_secret}, ${2:\\$sync1}, ${4:\\$sync2}, ${4:&\\$aMsg})$0"},
		{"trigger": "CSecurityUser::HOTP", "contents": "${1:CSecurityUser}::HOTP(${2:\\$secret}, ${2:\\$cnt}, ${4:\\$digits = 6})$0"},
		{"trigger": "CSecurityUser::IsActive", "contents": "${1:CSecurityUser}::IsActive()$0"},
		{"trigger": "CSecurityUser::OnBeforeUserLogin", "contents": "${1:CSecurityUser}::OnBeforeUserLogin(${2:\\$arParams})$0"},
		{"trigger": "CSecurityUser::OnUserDelete", "contents": "${1:CSecurityUser}::OnUserDelete(${2:\\$ID})$0"},
		{"trigger": "CSecurityUser::SetActive", "contents": "${1:CSecurityUser}::SetActive(${2:\\$bActive = false})$0"},
		{"trigger": "CSecurityUser::Update", "contents": "${1:CSecurityUser}::Update(${2:\\$arFields})$0"},
		{"trigger": "CSecurityUser::hmacsha1", "contents": "${1:CSecurityUser}::hmacsha1(${2:\\$data}, ${2:\\$key})$0"},
		{"trigger": "CSecurityUser::hmacsha256", "contents": "${1:CSecurityUser}::hmacsha256(${2:\\$data}, ${2:\\$key})$0"},
		{"trigger": "CSecurityXSSDetect::CreateTrace", "contents": "${1:CSecurityXSSDetect}::CreateTrace(${2:\\$var_name}, ${2:\\$str}, ${4:\\$script})$0"},
		{"trigger": "CSecurityXSSDetect::OnEndBufferContent", "contents": "${1:CSecurityXSSDetect}::OnEndBufferContent(${2:&\\$content})$0"},
		{"trigger": "CSecurityXSSDetect::__construct", "contents": "${1:CSecurityXSSDetect}::__construct()$0"},
		{"trigger": "CSecurityXSSDetect::_filter_in", "contents": "${1:CSecurityXSSDetect}::_filter_in(${2:\\$str})$0"},
		{"trigger": "CSecurityXSSDetect::_filter_val", "contents": "${1:CSecurityXSSDetect}::_filter_val(${2:\\$str}, ${2:\\$in}, ${4:\\$var_name})$0"},
		{"trigger": "CSecurityXSSDetect::filter_cb", "contents": "${1:CSecurityXSSDetect}::filter_cb(${2:\\$strs})$0"},
		{"trigger": "CSecurityXSSDetect::filter_q", "contents": "${1:CSecurityXSSDetect}::filter_q(${2:\\$strs})$0"},
		{"trigger": "CSecurityXSSDetect::log", "contents": "${1:CSecurityXSSDetect}::log(${2:\\$var_name}, ${2:\\$str}, ${4:\\$script})$0"},
		{"trigger": "CSecurityXSSDetect::make_in", "contents": "${1:CSecurityXSSDetect}::make_in(${2:\\$name}, ${2:\\$val})$0"},
		{"trigger": "CSecurityXSSDetect::remove_quoted_strings", "contents": "${1:CSecurityXSSDetect}::remove_quoted_strings(${2:\\$str}, ${2:\\$bSaveQuotes = true})$0"},
		{"trigger": "CSecurityXSSDetect::safeize", "contents": "${1:CSecurityXSSDetect}::safeize(${2:\\$str})$0"},
		{"trigger": "CSeoEventHandlers::SeoOnPanelCreate", "contents": "${1:CSeoEventHandlers}::SeoOnPanelCreate()$0"},
		{"trigger": "CSeoKeywords::CheckFields", "contents": "${1:CSeoKeywords}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSeoKeywords::GetByURL", "contents": "${1:CSeoKeywords}::GetByURL(${2:\\$URL}, ${2:\\$SITE_ID = false}, ${4:\\$bPart = false}, ${4:\\$bCleanUrl = false})$0"},
		{"trigger": "CSeoKeywords::GetList", "contents": "${1:CSeoKeywords}::GetList(${2:\\$arOrder}, ${2:\\$arFilter})$0"},
		{"trigger": "CSeoKeywords::Update", "contents": "${1:CSeoKeywords}::Update(${2:\\$arFields})$0"},
		{"trigger": "CSeoPageChecker::CSeoPageChecker", "contents": "${1:CSeoPageChecker}::CSeoPageChecker(${2:\\$site}, ${2:\\$url}, ${4:\\$get = true}, ${4:\\$check_errors = true})$0"},
		{"trigger": "CSeoPageChecker::CheckKeyword", "contents": "${1:CSeoPageChecker}::CheckKeyword(${2:\\$keyword}, ${2:\\$bStemmed = false})$0"},
		{"trigger": "CSeoPageChecker::GetErrors", "contents": "${1:CSeoPageChecker}::GetErrors()$0"},
		{"trigger": "CSeoPageChecker::GetExtendedData", "contents": "${1:CSeoPageChecker}::GetExtendedData()$0"},
		{"trigger": "CSeoPageChecker::GetHTTPData", "contents": "${1:CSeoPageChecker}::GetHTTPData()$0"},
		{"trigger": "CSeoPageChecker::GetStatistics", "contents": "${1:CSeoPageChecker}::GetStatistics()$0"},
		{"trigger": "CSeoPageChecker::GetURL", "contents": "${1:CSeoPageChecker}::GetURL()$0"},
		{"trigger": "CSeoPageChecker::IsOuterUrl", "contents": "${1:CSeoPageChecker}::IsOuterUrl(${2:\\$url})$0"},
		{"trigger": "CSeoPageChecker::_GetContrast", "contents": "${1:CSeoPageChecker}::_GetContrast(${2:\\$word})$0"},
		{"trigger": "CSeoPageChecker::_PrepareData", "contents": "${1:CSeoPageChecker}::_PrepareData()$0"},
		{"trigger": "CSeoPageChecker::__prepareText", "contents": "${1:CSeoPageChecker}::__prepareText(${2:\\$text})$0"},
		{"trigger": "CSeoUtils::CleanURL", "contents": "${1:CSeoUtils}::CleanURL(${2:\\$URL})$0"},
		{"trigger": "CSocNetEventUserView::Add", "contents": "${1:CSocNetEventUserView}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetEventUserView::CheckFields", "contents": "${1:CSocNetEventUserView}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSocNetEventUserView::CheckPermissions", "contents": "${1:CSocNetEventUserView}::CheckPermissions(${2:\\$table}, ${2:\\$user_id})$0"},
		{"trigger": "CSocNetEventUserView::CheckPermissionsByEvent", "contents": "${1:CSocNetEventUserView}::CheckPermissionsByEvent(${2:\\$entity_type}, ${2:\\$entity_id}, ${4:\\$event_id}, ${4:\\$user_id})$0"},
		{"trigger": "CSocNetEventUserView::Delete", "contents": "${1:CSocNetEventUserView}::Delete(${2:\\$entityType}, ${2:\\$entityID}, ${4:\\$feature = false}, ${4:\\$event = false})$0"},
		{"trigger": "CSocNetEventUserView::Entity2UserAdd", "contents": "${1:CSocNetEventUserView}::Entity2UserAdd(${2:\\$entityType}, ${2:\\$entityID}, ${4:\\$userID}, ${4:\\$role})$0"},
		{"trigger": "CSocNetEventUserView::GetList", "contents": "${1:CSocNetEventUserView}::GetList(${2:\\$arOrder = array('ENTITY_ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetEventUserView::IsEntityEmpty", "contents": "${1:CSocNetEventUserView}::IsEntityEmpty(${2:\\$entityType}, ${2:\\$entityID})$0"},
		{"trigger": "CSocNetEventUserView::SetFeature", "contents": "${1:CSocNetEventUserView}::SetFeature(${2:\\$entityType}, ${2:\\$entityID}, ${4:\\$feature}, ${4:\\$op = false}, ${6:\\$permX = false}, ${6:\\$bCheckEmpty = false})$0"},
		{"trigger": "CSocNetEventUserView::SetGroup", "contents": "${1:CSocNetEventUserView}::SetGroup(${2:\\$entityID}, ${2:\\$bSetFeatures = false})$0"},
		{"trigger": "CSocNetEventUserView::SetUser", "contents": "${1:CSocNetEventUserView}::SetUser(${2:\\$entityID}, ${2:\\$feature = false}, ${4:\\$permX = false}, ${4:\\$bSetFeatures = false})$0"},
		{"trigger": "CSocNetFeatures::Add", "contents": "${1:CSocNetFeatures}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetFeatures::CheckFields", "contents": "${1:CSocNetFeatures}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetFeatures::Delete", "contents": "${1:CSocNetFeatures}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetFeatures::DeleteNoDemand", "contents": "${1:CSocNetFeatures}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetFeatures::GetActiveFeatures", "contents": "${1:CSocNetFeatures}::GetActiveFeatures(${2:\\$type}, ${2:\\$id})$0"},
		{"trigger": "CSocNetFeatures::GetActiveFeaturesNames", "contents": "${1:CSocNetFeatures}::GetActiveFeaturesNames(${2:\\$type}, ${2:\\$id})$0"},
		{"trigger": "CSocNetFeatures::GetByID", "contents": "${1:CSocNetFeatures}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetFeatures::GetList", "contents": "${1:CSocNetFeatures}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetFeatures::IsActiveFeature", "contents": "${1:CSocNetFeatures}::IsActiveFeature(${2:\\$type}, ${2:\\$id}, ${4:\\$feature})$0"},
		{"trigger": "CSocNetFeatures::SetFeature", "contents": "${1:CSocNetFeatures}::SetFeature(${2:\\$type}, ${2:\\$id}, ${4:\\$feature}, ${4:\\$active}, ${6:\\$featureName = false})$0"},
		{"trigger": "CSocNetFeatures::Update", "contents": "${1:CSocNetFeatures}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetFeaturesPerms::Add", "contents": "${1:CSocNetFeaturesPerms}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetFeaturesPerms::CanPerformOperation", "contents": "${1:CSocNetFeaturesPerms}::CanPerformOperation(${2:\\$userID}, ${2:\\$type}, ${4:\\$id}, ${4:\\$feature}, ${6:\\$operation}, ${6:\\$bCurrentUserIsAdmin = false})$0"},
		{"trigger": "CSocNetFeaturesPerms::CheckFields", "contents": "${1:CSocNetFeaturesPerms}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetFeaturesPerms::CurrentUserCanPerformOperation", "contents": "${1:CSocNetFeaturesPerms}::CurrentUserCanPerformOperation(${2:\\$type}, ${2:\\$id}, ${4:\\$feature}, ${4:\\$operation}, ${6:\\$site_id = SITE_ID})$0"},
		{"trigger": "CSocNetFeaturesPerms::Delete", "contents": "${1:CSocNetFeaturesPerms}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetFeaturesPerms::GetAvaibleEntity", "contents": "${1:CSocNetFeaturesPerms}::GetAvaibleEntity(${2:\\$entityType}, ${2:\\$feature}, ${4:\\$role}, ${4:\\$operation}, ${6:\\$active}, ${6:\\$visible}, ${8:\\$siteID})$0"},
		{"trigger": "CSocNetFeaturesPerms::GetByID", "contents": "${1:CSocNetFeaturesPerms}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetFeaturesPerms::GetList", "contents": "${1:CSocNetFeaturesPerms}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetFeaturesPerms::GetOperationPerm", "contents": "${1:CSocNetFeaturesPerms}::GetOperationPerm(${2:\\$type}, ${2:\\$id}, ${4:\\$feature}, ${4:\\$operation})$0"},
		{"trigger": "CSocNetFeaturesPerms::SetPerm", "contents": "${1:CSocNetFeaturesPerms}::SetPerm(${2:\\$featureID}, ${2:\\$operation}, ${4:\\$perm})$0"},
		{"trigger": "CSocNetFeaturesPerms::Update", "contents": "${1:CSocNetFeaturesPerms}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetGroup::Add", "contents": "${1:CSocNetGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetGroup::CanUserInitiate", "contents": "${1:CSocNetGroup}::CanUserInitiate(${2:\\$userID}, ${2:\\$groupID})$0"},
		{"trigger": "CSocNetGroup::CanUserReadGroup", "contents": "${1:CSocNetGroup}::CanUserReadGroup(${2:\\$userID}, ${2:\\$groupID})$0"},
		{"trigger": "CSocNetGroup::CanUserViewGroup", "contents": "${1:CSocNetGroup}::CanUserViewGroup(${2:\\$userID}, ${2:\\$groupID})$0"},
		{"trigger": "CSocNetGroup::CheckFields", "contents": "${1:CSocNetGroup}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetGroup::CreateGroup", "contents": "${1:CSocNetGroup}::CreateGroup(${2:\\$ownerID}, ${2:\\$arFields}, ${4:\\$bAutoSubscribe = true})$0"},
		{"trigger": "CSocNetGroup::Delete", "contents": "${1:CSocNetGroup}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetGroup::DeleteNoDemand", "contents": "${1:CSocNetGroup}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetGroup::GetByID", "contents": "${1:CSocNetGroup}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetGroup::GetFilterOperation", "contents": "${1:CSocNetGroup}::GetFilterOperation(${2:\\$key})$0"},
		{"trigger": "CSocNetGroup::GetList", "contents": "${1:CSocNetGroup}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetGroup::GetSite", "contents": "${1:CSocNetGroup}::GetSite(${2:\\$group_id})$0"},
		{"trigger": "CSocNetGroup::OnBeforeLangDelete", "contents": "${1:CSocNetGroup}::OnBeforeLangDelete(${2:\\$lang})$0"},
		{"trigger": "CSocNetGroup::PrepareSql", "contents": "${1:CSocNetGroup}::PrepareSql(${2:&\\$arFields}, ${2:\\$arOrder}, ${4:\\$arFilter}, ${4:\\$arGroupBy}, ${6:\\$arSelectFields}, ${6:\\$arUF = array()})$0"},
		{"trigger": "CSocNetGroup::SetLastActivity", "contents": "${1:CSocNetGroup}::SetLastActivity(${2:\\$ID}, ${2:\\$date = false})$0"},
		{"trigger": "CSocNetGroup::SetStat", "contents": "${1:CSocNetGroup}::SetStat(${2:\\$ID})$0"},
		{"trigger": "CSocNetGroup::Update", "contents": "${1:CSocNetGroup}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$bAutoSubscribe = true})$0"},
		{"trigger": "CSocNetGroup::__ValidateID", "contents": "${1:CSocNetGroup}::__ValidateID(${2:\\$ID})$0"},
		{"trigger": "CSocNetGroupAuthProvider::AjaxRequest", "contents": "${1:CSocNetGroupAuthProvider}::AjaxRequest(${2:\\$arParams=false})$0"},
		{"trigger": "CSocNetGroupAuthProvider::GetFormHtml", "contents": "${1:CSocNetGroupAuthProvider}::GetFormHtml(${2:\\$arParams=false})$0"},
		{"trigger": "CSocNetGroupAuthProvider::GetNames", "contents": "${1:CSocNetGroupAuthProvider}::GetNames(${2:\\$arCodes})$0"},
		{"trigger": "CSocNetGroupAuthProvider::GetProviders", "contents": "${1:CSocNetGroupAuthProvider}::GetProviders()$0"},
		{"trigger": "CSocNetGroupAuthProvider::UpdateCodes", "contents": "${1:CSocNetGroupAuthProvider}::UpdateCodes(${2:\\$USER_ID})$0"},
		{"trigger": "CSocNetGroupAuthProvider::__construct", "contents": "${1:CSocNetGroupAuthProvider}::__construct()$0"},
		{"trigger": "CSocNetGroupSubject::Add", "contents": "${1:CSocNetGroupSubject}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetGroupSubject::CheckFields", "contents": "${1:CSocNetGroupSubject}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetGroupSubject::Delete", "contents": "${1:CSocNetGroupSubject}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetGroupSubject::GetByID", "contents": "${1:CSocNetGroupSubject}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetGroupSubject::GetList", "contents": "${1:CSocNetGroupSubject}::GetList(${2:\\$arOrder = array('SORT' => 'ASC'}, ${2:'ID' => 'DESC')}, ${4:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${6:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetGroupSubject::GetSite", "contents": "${1:CSocNetGroupSubject}::GetSite(${2:\\$subject_id})$0"},
		{"trigger": "CSocNetGroupSubject::Update", "contents": "${1:CSocNetGroupSubject}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetLog::Add", "contents": "${1:CSocNetLog}::Add(${2:\\$arFields}, ${2:\\$bSendEvent = true})$0"},
		{"trigger": "CSocNetLog::CheckFields", "contents": "${1:CSocNetLog}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetLog::CheckSign", "contents": "${1:CSocNetLog}::CheckSign(${2:\\$sign}, ${2:\\$userId})$0"},
		{"trigger": "CSocNetLog::ClearOld", "contents": "${1:CSocNetLog}::ClearOld(${2:\\$days = 90})$0"},
		{"trigger": "CSocNetLog::ClearOldAgent", "contents": "${1:CSocNetLog}::ClearOldAgent()$0"},
		{"trigger": "CSocNetLog::Delete", "contents": "${1:CSocNetLog}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetLog::DeleteNoDemand", "contents": "${1:CSocNetLog}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetLog::DeleteSystemEventsByGroupID", "contents": "${1:CSocNetLog}::DeleteSystemEventsByGroupID(${2:\\$group_id = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_BlogPostComment", "contents": "${1:CSocNetLog}::FormatEvent_BlogPostComment(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_CreateAvatar", "contents": "${1:CSocNetLog}::FormatEvent_CreateAvatar(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$source = 'CREATED_BY_'})$0"},
		{"trigger": "CSocNetLog::FormatEvent_Files", "contents": "${1:CSocNetLog}::FormatEvent_Files(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_FillTooltip", "contents": "${1:CSocNetLog}::FormatEvent_FillTooltip(${2:\\$arFields}, ${2:\\$arParams})$0"},
		{"trigger": "CSocNetLog::FormatEvent_Forum", "contents": "${1:CSocNetLog}::FormatEvent_Forum(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_IsMessageShort", "contents": "${1:CSocNetLog}::FormatEvent_IsMessageShort(${2:\\$message}, ${2:\\$short_message = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_Microblog", "contents": "${1:CSocNetLog}::FormatEvent_Microblog(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_Photo", "contents": "${1:CSocNetLog}::FormatEvent_Photo(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_System", "contents": "${1:CSocNetLog}::FormatEvent_System(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_SystemFriends", "contents": "${1:CSocNetLog}::FormatEvent_SystemFriends(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_SystemGroups", "contents": "${1:CSocNetLog}::FormatEvent_SystemGroups(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::FormatEvent_Task", "contents": "${1:CSocNetLog}::FormatEvent_Task(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLog::GetByID", "contents": "${1:CSocNetLog}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetLog::GetCacheLastLogID", "contents": "${1:CSocNetLog}::GetCacheLastLogID()$0"},
		{"trigger": "CSocNetLog::GetList", "contents": "${1:CSocNetLog}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()}, ${6:\\$arParams = array()})$0"},
		{"trigger": "CSocNetLog::GetSign", "contents": "${1:CSocNetLog}::GetSign(${2:\\$url}, ${2:\\$userID = false}, ${4:\\$site_id = false})$0"},
		{"trigger": "CSocNetLog::GetSite", "contents": "${1:CSocNetLog}::GetSite(${2:\\$log_id})$0"},
		{"trigger": "CSocNetLog::GetUserCache", "contents": "${1:CSocNetLog}::GetUserCache(${2:\\$user_id})$0"},
		{"trigger": "CSocNetLog::InitGroupTmp", "contents": "${1:CSocNetLog}::InitGroupTmp(${2:\\$groupID}, ${2:\\$arParams}, ${4:\\$bRSS = false})$0"},
		{"trigger": "CSocNetLog::InitGroupsTmp", "contents": "${1:CSocNetLog}::InitGroupsTmp(${2:\\$message}, ${2:\\$titleTemplate1}, ${4:\\$titleTemplate2}, ${4:\\$arParams}, ${6:\\$bRSS = false})$0"},
		{"trigger": "CSocNetLog::InitUserTmp", "contents": "${1:CSocNetLog}::InitUserTmp(${2:\\$userID}, ${2:\\$arParams}, ${4:\\$bCurrentUserIsAdmin = 'unknown'}, ${4:\\$bRSS = false})$0"},
		{"trigger": "CSocNetLog::InitUsersTmp", "contents": "${1:CSocNetLog}::InitUsersTmp(${2:\\$message}, ${2:\\$titleTemplate1}, ${4:\\$titleTemplate2}, ${4:\\$arParams}, ${6:\\$bCurrentUserIsAdmin = 'unknown'}, ${6:\\$bRSS = false})$0"},
		{"trigger": "CSocNetLog::MakeTitle", "contents": "${1:CSocNetLog}::MakeTitle(${2:\\$titleTemplate}, ${2:\\$title}, ${4:\\$url = ''}, ${4:\\$bHtml = true})$0"},
		{"trigger": "CSocNetLog::OnSocNetLogFormatEvent", "contents": "${1:CSocNetLog}::OnSocNetLogFormatEvent(${2:\\$arEvent}, ${2:\\$arParams})$0"},
		{"trigger": "CSocNetLog::SendEvent", "contents": "${1:CSocNetLog}::SendEvent(${2:\\$ID}, ${2:\\$mailTemplate = 'SONET_NEW_EVENT'}, ${4:\\$tmp_id = false})$0"},
		{"trigger": "CSocNetLog::SendEventAgent", "contents": "${1:CSocNetLog}::SendEventAgent(${2:\\$ID}, ${2:\\$mailTemplate = 'SONET_NEW_EVENT'}, ${4:\\$tmp_id = false})$0"},
		{"trigger": "CSocNetLog::SetCacheLastLogID", "contents": "${1:CSocNetLog}::SetCacheLastLogID(${2:\\$id})$0"},
		{"trigger": "CSocNetLog::SetUserCache", "contents": "${1:CSocNetLog}::SetUserCache(${2:\\$user_id}, ${2:\\$max_id}, ${4:\\$max_viewed_id}, ${4:\\$count})$0"},
		{"trigger": "CSocNetLog::ShowGroup", "contents": "${1:CSocNetLog}::ShowGroup(${2:\\$arEntityDesc}, ${2:\\$strEntityURL}, ${4:\\$arParams})$0"},
		{"trigger": "CSocNetLog::ShowUser", "contents": "${1:CSocNetLog}::ShowUser(${2:\\$arEntityDesc}, ${2:\\$strEntityURL}, ${4:\\$arParams})$0"},
		{"trigger": "CSocNetLog::Update", "contents": "${1:CSocNetLog}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetLog::__InitGroupTmp", "contents": "${1:CSocNetLog}::__InitGroupTmp(${2:\\$groupID})$0"},
		{"trigger": "CSocNetLog::__InitGroupsTmp", "contents": "${1:CSocNetLog}::__InitGroupsTmp(${2:\\$message}, ${2:\\$titleTemplate1}, ${4:\\$titleTemplate2})$0"},
		{"trigger": "CSocNetLog::__InitUserTmp", "contents": "${1:CSocNetLog}::__InitUserTmp(${2:\\$userID})$0"},
		{"trigger": "CSocNetLog::__InitUsersTmp", "contents": "${1:CSocNetLog}::__InitUsersTmp(${2:\\$message}, ${2:\\$titleTemplate1}, ${4:\\$titleTemplate2})$0"},
		{"trigger": "CSocNetLogComments::Add", "contents": "${1:CSocNetLogComments}::Add(${2:\\$arFields}, ${2:\\$bSetSource = false}, ${4:\\$bSendEvent = true}, ${4:\\$bSetLogUpDate = true})$0"},
		{"trigger": "CSocNetLogComments::CheckFields", "contents": "${1:CSocNetLogComments}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetLogComments::Delete", "contents": "${1:CSocNetLogComments}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetLogComments::DeleteNoDemand", "contents": "${1:CSocNetLogComments}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetLogComments::GetByID", "contents": "${1:CSocNetLogComments}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetLogComments::GetList", "contents": "${1:CSocNetLogComments}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()}, ${6:\\$arParams = array()})$0"},
		{"trigger": "CSocNetLogComments::SendEvent", "contents": "${1:CSocNetLogComments}::SendEvent(${2:\\$ID}, ${2:\\$mailTemplate = 'SONET_NEW_EVENT'})$0"},
		{"trigger": "CSocNetLogComments::SetSource", "contents": "${1:CSocNetLogComments}::SetSource(${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogComments::Update", "contents": "${1:CSocNetLogComments}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogComments::UpdateLogData", "contents": "${1:CSocNetLogComments}::UpdateLogData(${2:\\$tmp_id}, ${2:\\$bSetDate = true}, ${4:\\$bSetDateByLastComment = false})$0"},
		{"trigger": "CSocNetLogCounter::ClearByUser", "contents": "${1:CSocNetLogCounter}::ClearByUser(${2:\\$user_id}, ${2:\\$site_id = SITE_ID}, ${4:\\$code = '**'}, ${4:\\$page_size = 0}, ${6:\\$page_last_date_1 = ''})$0"},
		{"trigger": "CSocNetLogCounter::GetCodeValuesByUserID", "contents": "${1:CSocNetLogCounter}::GetCodeValuesByUserID(${2:\\$user_id}, ${2:\\$site_id = SITE_ID})$0"},
		{"trigger": "CSocNetLogCounter::GetLastDateByUserAndCode", "contents": "${1:CSocNetLogCounter}::GetLastDateByUserAndCode(${2:\\$user_id}, ${2:\\$site_id = SITE_ID}, ${4:\\$code = '**'})$0"},
		{"trigger": "CSocNetLogCounter::GetList", "contents": "${1:CSocNetLogCounter}::GetList(${2:\\$arFilter = array()}, ${2:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetLogCounter::GetSubSelect", "contents": "${1:CSocNetLogCounter}::GetSubSelect(${2:\\$log_id}, ${2:\\$entity_type = false}, ${4:\\$entity_id = false}, ${4:\\$event_id = false}, ${6:\\$created_by_id = false}, ${6:\\$arOfEntities = false}, ${8:\\$arAdmin = false}, ${8:\\$transport = false}, ${10:\\$visible = 'Y'}, ${20:\\$type = 'L'})$0"},
		{"trigger": "CSocNetLogCounter::GetValueByUserID", "contents": "${1:CSocNetLogCounter}::GetValueByUserID(${2:\\$user_id}, ${2:\\$site_id = SITE_ID})$0"},
		{"trigger": "CSocNetLogCounter::Increment", "contents": "${1:CSocNetLogCounter}::Increment(${2:\\$log_id}, ${2:\\$entity_type = false}, ${4:\\$entity_id = false}, ${4:\\$event_id = false}, ${6:\\$created_by_id = false}, ${6:\\$arOfEntities = false}, ${8:\\$arAdmin = false}, ${8:\\$transport = false}, ${10:\\$visible = 'Y'}, ${20:\\$type = 'L'})$0"},
		{"trigger": "CSocNetLogCounter::dbIF", "contents": "${1:CSocNetLogCounter}::dbIF(${2:\\$condition}, ${2:\\$yes}, ${4:\\$no})$0"},
		{"trigger": "CSocNetLogDestination::GetExtranetUser", "contents": "${1:CSocNetLogDestination}::GetExtranetUser()$0"},
		{"trigger": "CSocNetLogDestination::GetLastDepartment", "contents": "${1:CSocNetLogDestination}::GetLastDepartment()$0"},
		{"trigger": "CSocNetLogDestination::GetLastSocnetGroup", "contents": "${1:CSocNetLogDestination}::GetLastSocnetGroup()$0"},
		{"trigger": "CSocNetLogDestination::GetLastUser", "contents": "${1:CSocNetLogDestination}::GetLastUser()$0"},
		{"trigger": "CSocNetLogDestination::GetSocnetGroup", "contents": "${1:CSocNetLogDestination}::GetSocnetGroup(${2:\\$arParams = array()})$0"},
		{"trigger": "CSocNetLogDestination::GetSocnetGroupFilteredByFeaturePerms", "contents": "${1:CSocNetLogDestination}::GetSocnetGroupFilteredByFeaturePerms(${2:&\\$arGroups}, ${2:\\$arFeaturePerms})$0"},
		{"trigger": "CSocNetLogDestination::GetStucture", "contents": "${1:CSocNetLogDestination}::GetStucture(${2:\\$arParams = array()})$0"},
		{"trigger": "CSocNetLogDestination::GetTreeList", "contents": "${1:CSocNetLogDestination}::GetTreeList(${2:\\$id}, ${2:\\$relation})$0"},
		{"trigger": "CSocNetLogDestination::GetUsers", "contents": "${1:CSocNetLogDestination}::GetUsers(${2:\\$arParams = array()})$0"},
		{"trigger": "CSocNetLogDestination::SearchUsers", "contents": "${1:CSocNetLogDestination}::SearchUsers(${2:\\$search})$0"},
		{"trigger": "CSocNetLogEvents::Add", "contents": "${1:CSocNetLogEvents}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogEvents::AutoSubscribe", "contents": "${1:CSocNetLogEvents}::AutoSubscribe(${2:\\$userID}, ${2:\\$entityType}, ${4:\\$entityID})$0"},
		{"trigger": "CSocNetLogEvents::CheckFields", "contents": "${1:CSocNetLogEvents}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetLogEvents::Delete", "contents": "${1:CSocNetLogEvents}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetLogEvents::DeleteByUserAndEntity", "contents": "${1:CSocNetLogEvents}::DeleteByUserAndEntity(${2:\\$userID}, ${2:\\$entityType}, ${4:\\$entityID})$0"},
		{"trigger": "CSocNetLogEvents::DeleteNoDemand", "contents": "${1:CSocNetLogEvents}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetLogEvents::GetByID", "contents": "${1:CSocNetLogEvents}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetLogEvents::GetList", "contents": "${1:CSocNetLogEvents}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()}, ${6:\\$arParams = array()})$0"},
		{"trigger": "CSocNetLogEvents::GetSQL", "contents": "${1:CSocNetLogEvents}::GetSQL(${2:\\$user_id}, ${2:\\$arMyEntities}, ${4:\\$transport}, ${4:\\$visible}, ${6:\\$table_alias = 'L'})$0"},
		{"trigger": "CSocNetLogEvents::GetSQLForEvent", "contents": "${1:CSocNetLogEvents}::GetSQLForEvent(${2:\\$entity_type}, ${2:\\$entity_id}, ${4:\\$event_id}, ${4:\\$user_id}, ${6:\\$transport = false}, ${6:\\$visible = true}, ${8:\\$arOfEntities = array()})$0"},
		{"trigger": "CSocNetLogEvents::GetUserLogEvents", "contents": "${1:CSocNetLogEvents}::GetUserLogEvents(${2:\\$userID}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CSocNetLogEvents::Update", "contents": "${1:CSocNetLogEvents}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogEvents::__tmp_str_apos", "contents": "${1:CSocNetLogEvents}::__tmp_str_apos(${2:&\\$tmpval}, ${2:\\$tmpind})$0"},
		{"trigger": "CSocNetLogFavorites::Add", "contents": "${1:CSocNetLogFavorites}::Add(${2:\\$user_id}, ${2:\\$log_id})$0"},
		{"trigger": "CSocNetLogFavorites::Change", "contents": "${1:CSocNetLogFavorites}::Change(${2:\\$user_id}, ${2:\\$log_id})$0"},
		{"trigger": "CSocNetLogRights::Add", "contents": "${1:CSocNetLogRights}::Add(${2:\\$LOG_ID}, ${2:\\$GROUP_CODE})$0"},
		{"trigger": "CSocNetLogRights::CheckForUser", "contents": "${1:CSocNetLogRights}::CheckForUser(${2:\\$logID}, ${2:\\$userID}, ${4:\\$siteID = SITE_ID})$0"},
		{"trigger": "CSocNetLogRights::Delete", "contents": "${1:CSocNetLogRights}::Delete(${2:\\$RIGHT_ID})$0"},
		{"trigger": "CSocNetLogRights::DeleteByLogID", "contents": "${1:CSocNetLogRights}::DeleteByLogID(${2:\\$LOG_ID})$0"},
		{"trigger": "CSocNetLogRights::GetList", "contents": "${1:CSocNetLogRights}::GetList(${2:\\$aSort=array()}, ${2:\\$aFilter=array()})$0"},
		{"trigger": "CSocNetLogRights::SetForSonet", "contents": "${1:CSocNetLogRights}::SetForSonet(${2:\\$logID}, ${2:\\$entity_type}, ${4:\\$entity_id}, ${4:\\$feature}, ${6:\\$operation}, ${6:\\$bNew = false})$0"},
		{"trigger": "CSocNetLogRights::Update", "contents": "${1:CSocNetLogRights}::Update(${2:\\$RIGHT_ID}, ${2:\\$GROUP_CODE})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Blog", "contents": "${1:CSocNetLogTools}::AddComment_Blog(${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Files", "contents": "${1:CSocNetLogTools}::AddComment_Files(${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Forum", "contents": "${1:CSocNetLogTools}::AddComment_Forum(${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Microblog", "contents": "${1:CSocNetLogTools}::AddComment_Microblog(${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Photo", "contents": "${1:CSocNetLogTools}::AddComment_Photo(${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Photo_Blog", "contents": "${1:CSocNetLogTools}::AddComment_Photo_Blog(${2:\\$arFields}, ${2:\\$BLOG_ID}, ${4:\\$arLog})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Photo_Forum", "contents": "${1:CSocNetLogTools}::AddComment_Photo_Forum(${2:\\$arFields}, ${2:\\$FORUM_ID}, ${4:\\$arLog})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_CheckIBlock", "contents": "${1:CSocNetLogTools}::AddComment_Review_CheckIBlock(${2:\\$arElement})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_CheckIBlock_Blog", "contents": "${1:CSocNetLogTools}::AddComment_Review_CheckIBlock_Blog(${2:\\$arElement})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_CheckIBlock_Forum", "contents": "${1:CSocNetLogTools}::AddComment_Review_CheckIBlock_Forum(${2:\\$arElement})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_CreateRoot", "contents": "${1:CSocNetLogTools}::AddComment_Review_CreateRoot(${2:\\$arElement}, ${2:\\$forumID}, ${4:\\$bPostFirstMessage = false}, ${4:\\$strFirstMessage = ''})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_CreateRoot_Blog", "contents": "${1:CSocNetLogTools}::AddComment_Review_CreateRoot_Blog(${2:\\$arElement}, ${2:\\$blogID})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_CreateRoot_Forum", "contents": "${1:CSocNetLogTools}::AddComment_Review_CreateRoot_Forum(${2:\\$arElement}, ${2:\\$forumID}, ${4:\\$bPostFirstMessage = false}, ${4:\\$strFirstMessage = ''})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_UpdateElement", "contents": "${1:CSocNetLogTools}::AddComment_Review_UpdateElement(${2:\\$arElement}, ${2:\\$topicID}, ${4:\\$bNewTopic})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_UpdateElement_Blog", "contents": "${1:CSocNetLogTools}::AddComment_Review_UpdateElement_Blog(${2:\\$arElement}, ${2:\\$postID}, ${4:\\$blogID}, ${4:\\$bNewPost})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Review_UpdateElement_Forum", "contents": "${1:CSocNetLogTools}::AddComment_Review_UpdateElement_Forum(${2:\\$arElement}, ${2:\\$topicID}, ${4:\\$bNewTopic})$0"},
		{"trigger": "CSocNetLogTools::AddComment_Tasks", "contents": "${1:CSocNetLogTools}::AddComment_Tasks(${2:\\$arFields})$0"},
		{"trigger": "CSocNetLogTools::FindFeatureByEventID", "contents": "${1:CSocNetLogTools}::FindFeatureByEventID(${2:\\$event_id})$0"},
		{"trigger": "CSocNetLogTools::FindFullSetByEventID", "contents": "${1:CSocNetLogTools}::FindFullSetByEventID(${2:\\$event_id})$0"},
		{"trigger": "CSocNetLogTools::FindFullSetEventIDByEventID", "contents": "${1:CSocNetLogTools}::FindFullSetEventIDByEventID(${2:\\$event_id})$0"},
		{"trigger": "CSocNetLogTools::FindLogCommentEventByID", "contents": "${1:CSocNetLogTools}::FindLogCommentEventByID(${2:\\$event_id})$0"},
		{"trigger": "CSocNetLogTools::FindLogCommentEventByLogEventID", "contents": "${1:CSocNetLogTools}::FindLogCommentEventByLogEventID(${2:\\$log_event_id})$0"},
		{"trigger": "CSocNetLogTools::FindLogEventByCommentID", "contents": "${1:CSocNetLogTools}::FindLogEventByCommentID(${2:\\$event_id})$0"},
		{"trigger": "CSocNetLogTools::FindLogEventByID", "contents": "${1:CSocNetLogTools}::FindLogEventByID(${2:\\$event_id}, ${2:\\$entity_type = false})$0"},
		{"trigger": "CSocNetLogTools::FormatComment_Blog", "contents": "${1:CSocNetLogTools}::FormatComment_Blog(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false}, ${4:\\$arLog = array()})$0"},
		{"trigger": "CSocNetLogTools::FormatComment_Files", "contents": "${1:CSocNetLogTools}::FormatComment_Files(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false}, ${4:\\$arLog = array()})$0"},
		{"trigger": "CSocNetLogTools::FormatComment_Forum", "contents": "${1:CSocNetLogTools}::FormatComment_Forum(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false}, ${4:\\$arLog = array()})$0"},
		{"trigger": "CSocNetLogTools::FormatComment_Microblog", "contents": "${1:CSocNetLogTools}::FormatComment_Microblog(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false}, ${4:\\$arLog = array()})$0"},
		{"trigger": "CSocNetLogTools::FormatComment_Photo", "contents": "${1:CSocNetLogTools}::FormatComment_Photo(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false}, ${4:\\$arLog = array()})$0"},
		{"trigger": "CSocNetLogTools::FormatDestinationFromRights", "contents": "${1:CSocNetLogTools}::FormatDestinationFromRights(${2:\\$arRights}, ${2:\\$arParams}, ${4:&\\$iMoreCount = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_Blog", "contents": "${1:CSocNetLogTools}::FormatEvent_Blog(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_CreateAvatar", "contents": "${1:CSocNetLogTools}::FormatEvent_CreateAvatar(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$source = 'CREATED_BY_'})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_CreateAvatarGroup", "contents": "${1:CSocNetLogTools}::FormatEvent_CreateAvatarGroup(${2:\\$arFields}, ${2:\\$arParams})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_Files", "contents": "${1:CSocNetLogTools}::FormatEvent_Files(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_FillTooltip", "contents": "${1:CSocNetLogTools}::FormatEvent_FillTooltip(${2:\\$arFields}, ${2:\\$arParams})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_Forum", "contents": "${1:CSocNetLogTools}::FormatEvent_Forum(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_GetCreatedBy", "contents": "${1:CSocNetLogTools}::FormatEvent_GetCreatedBy(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail}, ${4:\\$bFirstCaps = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_GetEntity", "contents": "${1:CSocNetLogTools}::FormatEvent_GetEntity(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_GetURL", "contents": "${1:CSocNetLogTools}::FormatEvent_GetURL(${2:\\$arFields}, ${2:\\$bAbsolute = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_IsMessageShort", "contents": "${1:CSocNetLogTools}::FormatEvent_IsMessageShort(${2:\\$message}, ${2:\\$short_message = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_Microblog", "contents": "${1:CSocNetLogTools}::FormatEvent_Microblog(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_Photo", "contents": "${1:CSocNetLogTools}::FormatEvent_Photo(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_PhotoPhoto", "contents": "${1:CSocNetLogTools}::FormatEvent_PhotoPhoto(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_System", "contents": "${1:CSocNetLogTools}::FormatEvent_System(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_SystemFriends", "contents": "${1:CSocNetLogTools}::FormatEvent_SystemFriends(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_SystemGroups", "contents": "${1:CSocNetLogTools}::FormatEvent_SystemGroups(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_Task", "contents": "${1:CSocNetLogTools}::FormatEvent_Task(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::FormatEvent_Task2", "contents": "${1:CSocNetLogTools}::FormatEvent_Task2(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CSocNetLogTools::GetCacheLastLogID", "contents": "${1:CSocNetLogTools}::GetCacheLastLogID(${2:\\$type = 'log'})$0"},
		{"trigger": "CSocNetLogTools::GetUserCache", "contents": "${1:CSocNetLogTools}::GetUserCache(${2:\\$type = 'log'}, ${2:\\$user_id})$0"},
		{"trigger": "CSocNetLogTools::HasLogEventCreatedBy", "contents": "${1:CSocNetLogTools}::HasLogEventCreatedBy(${2:\\$event_id})$0"},
		{"trigger": "CSocNetLogTools::OnAfterPhotoDrop", "contents": "${1:CSocNetLogTools}::OnAfterPhotoDrop(${2:\\$arFields}, ${2:\\$arComponentParams})$0"},
		{"trigger": "CSocNetLogTools::OnAfterPhotoUpload", "contents": "${1:CSocNetLogTools}::OnAfterPhotoUpload(${2:\\$arFields}, ${2:\\$arComponentParams}, ${4:\\$arComponentResult})$0"},
		{"trigger": "CSocNetLogTools::OnAfterSectionDrop", "contents": "${1:CSocNetLogTools}::OnAfterSectionDrop(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$arComponentParams}, ${4:\\$arComponentResult})$0"},
		{"trigger": "CSocNetLogTools::OnAfterSectionEdit", "contents": "${1:CSocNetLogTools}::OnAfterSectionEdit(${2:\\$arFields}, ${2:\\$arComponentParams}, ${4:\\$arComponentResult})$0"},
		{"trigger": "CSocNetLogTools::OnBeforeSectionDrop", "contents": "${1:CSocNetLogTools}::OnBeforeSectionDrop(${2:\\$sectionID}, ${2:\\$arComponentParams}, ${4:\\$arComponentResult}, ${4:&\\$arSectionID}, ${6:&\\$arElementID})$0"},
		{"trigger": "CSocNetLogTools::SetCacheLastLogID", "contents": "${1:CSocNetLogTools}::SetCacheLastLogID(${2:\\$type = 'log'}, ${2:\\$id})$0"},
		{"trigger": "CSocNetLogTools::SetUserCache", "contents": "${1:CSocNetLogTools}::SetUserCache(${2:\\$type = 'log'}, ${2:\\$user_id}, ${4:\\$max_id}, ${4:\\$max_viewed_id}, ${6:\\$count}, ${6:\\$bSetViewTime = false}, ${8:\\$LastViewTS = 0})$0"},
		{"trigger": "CSocNetLogTools::ShowGroup", "contents": "${1:CSocNetLogTools}::ShowGroup(${2:\\$arEntityDesc}, ${2:\\$strEntityURL}, ${4:\\$arParams})$0"},
		{"trigger": "CSocNetLogTools::ShowUser", "contents": "${1:CSocNetLogTools}::ShowUser(${2:\\$arEntityDesc}, ${2:\\$strEntityURL}, ${4:\\$arParams})$0"},
		{"trigger": "CSocNetLogTools::__DestinationRightsSort", "contents": "${1:CSocNetLogTools}::__DestinationRightsSort(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CSocNetMessages::Add", "contents": "${1:CSocNetMessages}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetMessages::CheckFields", "contents": "${1:CSocNetMessages}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetMessages::CreateMessage", "contents": "${1:CSocNetMessages}::CreateMessage(${2:\\$senderUserID}, ${2:\\$targetUserID}, ${4:\\$message}, ${4:\\$title = false})$0"},
		{"trigger": "CSocNetMessages::Delete", "contents": "${1:CSocNetMessages}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetMessages::DeleteConversation", "contents": "${1:CSocNetMessages}::DeleteConversation(${2:\\$CurrentUserID}, ${2:\\$PartnerUserID})$0"},
		{"trigger": "CSocNetMessages::DeleteMessage", "contents": "${1:CSocNetMessages}::DeleteMessage(${2:\\$ID}, ${2:\\$userID}, ${4:\\$bCheckMessages = true})$0"},
		{"trigger": "CSocNetMessages::DeleteMessageMultiple", "contents": "${1:CSocNetMessages}::DeleteMessageMultiple(${2:\\$userID}, ${2:\\$arIDs})$0"},
		{"trigger": "CSocNetMessages::DeleteNoDemand", "contents": "${1:CSocNetMessages}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetMessages::GetByID", "contents": "${1:CSocNetMessages}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetMessages::GetChatLastDate", "contents": "${1:CSocNetMessages}::GetChatLastDate(${2:\\$currentUserID}, ${2:\\$userID})$0"},
		{"trigger": "CSocNetMessages::GetList", "contents": "${1:CSocNetMessages}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetMessages::GetMessagesForChat", "contents": "${1:CSocNetMessages}::GetMessagesForChat(${2:\\$currentUserID}, ${2:\\$userID}, ${4:\\$date = false}, ${4:\\$arNavStartParams = false}, ${6:\\$replyMessId=false})$0"},
		{"trigger": "CSocNetMessages::GetMessagesUsers", "contents": "${1:CSocNetMessages}::GetMessagesUsers(${2:\\$userID}, ${2:\\$arNavStartParams = false}, ${4:\\$online_interval = 120})$0"},
		{"trigger": "CSocNetMessages::MarkMessageRead", "contents": "${1:CSocNetMessages}::MarkMessageRead(${2:\\$senderUserID}, ${2:\\$messageID}, ${4:\\$bRead = true})$0"},
		{"trigger": "CSocNetMessages::MarkMessageReadMultiple", "contents": "${1:CSocNetMessages}::MarkMessageReadMultiple(${2:\\$userID}, ${2:\\$arIDs})$0"},
		{"trigger": "CSocNetMessages::Now", "contents": "${1:CSocNetMessages}::Now()$0"},
		{"trigger": "CSocNetMessages::SendEvent", "contents": "${1:CSocNetMessages}::SendEvent(${2:\\$messageID}, ${2:\\$mailTemplate = 'SONET_NEW_MESSAGE'})$0"},
		{"trigger": "CSocNetMessages::SendEventAgent", "contents": "${1:CSocNetMessages}::SendEventAgent()$0"},
		{"trigger": "CSocNetMessages::SpeedFileExists", "contents": "${1:CSocNetMessages}::SpeedFileExists(${2:\\$userID})$0"},
		{"trigger": "CSocNetMessages::Update", "contents": "${1:CSocNetMessages}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetMessages::__SpeedFileCheckMessages", "contents": "${1:CSocNetMessages}::__SpeedFileCheckMessages(${2:\\$userID})$0"},
		{"trigger": "CSocNetMessages::__SpeedFileCreate", "contents": "${1:CSocNetMessages}::__SpeedFileCreate(${2:\\$userID})$0"},
		{"trigger": "CSocNetMessages::__SpeedFileDelete", "contents": "${1:CSocNetMessages}::__SpeedFileDelete(${2:\\$userID})$0"},
		{"trigger": "CSocNetNotifySchema::OnGetNotifySchema", "contents": "${1:CSocNetNotifySchema}::OnGetNotifySchema()$0"},
		{"trigger": "CSocNetNotifySchema::__construct", "contents": "${1:CSocNetNotifySchema}::__construct()$0"},
		{"trigger": "CSocNetPhotoCommentEvent::OnAfterPhotoCommentAddBlog", "contents": "${1:CSocNetPhotoCommentEvent}::OnAfterPhotoCommentAddBlog(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetPhotoCommentEvent::OnAfterPhotoCommentAddForum", "contents": "${1:CSocNetPhotoCommentEvent}::OnAfterPhotoCommentAddForum(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetPhotoCommentEvent::SetVars", "contents": "${1:CSocNetPhotoCommentEvent}::SetVars(${2:\\$arParams}, ${2:\\$arResult})$0"},
		{"trigger": "CSocNetSearch::BeforeIndex", "contents": "${1:CSocNetSearch}::BeforeIndex(${2:\\$arFields})$0"},
		{"trigger": "CSocNetSearch::BeforeIndexForum", "contents": "${1:CSocNetSearch}::BeforeIndexForum(${2:\\$arFields}, ${2:\\$entity_type}, ${4:\\$entity_id}, ${4:\\$feature}, ${6:\\$operation}, ${6:\\$path_template})$0"},
		{"trigger": "CSocNetSearch::CSocNetSearch", "contents": "${1:CSocNetSearch}::CSocNetSearch(${2:\\$user_id}, ${2:\\$group_id}, ${4:\\$arParams})$0"},
		{"trigger": "CSocNetSearch::GetSearchGroups", "contents": "${1:CSocNetSearch}::GetSearchGroups(${2:\\$entity_type}, ${2:\\$entity_id}, ${4:\\$feature}, ${4:\\$operation})$0"},
		{"trigger": "CSocNetSearch::GetSearchParams", "contents": "${1:CSocNetSearch}::GetSearchParams(${2:\\$entity_type}, ${2:\\$entity_id}, ${4:\\$feature}, ${4:\\$operation})$0"},
		{"trigger": "CSocNetSearch::IBlockElementDelete", "contents": "${1:CSocNetSearch}::IBlockElementDelete(${2:\\$zr})$0"},
		{"trigger": "CSocNetSearch::IBlockElementUpdate", "contents": "${1:CSocNetSearch}::IBlockElementUpdate(${2:&\\$arFields})$0"},
		{"trigger": "CSocNetSearch::IBlockSectionDelete", "contents": "${1:CSocNetSearch}::IBlockSectionDelete(${2:\\$zr})$0"},
		{"trigger": "CSocNetSearch::IBlockSectionUpdate", "contents": "${1:CSocNetSearch}::IBlockSectionUpdate(${2:&\\$arFields})$0"},
		{"trigger": "CSocNetSearch::IndexIBlockElement", "contents": "${1:CSocNetSearch}::IndexIBlockElement(${2:\\$arFields}, ${2:\\$entity_id}, ${4:\\$entity_type}, ${4:\\$feature}, ${6:\\$operation}, ${6:\\$path_template}, ${8:\\$arFieldList})$0"},
		{"trigger": "CSocNetSearch::IndexIBlockSection", "contents": "${1:CSocNetSearch}::IndexIBlockSection(${2:\\$arFields}, ${2:\\$entity_id}, ${4:\\$entity_type}, ${4:\\$feature}, ${6:\\$operation}, ${6:\\$path_template})$0"},
		{"trigger": "CSocNetSearch::OnAfterIndexAdd", "contents": "${1:CSocNetSearch}::OnAfterIndexAdd(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetSearch::OnBeforeIndexUpdate", "contents": "${1:CSocNetSearch}::OnBeforeIndexUpdate(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetSearch::OnSearchCheckPermissions", "contents": "${1:CSocNetSearch}::OnSearchCheckPermissions(${2:\\$FIELD})$0"},
		{"trigger": "CSocNetSearch::OnSearchPrepareFilter", "contents": "${1:CSocNetSearch}::OnSearchPrepareFilter(${2:\\$strSearchContentAlias}, ${2:\\$field}, ${4:\\$val})$0"},
		{"trigger": "CSocNetSearch::OnSearchReindex", "contents": "${1:CSocNetSearch}::OnSearchReindex(${2:\\$NS = array()}, ${2:\\$oCallback = NULL}, ${4:\\$callback_method = ''})$0"},
		{"trigger": "CSocNetSearch::OnUserRelationsChange", "contents": "${1:CSocNetSearch}::OnUserRelationsChange(${2:\\$user_id})$0"},
		{"trigger": "CSocNetSearch::SetFeaturePermissions", "contents": "${1:CSocNetSearch}::SetFeaturePermissions(${2:\\$entity_type}, ${2:\\$entity_id}, ${4:\\$feature}, ${4:\\$operation}, ${6:\\$new_perm})$0"},
		{"trigger": "CSocNetSearch::Url", "contents": "${1:CSocNetSearch}::Url(${2:\\$url}, ${2:\\$params}, ${4:\\$ancor})$0"},
		{"trigger": "CSocNetSearch::__construct", "contents": "${1:CSocNetSearch}::__construct(${2:\\$user_id}, ${2:\\$group_id}, ${4:\\$arParams})$0"},
		{"trigger": "CSocNetSearchReindex::CSocNetSearchReindex", "contents": "${1:CSocNetSearchReindex}::CSocNetSearchReindex(${2:\\$user_id=0}, ${2:\\$group_id=0}, ${4:\\$arParams=array()})$0"},
		{"trigger": "CSocNetSearchReindex::GetBlog", "contents": "${1:CSocNetSearchReindex}::GetBlog(${2:\\$ID})$0"},
		{"trigger": "CSocNetSearchReindex::GetCounter", "contents": "${1:CSocNetSearchReindex}::GetCounter()$0"},
		{"trigger": "CSocNetSearchReindex::IndexBlogItemGroup", "contents": "${1:CSocNetSearchReindex}::IndexBlogItemGroup(${2:\\$arFields})$0"},
		{"trigger": "CSocNetSearchReindex::IndexBlogItemUser", "contents": "${1:CSocNetSearchReindex}::IndexBlogItemUser(${2:\\$arFields})$0"},
		{"trigger": "CSocNetSearchReindex::IndexItem", "contents": "${1:CSocNetSearchReindex}::IndexItem(${2:\\$arFields})$0"},
		{"trigger": "CSocNetSearchReindex::InitSession", "contents": "${1:CSocNetSearchReindex}::InitSession(${2:\\$arType})$0"},
		{"trigger": "CSocNetSearchReindex::OnBeforeFullReindexClear", "contents": "${1:CSocNetSearchReindex}::OnBeforeFullReindexClear()$0"},
		{"trigger": "CSocNetSearchReindex::OnBeforeIndexDelete", "contents": "${1:CSocNetSearchReindex}::OnBeforeIndexDelete(${2:\\$strWhere})$0"},
		{"trigger": "CSocNetSearchReindex::ReindexBlog", "contents": "${1:CSocNetSearchReindex}::ReindexBlog(${2:\\$entity_type}, ${2:\\$last_id})$0"},
		{"trigger": "CSocNetSearchReindex::ReindexForum", "contents": "${1:CSocNetSearchReindex}::ReindexForum(${2:\\$entity_type}, ${2:\\$last_id}, ${4:\\$path_template})$0"},
		{"trigger": "CSocNetSearchReindex::ReindexGroupTasks", "contents": "${1:CSocNetSearchReindex}::ReindexGroupTasks(${2:\\$iblock_id}, ${2:\\$path}, ${4:\\$last_id})$0"},
		{"trigger": "CSocNetSearchReindex::ReindexGroups", "contents": "${1:CSocNetSearchReindex}::ReindexGroups(${2:\\$last_id})$0"},
		{"trigger": "CSocNetSearchReindex::ReindexIBlock", "contents": "${1:CSocNetSearchReindex}::ReindexIBlock(${2:\\$iblock_id}, ${2:\\$entity_type}, ${4:\\$feature}, ${4:\\$operation}, ${6:\\$path_template}, ${6:\\$arFieldList}, ${8:\\$last_id})$0"},
		{"trigger": "CSocNetSearchReindex::ReindexUserTasks", "contents": "${1:CSocNetSearchReindex}::ReindexUserTasks(${2:\\$arSection}, ${2:\\$path}, ${4:\\$last_id})$0"},
		{"trigger": "CSocNetSearchReindex::StepIndex", "contents": "${1:CSocNetSearchReindex}::StepIndex(${2:\\$arSteps}, ${2:\\$current_step}, ${4:\\$last_id}, ${4:\\$timeout=0})$0"},
		{"trigger": "CSocNetSearchReindex::UpdateForumTopicIndex", "contents": "${1:CSocNetSearchReindex}::UpdateForumTopicIndex(${2:\\$topic_id}, ${2:\\$entity_type}, ${4:\\$entity_id}, ${4:\\$feature}, ${6:\\$operation}, ${6:\\$path_template})$0"},
		{"trigger": "CSocNetSearchReindex::__construct", "contents": "${1:CSocNetSearchReindex}::__construct(${2:\\$user_id=0}, ${2:\\$group_id=0}, ${4:\\$arParams=array()})$0"},
		{"trigger": "CSocNetSmile::Add", "contents": "${1:CSocNetSmile}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetSmile::CheckFields", "contents": "${1:CSocNetSmile}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields})$0"},
		{"trigger": "CSocNetSmile::Delete", "contents": "${1:CSocNetSmile}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetSmile::GetByID", "contents": "${1:CSocNetSmile}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetSmile::GetByIDEx", "contents": "${1:CSocNetSmile}::GetByIDEx(${2:\\$ID}, ${2:\\$strLang})$0"},
		{"trigger": "CSocNetSmile::GetLangByID", "contents": "${1:CSocNetSmile}::GetLangByID(${2:\\$SMILE_ID}, ${2:\\$strLang})$0"},
		{"trigger": "CSocNetSmile::GetList", "contents": "${1:CSocNetSmile}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetSmile::PrintSmilesList", "contents": "${1:CSocNetSmile}::PrintSmilesList(${2:\\$num_cols}, ${2:\\$strLang = False}, ${4:\\$strPath2Icons = False}, ${4:\\$cacheTime = False})$0"},
		{"trigger": "CSocNetSmile::Update", "contents": "${1:CSocNetSmile}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetTextParser::CSocNetTextParser", "contents": "${1:CSocNetTextParser}::CSocNetTextParser(${2:\\$strLang = False}, ${2:\\$pathToSmile = false})$0"},
		{"trigger": "CSocNetTextParser::closetags", "contents": "${1:CSocNetTextParser}::closetags(${2:\\$html})$0"},
		{"trigger": "CSocNetTextParser::convert", "contents": "${1:CSocNetTextParser}::convert(${2:\\$text}, ${2:\\$bPreview = True}, ${4:\\$arImages = array()}, ${4:\\$allow = array('HTML' => 'N'}, ${6:'ANCHOR' => 'Y'}, ${6:'BIU' => 'Y'}, ${8:'IMG' => 'Y'}, ${8:'QUOTE' => 'Y'}, ${10:'CODE' => 'Y'}, ${20:'FONT' => 'Y'}, ${22:'LIST' => 'Y'}, ${22:'SMILES' => 'Y'}, ${24:'NL2BR' => 'N')})$0"},
		{"trigger": "CSocNetTextParser::convert4mail", "contents": "${1:CSocNetTextParser}::convert4mail(${2:\\$text})$0"},
		{"trigger": "CSocNetTextParser::convert_anchor_tag", "contents": "${1:CSocNetTextParser}::convert_anchor_tag(${2:\\$url}, ${2:\\$text}, ${4:\\$pref=''})$0"},
		{"trigger": "CSocNetTextParser::convert_close_quote_tag", "contents": "${1:CSocNetTextParser}::convert_close_quote_tag()$0"},
		{"trigger": "CSocNetTextParser::convert_close_quote_tag_rss", "contents": "${1:CSocNetTextParser}::convert_close_quote_tag_rss()$0"},
		{"trigger": "CSocNetTextParser::convert_close_tag", "contents": "${1:CSocNetTextParser}::convert_close_tag(${2:\\$marker = 'quote'})$0"},
		{"trigger": "CSocNetTextParser::convert_code_tag", "contents": "${1:CSocNetTextParser}::convert_code_tag(${2:\\$text = ''})$0"},
		{"trigger": "CSocNetTextParser::convert_code_tag_rss", "contents": "${1:CSocNetTextParser}::convert_code_tag_rss(${2:\\$text = ''})$0"},
		{"trigger": "CSocNetTextParser::convert_emoticon", "contents": "${1:CSocNetTextParser}::convert_emoticon(${2:\\$code = ''}, ${2:\\$image = ''}, ${4:\\$description = ''}, ${4:\\$servername = ''})$0"},
		{"trigger": "CSocNetTextParser::convert_font_attr", "contents": "${1:CSocNetTextParser}::convert_font_attr(${2:\\$attr}, ${2:\\$value = ''}, ${4:\\$text = ''})$0"},
		{"trigger": "CSocNetTextParser::convert_image_tag", "contents": "${1:CSocNetTextParser}::convert_image_tag(${2:\\$url = ''})$0"},
		{"trigger": "CSocNetTextParser::convert_open_3_tag_rss", "contents": "${1:CSocNetTextParser}::convert_open_3_tag_rss()$0"},
		{"trigger": "CSocNetTextParser::convert_open_quote_tag", "contents": "${1:CSocNetTextParser}::convert_open_quote_tag()$0"},
		{"trigger": "CSocNetTextParser::convert_open_tag", "contents": "${1:CSocNetTextParser}::convert_open_tag(${2:\\$marker = 'quote'}, ${2:\\$type = 'html'})$0"},
		{"trigger": "CSocNetTextParser::convert_quote_tag", "contents": "${1:CSocNetTextParser}::convert_quote_tag(${2:\\$text = ''})$0"},
		{"trigger": "CSocNetTextParser::convert_quote_tag_rss", "contents": "${1:CSocNetTextParser}::convert_quote_tag_rss(${2:\\$text = ''})$0"},
		{"trigger": "CSocNetTextParser::convert_to_rss", "contents": "${1:CSocNetTextParser}::convert_to_rss(${2:\\$text}, ${2:\\$arImages = array()}, ${4:\\$allow = array('HTML' => 'N'}, ${4:'ANCHOR' => 'Y'}, ${6:'BIU' => 'Y'}, ${6:'IMG' => 'Y'}, ${8:'QUOTE' => 'Y'}, ${8:'CODE' => 'Y'}, ${10:'FONT' => 'Y'}, ${20:'LIST' => 'Y'}, ${22:'SMILES' => 'Y'}, ${22:'NL2BR' => 'N')})$0"},
		{"trigger": "CSocNetTextParser::convert_video", "contents": "${1:CSocNetTextParser}::convert_video(${2:\\$params}, ${2:\\$path})$0"},
		{"trigger": "CSocNetTextParser::cut_long_words", "contents": "${1:CSocNetTextParser}::cut_long_words(${2:\\$str})$0"},
		{"trigger": "CSocNetTextParser::html_cut", "contents": "${1:CSocNetTextParser}::html_cut(${2:\\$html}, ${2:\\$size})$0"},
		{"trigger": "CSocNetTextParser::killAllTags", "contents": "${1:CSocNetTextParser}::killAllTags(${2:\\$text})$0"},
		{"trigger": "CSocNetTextParser::part_long_words", "contents": "${1:CSocNetTextParser}::part_long_words(${2:\\$str1}, ${2:\\$str2}, ${4:\\$str3})$0"},
		{"trigger": "CSocNetTextParser::pre_convert_code_tag", "contents": "${1:CSocNetTextParser}::pre_convert_code_tag(${2:\\$text = ''})$0"},
		{"trigger": "CSocNetTextParser::sonet_sortlen", "contents": "${1:CSocNetTextParser}::sonet_sortlen(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CSocNetTextParser::strip_words", "contents": "${1:CSocNetTextParser}::strip_words(${2:\\$string}, ${2:\\$count})$0"},
		{"trigger": "CSocNetTextParser::wrap_long_words", "contents": "${1:CSocNetTextParser}::wrap_long_words(${2:\\$text=''})$0"},
		{"trigger": "CSocNetTools::Birthday", "contents": "${1:CSocNetTools}::Birthday(${2:\\$datetime}, ${2:\\$gender}, ${4:\\$showYear = 'N'})$0"},
		{"trigger": "CSocNetTools::GetDateTimeFormat", "contents": "${1:CSocNetTools}::GetDateTimeFormat()$0"},
		{"trigger": "CSocNetTools::GetDefaultNameTemplates", "contents": "${1:CSocNetTools}::GetDefaultNameTemplates()$0"},
		{"trigger": "CSocNetTools::GetGroupUsers", "contents": "${1:CSocNetTools}::GetGroupUsers(${2:\\$group_id})$0"},
		{"trigger": "CSocNetTools::GetMyGroups", "contents": "${1:CSocNetTools}::GetMyGroups()$0"},
		{"trigger": "CSocNetTools::GetMyUsers", "contents": "${1:CSocNetTools}::GetMyUsers(${2:\\$user_id = false})$0"},
		{"trigger": "CSocNetTools::HasLogEventCreatedBy", "contents": "${1:CSocNetTools}::HasLogEventCreatedBy(${2:\\$event_id})$0"},
		{"trigger": "CSocNetTools::InitImage", "contents": "${1:CSocNetTools}::InitImage(${2:\\$imageID}, ${2:\\$imageSize}, ${4:\\$defaultImage}, ${4:\\$defaultImageSize}, ${6:\\$imageUrl}, ${6:\\$showImageUrl}, ${8:\\$urlParams=false})$0"},
		{"trigger": "CSocNetTools::IsMyGroup", "contents": "${1:CSocNetTools}::IsMyGroup(${2:\\$entity_id})$0"},
		{"trigger": "CSocNetTools::IsMyUser", "contents": "${1:CSocNetTools}::IsMyUser(${2:\\$entity_id})$0"},
		{"trigger": "CSocNetTools::ResizeImage", "contents": "${1:CSocNetTools}::ResizeImage(${2:\\$aFile}, ${2:\\$sizeX}, ${4:\\$sizeY})$0"},
		{"trigger": "CSocNetTools::htmlspecialcharsExarray", "contents": "${1:CSocNetTools}::htmlspecialcharsExarray(${2:\\$array})$0"},
		{"trigger": "CSocNetUpdater::Run", "contents": "${1:CSocNetUpdater}::Run(${2:\\$version})$0"},
		{"trigger": "CSocNetUser::FormatNameEx", "contents": "${1:CSocNetUser}::FormatNameEx(${2:\\$name}, ${2:\\$secondName}, ${4:\\$lastName}, ${4:\\$login}, ${6:\\$email}, ${6:\\$id})$0"},
		{"trigger": "CSocNetUser::GetByID", "contents": "${1:CSocNetUser}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetUser::IsCurrentUserModuleAdmin", "contents": "${1:CSocNetUser}::IsCurrentUserModuleAdmin(${2:\\$site_id = SITE_ID})$0"},
		{"trigger": "CSocNetUser::IsFriendsAllowed", "contents": "${1:CSocNetUser}::IsFriendsAllowed()$0"},
		{"trigger": "CSocNetUser::IsOnLine", "contents": "${1:CSocNetUser}::IsOnLine(${2:\\$userID})$0"},
		{"trigger": "CSocNetUser::IsUserModuleAdmin", "contents": "${1:CSocNetUser}::IsUserModuleAdmin(${2:\\$userID}, ${2:\\$site_id = SITE_ID})$0"},
		{"trigger": "CSocNetUser::OnAfterUserAdd", "contents": "${1:CSocNetUser}::OnAfterUserAdd(${2:&\\$arFields})$0"},
		{"trigger": "CSocNetUser::OnAfterUserUpdate", "contents": "${1:CSocNetUser}::OnAfterUserUpdate(${2:&\\$arFields})$0"},
		{"trigger": "CSocNetUser::OnBeforeProlog", "contents": "${1:CSocNetUser}::OnBeforeProlog()$0"},
		{"trigger": "CSocNetUser::OnBeforeUserUpdate", "contents": "${1:CSocNetUser}::OnBeforeUserUpdate(${2:&\\$arFields})$0"},
		{"trigger": "CSocNetUser::OnUserDelete", "contents": "${1:CSocNetUser}::OnUserDelete(${2:\\$ID})$0"},
		{"trigger": "CSocNetUser::OnUserInitialize", "contents": "${1:CSocNetUser}::OnUserInitialize(${2:\\$user_id}, ${2:\\$arFields = array()})$0"},
		{"trigger": "CSocNetUser::SearchUser", "contents": "${1:CSocNetUser}::SearchUser(${2:\\$user}, ${2:\\$bIntranet = false})$0"},
		{"trigger": "CSocNetUser::SearchUsers", "contents": "${1:CSocNetUser}::SearchUsers(${2:\\$searchString}, ${2:\\$groupId = 0}, ${4:\\$numberOfUsers = 10})$0"},
		{"trigger": "CSocNetUserAuthProvider::UpdateCodes", "contents": "${1:CSocNetUserAuthProvider}::UpdateCodes(${2:\\$USER_ID})$0"},
		{"trigger": "CSocNetUserAuthProvider::__construct", "contents": "${1:CSocNetUserAuthProvider}::__construct()$0"},
		{"trigger": "CSocNetUserEvents::Add", "contents": "${1:CSocNetUserEvents}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetUserEvents::CheckFields", "contents": "${1:CSocNetUserEvents}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetUserEvents::Delete", "contents": "${1:CSocNetUserEvents}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetUserEvents::DeleteNoDemand", "contents": "${1:CSocNetUserEvents}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserEvents::GetByID", "contents": "${1:CSocNetUserEvents}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetUserEvents::GetEventSite", "contents": "${1:CSocNetUserEvents}::GetEventSite(${2:\\$userID}, ${2:\\$event}, ${4:\\$defSiteID})$0"},
		{"trigger": "CSocNetUserEvents::GetList", "contents": "${1:CSocNetUserEvents}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetUserEvents::Update", "contents": "${1:CSocNetUserEvents}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetUserPerms::Add", "contents": "${1:CSocNetUserPerms}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetUserPerms::CanPerformOperation", "contents": "${1:CSocNetUserPerms}::CanPerformOperation(${2:\\$fromUserID}, ${2:\\$toUserID}, ${4:\\$operation}, ${4:\\$bCurrentUserIsAdmin = false})$0"},
		{"trigger": "CSocNetUserPerms::CheckFields", "contents": "${1:CSocNetUserPerms}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetUserPerms::Delete", "contents": "${1:CSocNetUserPerms}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetUserPerms::DeleteNoDemand", "contents": "${1:CSocNetUserPerms}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserPerms::GetByID", "contents": "${1:CSocNetUserPerms}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetUserPerms::GetList", "contents": "${1:CSocNetUserPerms}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetUserPerms::GetOperationPerms", "contents": "${1:CSocNetUserPerms}::GetOperationPerms(${2:\\$userID}, ${2:\\$operation})$0"},
		{"trigger": "CSocNetUserPerms::InitUserPerms", "contents": "${1:CSocNetUserPerms}::InitUserPerms(${2:\\$currentUserID}, ${2:\\$userID}, ${4:\\$bCurrentUserIsAdmin})$0"},
		{"trigger": "CSocNetUserPerms::SetPerm", "contents": "${1:CSocNetUserPerms}::SetPerm(${2:\\$userID}, ${2:\\$feature}, ${4:\\$perm})$0"},
		{"trigger": "CSocNetUserPerms::Update", "contents": "${1:CSocNetUserPerms}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetUserRelations::Add", "contents": "${1:CSocNetUserRelations}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetUserRelations::BanUser", "contents": "${1:CSocNetUserRelations}::BanUser(${2:\\$senderUserID}, ${2:\\$targetUserID})$0"},
		{"trigger": "CSocNetUserRelations::CheckFields", "contents": "${1:CSocNetUserRelations}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetUserRelations::ConfirmRequestToBeFriend", "contents": "${1:CSocNetUserRelations}::ConfirmRequestToBeFriend(${2:\\$senderUserID}, ${2:\\$relationID}, ${4:\\$bAutoSubscribe = true})$0"},
		{"trigger": "CSocNetUserRelations::Delete", "contents": "${1:CSocNetUserRelations}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSocNetUserRelations::DeleteNoDemand", "contents": "${1:CSocNetUserRelations}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserRelations::DeleteRelation", "contents": "${1:CSocNetUserRelations}::DeleteRelation(${2:\\$senderUserID}, ${2:\\$targetUserID})$0"},
		{"trigger": "CSocNetUserRelations::GetByID", "contents": "${1:CSocNetUserRelations}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetUserRelations::GetByUserID", "contents": "${1:CSocNetUserRelations}::GetByUserID(${2:\\$user1ID}, ${2:\\$user2ID})$0"},
		{"trigger": "CSocNetUserRelations::GetList", "contents": "${1:CSocNetUserRelations}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetUserRelations::GetListBirthday", "contents": "${1:CSocNetUserRelations}::GetListBirthday(${2:\\$userID}, ${2:\\$number = 5}, ${4:\\$online_interval = 120})$0"},
		{"trigger": "CSocNetUserRelations::GetRelatedUsers", "contents": "${1:CSocNetUserRelations}::GetRelatedUsers(${2:\\$userID}, ${2:\\$relation}, ${4:\\$arNavStartParams = false})$0"},
		{"trigger": "CSocNetUserRelations::GetRelation", "contents": "${1:CSocNetUserRelations}::GetRelation(${2:\\$firstUserID}, ${2:\\$secondUserID})$0"},
		{"trigger": "CSocNetUserRelations::GetRelationsTop", "contents": "${1:CSocNetUserRelations}::GetRelationsTop(${2:\\$userID}, ${2:\\$number = 100})$0"},
		{"trigger": "CSocNetUserRelations::IsFriends", "contents": "${1:CSocNetUserRelations}::IsFriends(${2:\\$firstUserID}, ${2:\\$secondUserID})$0"},
		{"trigger": "CSocNetUserRelations::IsFriends2", "contents": "${1:CSocNetUserRelations}::IsFriends2(${2:\\$firstUserID}, ${2:\\$secondUserID})$0"},
		{"trigger": "CSocNetUserRelations::OnBeforeConfirmNotify", "contents": "${1:CSocNetUserRelations}::OnBeforeConfirmNotify(${2:\\$module}, ${2:\\$tag}, ${4:\\$value}, ${4:\\$arParams})$0"},
		{"trigger": "CSocNetUserRelations::PrepareSection4Where", "contents": "${1:CSocNetUserRelations}::PrepareSection4Where(${2:\\$val}, ${2:\\$key}, ${4:\\$operation}, ${4:\\$negative}, ${6:\\$field}, ${6:&\\$arField}, ${8:&\\$arFilter})$0"},
		{"trigger": "CSocNetUserRelations::RejectRequestToBeFriend", "contents": "${1:CSocNetUserRelations}::RejectRequestToBeFriend(${2:\\$senderUserID}, ${2:\\$relationID})$0"},
		{"trigger": "CSocNetUserRelations::SendEvent", "contents": "${1:CSocNetUserRelations}::SendEvent(${2:\\$relationID}, ${2:\\$mailType = 'INVITE_FRIEND'})$0"},
		{"trigger": "CSocNetUserRelations::SendRequestToBeFriend", "contents": "${1:CSocNetUserRelations}::SendRequestToBeFriend(${2:\\$senderUserID}, ${2:\\$targetUserID}, ${4:\\$message})$0"},
		{"trigger": "CSocNetUserRelations::SpeedFileExists", "contents": "${1:CSocNetUserRelations}::SpeedFileExists(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserRelations::UnBanMember", "contents": "${1:CSocNetUserRelations}::UnBanMember(${2:\\$senderUserID}, ${2:\\$relationID})$0"},
		{"trigger": "CSocNetUserRelations::Update", "contents": "${1:CSocNetUserRelations}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetUserRelations::__SpeedFileCheckMessages", "contents": "${1:CSocNetUserRelations}::__SpeedFileCheckMessages(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserRelations::__SpeedFileCreate", "contents": "${1:CSocNetUserRelations}::__SpeedFileCreate(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserRelations::__SpeedFileDelete", "contents": "${1:CSocNetUserRelations}::__SpeedFileDelete(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserToGroup::Add", "contents": "${1:CSocNetUserToGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSocNetUserToGroup::BanMember", "contents": "${1:CSocNetUserToGroup}::BanMember(${2:\\$userID}, ${2:\\$groupID}, ${4:\\$arRelationID}, ${4:\\$currentUserIsAdmin})$0"},
		{"trigger": "CSocNetUserToGroup::CheckFields", "contents": "${1:CSocNetUserToGroup}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CSocNetUserToGroup::ConfirmRequestToBeMember", "contents": "${1:CSocNetUserToGroup}::ConfirmRequestToBeMember(${2:\\$userID}, ${2:\\$groupID}, ${4:\\$arRelationID}, ${4:\\$bAutoSubscribe = true})$0"},
		{"trigger": "CSocNetUserToGroup::Delete", "contents": "${1:CSocNetUserToGroup}::Delete(${2:\\$ID}, ${2:\\$bSendExclude = false})$0"},
		{"trigger": "CSocNetUserToGroup::DeleteNoDemand", "contents": "${1:CSocNetUserToGroup}::DeleteNoDemand(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserToGroup::DeleteRelation", "contents": "${1:CSocNetUserToGroup}::DeleteRelation(${2:\\$userID}, ${2:\\$groupID})$0"},
		{"trigger": "CSocNetUserToGroup::GetByID", "contents": "${1:CSocNetUserToGroup}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSocNetUserToGroup::GetList", "contents": "${1:CSocNetUserToGroup}::GetList(${2:\\$arOrder = array('ID' => 'DESC')}, ${2:\\$arFilter = array()}, ${4:\\$arGroupBy = false}, ${4:\\$arNavStartParams = false}, ${6:\\$arSelectFields = array()})$0"},
		{"trigger": "CSocNetUserToGroup::GetUserRole", "contents": "${1:CSocNetUserToGroup}::GetUserRole(${2:\\$userID}, ${2:\\$groupID})$0"},
		{"trigger": "CSocNetUserToGroup::InitUserPerms", "contents": "${1:CSocNetUserToGroup}::InitUserPerms(${2:\\$userID}, ${2:\\$arGroup}, ${4:\\$bCurrentUserIsAdmin})$0"},
		{"trigger": "CSocNetUserToGroup::OnBeforeConfirmNotify", "contents": "${1:CSocNetUserToGroup}::OnBeforeConfirmNotify(${2:\\$module}, ${2:\\$tag}, ${4:\\$value}, ${4:\\$arParams})$0"},
		{"trigger": "CSocNetUserToGroup::RejectRequestToBeMember", "contents": "${1:CSocNetUserToGroup}::RejectRequestToBeMember(${2:\\$userID}, ${2:\\$groupID}, ${4:\\$arRelationID})$0"},
		{"trigger": "CSocNetUserToGroup::SendEvent", "contents": "${1:CSocNetUserToGroup}::SendEvent(${2:\\$userGroupID}, ${2:\\$mailTemplate = 'SONET_INVITE_GROUP'})$0"},
		{"trigger": "CSocNetUserToGroup::SendRequestToBeMember", "contents": "${1:CSocNetUserToGroup}::SendRequestToBeMember(${2:\\$userID}, ${2:\\$groupID}, ${4:\\$message}, ${4:\\$RequestConfirmUrl = ''}, ${6:\\$bAutoSubscribe = true})$0"},
		{"trigger": "CSocNetUserToGroup::SendRequestToJoinGroup", "contents": "${1:CSocNetUserToGroup}::SendRequestToJoinGroup(${2:\\$senderID}, ${2:\\$userID}, ${4:\\$groupID}, ${4:\\$message})$0"},
		{"trigger": "CSocNetUserToGroup::SpeedFileExists", "contents": "${1:CSocNetUserToGroup}::SpeedFileExists(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserToGroup::TransferMember2Moderator", "contents": "${1:CSocNetUserToGroup}::TransferMember2Moderator(${2:\\$userID}, ${2:\\$groupID}, ${4:\\$arRelationID}, ${4:\\$currentUserIsAdmin})$0"},
		{"trigger": "CSocNetUserToGroup::TransferModerator2Member", "contents": "${1:CSocNetUserToGroup}::TransferModerator2Member(${2:\\$userID}, ${2:\\$groupID}, ${4:\\$arRelationID}, ${4:\\$currentUserIsAdmin})$0"},
		{"trigger": "CSocNetUserToGroup::UnBanMember", "contents": "${1:CSocNetUserToGroup}::UnBanMember(${2:\\$userID}, ${2:\\$groupID}, ${4:\\$arRelationID}, ${4:\\$currentUserIsAdmin})$0"},
		{"trigger": "CSocNetUserToGroup::Update", "contents": "${1:CSocNetUserToGroup}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSocNetUserToGroup::UserConfirmRequestToBeMember", "contents": "${1:CSocNetUserToGroup}::UserConfirmRequestToBeMember(${2:\\$senderUserID}, ${2:\\$relationID}, ${4:\\$bAutoSubscribe = true})$0"},
		{"trigger": "CSocNetUserToGroup::UserRejectRequestToBeMember", "contents": "${1:CSocNetUserToGroup}::UserRejectRequestToBeMember(${2:\\$senderUserID}, ${2:\\$relationID})$0"},
		{"trigger": "CSocNetUserToGroup::__SpeedFileCheckMessages", "contents": "${1:CSocNetUserToGroup}::__SpeedFileCheckMessages(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserToGroup::__SpeedFileCreate", "contents": "${1:CSocNetUserToGroup}::__SpeedFileCreate(${2:\\$userID})$0"},
		{"trigger": "CSocNetUserToGroup::__SpeedFileDelete", "contents": "${1:CSocNetUserToGroup}::__SpeedFileDelete(${2:\\$userID})$0"},
		{"trigger": "logTextParser::convert", "contents": "${1:logTextParser}::convert(${2:\\$text}, ${2:\\$arImages = array()}, ${4:\\$allow = array('HTML' => 'N'}, ${4:'ANCHOR' => 'Y'}, ${6:'BIU' => 'Y'}, ${6:'IMG' => 'Y'}, ${8:'QUOTE' => 'Y'}, ${8:'CODE' => 'Y'}, ${10:'FONT' => 'Y'}, ${20:'LIST' => 'Y'}, ${22:'SMILES' => 'Y'}, ${22:'NL2BR' => 'N'}, ${24:'VIDEO' => 'Y'}, ${24:'TABLE' => 'Y'}, ${26:'CUT_ANCHOR' => 'N')}, ${26:\\$arParams = array()})$0"},
		{"trigger": "logTextParser::convert_anchor_tag", "contents": "${1:logTextParser}::convert_anchor_tag(${2:\\$url}, ${2:\\$text}, ${4:\\$pref=''})$0"},
		{"trigger": "logTextParser::convert_code_tag", "contents": "${1:logTextParser}::convert_code_tag(${2:\\$text = ''})$0"},
		{"trigger": "logTextParser::convert_font_attr", "contents": "${1:logTextParser}::convert_font_attr(${2:\\$attr}, ${2:\\$value = ''}, ${4:\\$text = ''})$0"},
		{"trigger": "logTextParser::convert_image_tag", "contents": "${1:logTextParser}::convert_image_tag(${2:\\$url = ''}, ${2:\\$params = ''})$0"},
		{"trigger": "logTextParser::convert_quote_tag", "contents": "${1:logTextParser}::convert_quote_tag(${2:\\$text = ''})$0"},
		{"trigger": "logTextParser::convert_video", "contents": "${1:logTextParser}::convert_video(${2:\\$params}, ${2:\\$path})$0"},
		{"trigger": "logTextParser::logTextParser", "contents": "${1:logTextParser}::logTextParser(${2:\\$strLang = False}, ${2:\\$pathToSmile = false})$0"},
		{"trigger": "logTextParser::pre_convert_code_tag", "contents": "${1:logTextParser}::pre_convert_code_tag(${2:\\$text = ''})$0"},
		{"trigger": "logTextParser::sonet_sortlen", "contents": "${1:logTextParser}::sonet_sortlen(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CFacebookInterface::GetAccessToken", "contents": "${1:CFacebookInterface}::GetAccessToken(${2:\\$redirect_uri})$0"},
		{"trigger": "CFacebookInterface::GetAuthUrl", "contents": "${1:CFacebookInterface}::GetAuthUrl(${2:\\$redirect_uri})$0"},
		{"trigger": "CFacebookInterface::GetCurrentUser", "contents": "${1:CFacebookInterface}::GetCurrentUser()$0"},
		{"trigger": "CFacebookInterface::__construct", "contents": "${1:CFacebookInterface}::__construct(${2:\\$appID}, ${2:\\$appSecret}, ${4:\\$code=false})$0"},
		{"trigger": "CGoogleOAuthInterface::GetAccessToken", "contents": "${1:CGoogleOAuthInterface}::GetAccessToken(${2:\\$redirect_uri})$0"},
		{"trigger": "CGoogleOAuthInterface::GetAuthUrl", "contents": "${1:CGoogleOAuthInterface}::GetAuthUrl(${2:\\$redirect_uri}, ${2:\\$state=''})$0"},
		{"trigger": "CGoogleOAuthInterface::GetCurrentUser", "contents": "${1:CGoogleOAuthInterface}::GetCurrentUser()$0"},
		{"trigger": "CGoogleOAuthInterface::__construct", "contents": "${1:CGoogleOAuthInterface}::__construct(${2:\\$appID}, ${2:\\$appSecret}, ${4:\\$code=false})$0"},
		{"trigger": "COpenIDClient::Authorize", "contents": "${1:COpenIDClient}::Authorize()$0"},
		{"trigger": "COpenIDClient::CheckTrustProviders", "contents": "${1:COpenIDClient}::CheckTrustProviders(${2:\\$url})$0"},
		{"trigger": "COpenIDClient::GetOpenIDAuthStep", "contents": "${1:COpenIDClient}::GetOpenIDAuthStep(${2:\\$request_var='OPENID_IDENTITY'})$0"},
		{"trigger": "COpenIDClient::GetOpenIDServerTags", "contents": "${1:COpenIDClient}::GetOpenIDServerTags(${2:\\$url})$0"},
		{"trigger": "COpenIDClient::GetRedirectUrl", "contents": "${1:COpenIDClient}::GetRedirectUrl(${2:\\$identity}, ${2:\\$return_to=false})$0"},
		{"trigger": "COpenIDClient::SetTrustProviders", "contents": "${1:COpenIDClient}::SetTrustProviders(${2:\\$t})$0"},
		{"trigger": "COpenIDClient::Validate", "contents": "${1:COpenIDClient}::Validate()$0"},
		{"trigger": "CSocServAuth::AuthorizeUser", "contents": "${1:CSocServAuth}::AuthorizeUser(${2:\\$arFields})$0"},
		{"trigger": "CSocServAuth::CheckSettings", "contents": "${1:CSocServAuth}::CheckSettings()$0"},
		{"trigger": "CSocServAuth::GetOption", "contents": "${1:CSocServAuth}::GetOption(${2:\\$opt})$0"},
		{"trigger": "CSocServAuth::GetSettings", "contents": "${1:CSocServAuth}::GetSettings()$0"},
		{"trigger": "CSocServAuth::OptionsSuffix", "contents": "${1:CSocServAuth}::OptionsSuffix()$0"},
		{"trigger": "CSocServAuthManager::AppyUserSettings", "contents": "${1:CSocServAuthManager}::AppyUserSettings(${2:\\$suffix})$0"},
		{"trigger": "CSocServAuthManager::Authorize", "contents": "${1:CSocServAuthManager}::Authorize(${2:\\$service_id})$0"},
		{"trigger": "CSocServAuthManager::Cmp", "contents": "${1:CSocServAuthManager}::Cmp(${2:\\$a}, ${2:\\$b})$0"},
		{"trigger": "CSocServAuthManager::GetActiveAuthServices", "contents": "${1:CSocServAuthManager}::GetActiveAuthServices(${2:\\$arParams})$0"},
		{"trigger": "CSocServAuthManager::GetAuthServices", "contents": "${1:CSocServAuthManager}::GetAuthServices(${2:\\$suffix})$0"},
		{"trigger": "CSocServAuthManager::GetError", "contents": "${1:CSocServAuthManager}::GetError(${2:\\$service_id}, ${2:\\$error_code})$0"},
		{"trigger": "CSocServAuthManager::GetSettings", "contents": "${1:CSocServAuthManager}::GetSettings()$0"},
		{"trigger": "CSocServAuthManager::__construct", "contents": "${1:CSocServAuthManager}::__construct()$0"},
		{"trigger": "CSocServBlogger::Authorize", "contents": "${1:CSocServBlogger}::Authorize(${2:\\$identity=false}, ${2:\\$var=false})$0"},
		{"trigger": "CSocServBlogger::GetFormHtml", "contents": "${1:CSocServBlogger}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServDescription::GetDescription", "contents": "${1:CSocServDescription}::GetDescription()$0"},
		{"trigger": "CSocServFacebook::Authorize", "contents": "${1:CSocServFacebook}::Authorize()$0"},
		{"trigger": "CSocServFacebook::GetFormHtml", "contents": "${1:CSocServFacebook}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServFacebook::GetSettings", "contents": "${1:CSocServFacebook}::GetSettings()$0"},
		{"trigger": "CSocServGoogleOAuth::Authorize", "contents": "${1:CSocServGoogleOAuth}::Authorize()$0"},
		{"trigger": "CSocServGoogleOAuth::GetFormHtml", "contents": "${1:CSocServGoogleOAuth}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServGoogleOAuth::GetSettings", "contents": "${1:CSocServGoogleOAuth}::GetSettings()$0"},
		{"trigger": "CSocServLiveID::GetFormHtml", "contents": "${1:CSocServLiveID}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServLiveID::GetSettings", "contents": "${1:CSocServLiveID}::GetSettings()$0"},
		{"trigger": "CSocServLiveinternet::Authorize", "contents": "${1:CSocServLiveinternet}::Authorize(${2:\\$identity=false}, ${2:\\$var=false})$0"},
		{"trigger": "CSocServLiveinternet::GetFormHtml", "contents": "${1:CSocServLiveinternet}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServLivejournal::Authorize", "contents": "${1:CSocServLivejournal}::Authorize(${2:\\$identity=false}, ${2:\\$var=false})$0"},
		{"trigger": "CSocServLivejournal::GetFormHtml", "contents": "${1:CSocServLivejournal}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServMailRu::Authorize", "contents": "${1:CSocServMailRu}::Authorize(${2:\\$identity=false}, ${2:\\$var=false})$0"},
		{"trigger": "CSocServMailRu::GetFormHtml", "contents": "${1:CSocServMailRu}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServMyMailRu::Authorize", "contents": "${1:CSocServMyMailRu}::Authorize()$0"},
		{"trigger": "CSocServMyMailRu::CheckUserData", "contents": "${1:CSocServMyMailRu}::CheckUserData(${2:\\$control_sign})$0"},
		{"trigger": "CSocServMyMailRu::GetFormHtml", "contents": "${1:CSocServMyMailRu}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServMyMailRu::GetSettings", "contents": "${1:CSocServMyMailRu}::GetSettings()$0"},
		{"trigger": "CSocServOpenID::Authorize", "contents": "${1:CSocServOpenID}::Authorize(${2:\\$identity=false}, ${2:\\$var=false})$0"},
		{"trigger": "CSocServOpenID::GetFormHtml", "contents": "${1:CSocServOpenID}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServRambler::Authorize", "contents": "${1:CSocServRambler}::Authorize(${2:\\$identity=false}, ${2:\\$var=false})$0"},
		{"trigger": "CSocServRambler::GetFormHtml", "contents": "${1:CSocServRambler}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServTwitter::Authorize", "contents": "${1:CSocServTwitter}::Authorize()$0"},
		{"trigger": "CSocServTwitter::GetFormHtml", "contents": "${1:CSocServTwitter}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServTwitter::GetSettings", "contents": "${1:CSocServTwitter}::GetSettings()$0"},
		{"trigger": "CSocServUtil::GetCurUrl", "contents": "${1:CSocServUtil}::GetCurUrl(${2:\\$addParam=''}, ${2:\\$removeParam=false})$0"},
		{"trigger": "CSocServUtil::ServerName", "contents": "${1:CSocServUtil}::ServerName()$0"},
		{"trigger": "CSocServVKontakte::Authorize", "contents": "${1:CSocServVKontakte}::Authorize()$0"},
		{"trigger": "CSocServVKontakte::CheckUserData", "contents": "${1:CSocServVKontakte}::CheckUserData(${2:\\$control_sign})$0"},
		{"trigger": "CSocServVKontakte::GetFormHtml", "contents": "${1:CSocServVKontakte}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CSocServVKontakte::GetSettings", "contents": "${1:CSocServVKontakte}::GetSettings()$0"},
		{"trigger": "CSocServYandex::Authorize", "contents": "${1:CSocServYandex}::Authorize(${2:\\$identity=false}, ${2:\\$var=false})$0"},
		{"trigger": "CSocServYandex::GetFormHtml", "contents": "${1:CSocServYandex}::GetFormHtml(${2:\\$arParams})$0"},
		{"trigger": "CTwitterInterface::BuildQuery", "contents": "${1:CTwitterInterface}::BuildQuery(${2:\\$params})$0"},
		{"trigger": "CTwitterInterface::BuildSignature", "contents": "${1:CTwitterInterface}::BuildSignature(${2:\\$sigString})$0"},
		{"trigger": "CTwitterInterface::GetAccessToken", "contents": "${1:CTwitterInterface}::GetAccessToken()$0"},
		{"trigger": "CTwitterInterface::GetDefParams", "contents": "${1:CTwitterInterface}::GetDefParams()$0"},
		{"trigger": "CTwitterInterface::GetRequestToken", "contents": "${1:CTwitterInterface}::GetRequestToken(${2:\\$callback})$0"},
		{"trigger": "CTwitterInterface::GetSignatureString", "contents": "${1:CTwitterInterface}::GetSignatureString(${2:\\$arParams}, ${2:\\$url})$0"},
		{"trigger": "CTwitterInterface::GetUserInfo", "contents": "${1:CTwitterInterface}::GetUserInfo(${2:\\$user_id})$0"},
		{"trigger": "CTwitterInterface::RedirectAuthUrl", "contents": "${1:CTwitterInterface}::RedirectAuthUrl()$0"},
		{"trigger": "CTwitterInterface::__construct", "contents": "${1:CTwitterInterface}::__construct(${2:\\$appID}, ${2:\\$appSecret}, ${4:\\$token=false}, ${4:\\$tokenVerifier=false})$0"},
		{"trigger": "CTwitterInterface::urlencode", "contents": "${1:CTwitterInterface}::urlencode(${2:\\$mixParams})$0"},
		{"trigger": "CAdv::Delete", "contents": "${1:CAdv}::Delete(${2:\\$ID})$0"},
		{"trigger": "CAdv::DynamicDays", "contents": "${1:CAdv}::DynamicDays(${2:\\$ADV_ID}, ${2:\\$date1=''}, ${4:\\$date2=''})$0"},
		{"trigger": "CAdv::GetAnalysisGrapharray", "contents": "${1:CAdv}::GetAnalysisGrapharray(${2:\\$arFilter}, ${2:&\\$is_filtered}, ${4:\\$DATA_TYPE='SESSION_SUMMA'}, ${4:&\\$arrLegend}, ${6:&\\$summa}, ${6:&\\$max})$0"},
		{"trigger": "CAdv::GetAnalysisGrapharray_SQL", "contents": "${1:CAdv}::GetAnalysisGrapharray_SQL(${2:\\$strSqlSearch}, ${2:\\$DATA_TYPE})$0"},
		{"trigger": "CAdv::GetByID", "contents": "${1:CAdv}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CAdv::GetDropDownList", "contents": "${1:CAdv}::GetDropDownList(${2:\\$strSqlOrder='ORDER BY REFERER1}, ${2:REFERER2'})$0"},
		{"trigger": "CAdv::GetDynamicList", "contents": "${1:CAdv}::GetDynamicList(${2:\\$ADV_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:&\\$arMaxMin}, ${6:\\$arFilter=array()})$0"},
		{"trigger": "CAdv::GetEventList", "contents": "${1:CAdv}::GetEventList(${2:\\$ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CAdv::GetEventListByReferer", "contents": "${1:CAdv}::GetEventListByReferer(${2:\\$value}, ${2:\\$arFilter})$0"},
		{"trigger": "CAdv::GetList", "contents": "${1:CAdv}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$limit=''}, ${6:&\\$arrGROUP_DAYS}, ${8:&\\$strSql_res})$0"},
		{"trigger": "CAdv::GetSimpleList", "contents": "${1:CAdv}::GetSimpleList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CAdv::Reset", "contents": "${1:CAdv}::Reset(${2:\\$ID})$0"},
		{"trigger": "CAdv::SetByPage", "contents": "${1:CAdv}::SetByPage(${2:\\$page}, ${2:&\\$arrADV}, ${4:&\\$ref1}, ${4:&\\$ref2}, ${6:\\$type='TO'})$0"},
		{"trigger": "CAdv::SetByReferer", "contents": "${1:CAdv}::SetByReferer(${2:\\$referer1}, ${2:\\$referer2}, ${4:&\\$arrADV}, ${4:&\\$ref1}, ${6:&\\$ref2})$0"},
		{"trigger": "CAutoDetect::GetList", "contents": "${1:CAutoDetect}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CCity::FindFiles", "contents": "${1:CCity}::FindFiles(${2:\\$type = 'country'}, ${2:\\$path = '/bitrix/modules/statistic/ip2country'})$0"},
		{"trigger": "CCity::ForSQL", "contents": "${1:CCity}::ForSQL()$0"},
		{"trigger": "CCity::GetCSVFormatType", "contents": "${1:CCity}::GetCSVFormatType(${2:\\$fp})$0"},
		{"trigger": "CCity::GetCityID", "contents": "${1:CCity}::GetCityID()$0"},
		{"trigger": "CCity::GetCountryCode", "contents": "${1:CCity}::GetCountryCode()$0"},
		{"trigger": "CCity::GetFullInfo", "contents": "${1:CCity}::GetFullInfo()$0"},
		{"trigger": "CCity::GetGrapharray", "contents": "${1:CCity}::GetGrapharray(${2:\\$arFilter}, ${2:&\\$arLegend}, ${4:\\$sort = false}, ${4:\\$top = 0})$0"},
		{"trigger": "CCity::GetHandler", "contents": "${1:CCity}::GetHandler()$0"},
		{"trigger": "CCity::GetList", "contents": "${1:CCity}::GetList(${2:\\$arOrder = /*.(array[string]string).*/array()}, ${2:\\$arFilter = /*.(array[string]string).*/array()})$0"},
		{"trigger": "CCity::LoadCSV", "contents": "${1:CCity}::LoadCSV(${2:\\$file_name}, ${2:\\$step}, ${4:&\\$file_position})$0"},
		{"trigger": "CCity::Recode", "contents": "${1:CCity}::Recode(${2:\\$str})$0"},
		{"trigger": "CCity::ResolveIPRange", "contents": "${1:CCity}::ResolveIPRange(${2:\\$newStartIP}, ${2:\\$newEndIP})$0"},
		{"trigger": "CCity::__construct", "contents": "${1:CCity}::__construct(${2:$DBRecord = ''})$0"},
		{"trigger": "CCityLookup::arrayForDB", "contents": "${1:CCityLookup}::arrayForDB()$0"},
		{"trigger": "CCityLookup::GetDescription", "contents": "${1:CCityLookup}::GetDescription()$0"},
		{"trigger": "CCityLookup::GetFullInfo", "contents": "${1:CCityLookup}::GetFullInfo()$0"},
		{"trigger": "CCityLookup::IsInstalled", "contents": "${1:CCityLookup}::IsInstalled()$0"},
		{"trigger": "CCityLookup::Lookup", "contents": "${1:CCityLookup}::Lookup()$0"},
		{"trigger": "CCityLookup::OnCityLookup", "contents": "${1:CCityLookup}::OnCityLookup(${2:\\$arDBRecord = /*.(array[string]string).*/array()})$0"},
		{"trigger": "CCityLookup::__construct", "contents": "${1:CCityLookup}::__construct(${2:\\$arDBRecord = /*.(array[string]string).*/array()})$0"},
		{"trigger": "CCountry::GetGrapharray", "contents": "${1:CCountry}::GetGrapharray(${2:\\$arFilter}, ${2:&\\$arLegend})$0"},
		{"trigger": "CCountry::GetList", "contents": "${1:CCountry}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CGuest::GetByID", "contents": "${1:CGuest}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CGuest::GetLastByID", "contents": "${1:CGuest}::GetLastByID(${2:\\$ID})$0"},
		{"trigger": "CGuest::GetList", "contents": "${1:CGuest}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CHit::GetByID", "contents": "${1:CHit}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CHit::GetList", "contents": "${1:CHit}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CKeepStatistics::CheckSkip", "contents": "${1:CKeepStatistics}::CheckSkip()$0"},
		{"trigger": "CKeepStatistics::GetCuurentHitID", "contents": "${1:CKeepStatistics}::GetCuurentHitID()$0"},
		{"trigger": "CKeepStatistics::GetRefererListID", "contents": "${1:CKeepStatistics}::GetRefererListID(${2:\\$PROT}, ${2:\\$SN}, ${4:\\$PAGE_FROM}, ${4:\\$CURRENT_URI}, ${6:\\$ERROR_404}, ${6:\\$sql_site})$0"},
		{"trigger": "CKeepStatistics::Keep", "contents": "${1:CKeepStatistics}::Keep(${2:\\$HANDLE_CALL=false})$0"},
		{"trigger": "CKeepStatistics::ReallyKeep", "contents": "${1:CKeepStatistics}::ReallyKeep()$0"},
		{"trigger": "CKeepStatistics::RestoreSession", "contents": "${1:CKeepStatistics}::RestoreSession()$0"},
		{"trigger": "CKeepStatistics::SavePathData", "contents": "${1:CKeepStatistics}::SavePathData(${2:\\$SITE_ID}, ${2:\\$CURRENT_PAGE}, ${4:\\$ERROR_404})$0"},
		{"trigger": "CKeepStatistics::SaveVisits", "contents": "${1:CKeepStatistics}::SaveVisits(${2:\\$sql_site}, ${2:\\$SESSION_NEW}, ${4:\\$CURRENT_DIR}, ${4:\\$CURRENT_PAGE}, ${6:\\$ERROR_404})$0"},
		{"trigger": "CKeepStatistics::UpdateCity", "contents": "${1:CKeepStatistics}::UpdateCity(${2:\\$CITY_ID}, ${2:\\$arFields}, ${4:\\$DATE=false}, ${4:\\$DATE_FORMAT='SHORT'}, ${6:\\$SIGN='+'})$0"},
		{"trigger": "CKeepStatistics::UpdateCountry", "contents": "${1:CKeepStatistics}::UpdateCountry(${2:\\$COUNTRY_ID}, ${2:\\$arFields}, ${4:\\$DATE=false}, ${4:\\$DATE_FORMAT='SHORT'}, ${6:\\$SIGN='+'})$0"},
		{"trigger": "CPage::GetDynamicList", "contents": "${1:CPage}::GetDynamicList(${2:\\$URL}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CPage::GetList", "contents": "${1:CPage}::GetList(${2:\\$COUNTER_TYPE}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CPath::GetByID", "contents": "${1:CPath}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CPath::GetList", "contents": "${1:CPath}::GetList(${2:\\$PARENT_ID=''}, ${2:\\$COUNTER_TYPE='COUNTER_FULL_PATH'}, ${4:&\\$by}, ${4:&\\$order}, ${6:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CPhrase::GetList", "contents": "${1:CPhrase}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:&\\$total}, ${6:&\\$grby}, ${8:&\\$max})$0"},
		{"trigger": "CReferer::GetList", "contents": "${1:CReferer}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:&\\$total}, ${6:&\\$grby}, ${8:&\\$max})$0"},
		{"trigger": "CSearcher::DynamicDays", "contents": "${1:CSearcher}::DynamicDays(${2:\\$SEARCHER_ID}, ${2:\\$date1=''}, ${4:\\$date2=''})$0"},
		{"trigger": "CSearcher::GetByID", "contents": "${1:CSearcher}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSearcher::GetDomainList", "contents": "${1:CSearcher}::GetDomainList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CSearcher::GetDropDownList", "contents": "${1:CSearcher}::GetDropDownList(${2:\\$strSqlOrder='ORDER BY NAME}, ${2:ID'})$0"},
		{"trigger": "CSearcher::GetDynamicList", "contents": "${1:CSearcher}::GetDynamicList(${2:\\$SEARCHER_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:&\\$arMaxMin}, ${6:\\$arFilter=array()})$0"},
		{"trigger": "CSearcher::GetGrapharray", "contents": "${1:CSearcher}::GetGrapharray(${2:\\$arFilter}, ${2:&\\$arrLegend})$0"},
		{"trigger": "CSearcher::GetGrapharray_SQL", "contents": "${1:CSearcher}::GetGrapharray_SQL(${2:\\$strSqlSearch})$0"},
		{"trigger": "CSearcher::GetList", "contents": "${1:CSearcher}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$LIMIT=false})$0"},
		{"trigger": "CSearcherHit::GetList", "contents": "${1:CSearcherHit}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CSession::GetAttentiveness", "contents": "${1:CSession}::GetAttentiveness(${2:\\$DATE_STAT}, ${2:\\$SITE_ID=false})$0"},
		{"trigger": "CSession::GetByID", "contents": "${1:CSession}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSession::GetList", "contents": "${1:CSession}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CStatEvent::Add", "contents": "${1:CStatEvent}::Add(${2:\\$EVENT_ID}, ${2:\\$EVENT3}, ${4:\\$DATE_ENTER}, ${4:\\$PARAM}, ${6:\\$MONEY=''}, ${6:\\$CURRENCY=''}, ${8:\\$CHARGEBACK='N'})$0"},
		{"trigger": "CStatEvent::AddByEvents", "contents": "${1:CStatEvent}::AddByEvents(${2:\\$EVENT1}, ${2:\\$EVENT2}, ${4:\\$EVENT3}, ${4:\\$DATE_ENTER}, ${6:\\$PARAM}, ${6:\\$MONEY=''}, ${8:\\$CURRENCY=''}, ${8:\\$CHARGEBACK='N'})$0"},
		{"trigger": "CStatEvent::AddByID", "contents": "${1:CStatEvent}::AddByID(${2:\\$EVENT_ID}, ${2:\\$EVENT3}, ${4:\\$DATE_ENTER}, ${4:\\$PARAM}, ${6:\\$MONEY=''}, ${6:\\$CURRENCY=''}, ${8:\\$CHARGEBACK='N'})$0"},
		{"trigger": "CStatEvent::AddCurrent", "contents": "${1:CStatEvent}::AddCurrent(${2:\\$event1}, ${2:\\$event2=''}, ${4:\\$event3=''}, ${4:\\$money=''}, ${6:\\$currency=''}, ${6:\\$goto=''}, ${8:\\$chargeback='N'}, ${8:\\$site_id=false})$0"},
		{"trigger": "CStatEvent::DecodeGID", "contents": "${1:CStatEvent}::DecodeGID(${2:\\$EVENT_GID})$0"},
		{"trigger": "CStatEvent::Delete", "contents": "${1:CStatEvent}::Delete(${2:\\$ID})$0"},
		{"trigger": "CStatEvent::GetByEvents", "contents": "${1:CStatEvent}::GetByEvents(${2:\\$event1}, ${2:\\$event2) { return CStatEventType::GetByEvents(\\$event1}, ${4:\\$event2})$0"},
		{"trigger": "CStatEvent::GetEventsByGuest", "contents": "${1:CStatEvent}::GetEventsByGuest(${2:\\$GUEST_ID}, ${2:\\$EVENT_ID=false}, ${4:\\$EVENT3=false}, ${4:\\$SEC=false) { return CStatEvent::GetListByGuest(\\$GUEST_ID}, ${6:\\$EVENT_ID}, ${6:\\$EVENT3}, ${8:\\$SEC})$0"},
		{"trigger": "CStatEvent::GetGID", "contents": "${1:CStatEvent}::GetGID(${2:\\$site_id=false})$0"},
		{"trigger": "CStatEvent::GetHandlerList", "contents": "${1:CStatEvent}::GetHandlerList(${2:&\\$arUSER_HANDLERS})$0"},
		{"trigger": "CStatEvent::GetList", "contents": "${1:CStatEvent}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CStatEvent::GetListByGuest", "contents": "${1:CStatEvent}::GetListByGuest(${2:\\$GUEST_ID}, ${2:\\$EVENT_ID=false}, ${4:\\$EVENT3=false}, ${4:\\$SEC=false})$0"},
		{"trigger": "CStatEvent::GetListUniqueCheck", "contents": "${1:CStatEvent}::GetListUniqueCheck(${2:\\$arFilter=array()}, ${2:\\$LIMIT=1})$0"},
		{"trigger": "CStatEvent::SetEventType", "contents": "${1:CStatEvent}::SetEventType(${2:\\$event1}, ${2:\\$event2}, ${4:&\\$arEventType) { return CStatEventType::ConditionSet(\\$event1}, ${4:\\$event2}, ${6:\\$arEventType})$0"},
		{"trigger": "CStatEventType::CheckFields", "contents": "${1:CStatEventType}::CheckFields(${2:\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CStatEventType::ConditionSet", "contents": "${1:CStatEventType}::ConditionSet(${2:\\$event1}, ${2:\\$event2}, ${4:&\\$arEventType})$0"},
		{"trigger": "CStatEventType::Delete", "contents": "${1:CStatEventType}::Delete(${2:\\$ID}, ${2:\\$DELETE_EVENT='Y'})$0"},
		{"trigger": "CStatEventType::DynamicDays", "contents": "${1:CStatEventType}::DynamicDays(${2:\\$EVENT_ID}, ${2:\\$date1=''}, ${4:\\$date2=''})$0"},
		{"trigger": "CStatEventType::GetByEvents", "contents": "${1:CStatEventType}::GetByEvents(${2:\\$event1}, ${2:\\$event2})$0"},
		{"trigger": "CStatEventType::GetByID", "contents": "${1:CStatEventType}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CStatEventType::GetDropDownList", "contents": "${1:CStatEventType}::GetDropDownList(${2:\\$strSqlOrder='ORDER BY EVENT1}, ${2:EVENT2'})$0"},
		{"trigger": "CStatEventType::GetDynamicList", "contents": "${1:CStatEventType}::GetDynamicList(${2:\\$EVENT_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:&\\$arMaxMin}, ${6:\\$arFilter=array()})$0"},
		{"trigger": "CStatEventType::GetGrapharray", "contents": "${1:CStatEventType}::GetGrapharray(${2:\\$arFilter}, ${2:&\\$arrLegend})$0"},
		{"trigger": "CStatEventType::GetGrapharray_SQL", "contents": "${1:CStatEventType}::GetGrapharray_SQL(${2:\\$strSqlSearch})$0"},
		{"trigger": "CStatEventType::GetList", "contents": "${1:CStatEventType}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$LIMIT=false})$0"},
		{"trigger": "CStatEventType::GetSimpleList", "contents": "${1:CStatEventType}::GetSimpleList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CStatRegion::GetList", "contents": "${1:CStatRegion}::GetList(${2:\\$arOrder = /*.(array[string]string).*/array()}, ${2:\\$arFilter = /*.(array[string]string).*/array()})$0"},
		{"trigger": "CStatResult::CStatResult", "contents": "${1:CStatResult}::CStatResult(${2:\\$res})$0"},
		{"trigger": "CStatResult::Fetch", "contents": "${1:CStatResult}::Fetch()$0"},
		{"trigger": "CStatistic::KeepStatistic", "contents": "${1:CStatistic}::KeepStatistic(${2:\\$HANDLE_CALL=false) { return CStatistics::Keep(\\$HANDLE_CALL})$0"},
		{"trigger": "CStatistic::Stoplist", "contents": "${1:CStatistic}::Stoplist(${2:\\$test='N') { return CStopList::Check(\\$test})$0"},
		{"trigger": "CStatisticSort::CStatisticSort", "contents": "${1:CStatisticSort}::CStatisticSort(${2:\\$field = ''})$0"},
		{"trigger": "CStatisticSort::Sort", "contents": "${1:CStatisticSort}::Sort(${2:&\\$ar}, ${2:\\$field})$0"},
		{"trigger": "CStatisticSort::__construct", "contents": "${1:CStatisticSort}::__construct(${2:\\$field = ''})$0"},
		{"trigger": "CStatistics::CheckForDDL", "contents": "${1:CStatistics}::CheckForDDL()$0"},
		{"trigger": "CStatistics::CleanUp", "contents": "${1:CStatistics}::CleanUp(${2:\\$cleanup_date=''}, ${2:&\\$arErrors})$0"},
		{"trigger": "CStatistics::CleanUpAdvDynamic", "contents": "${1:CStatistics}::CleanUpAdvDynamic()$0"},
		{"trigger": "CStatistics::CleanUpAdvGuests", "contents": "${1:CStatistics}::CleanUpAdvGuests()$0"},
		{"trigger": "CStatistics::CleanUpCities", "contents": "${1:CStatistics}::CleanUpCities()$0"},
		{"trigger": "CStatistics::CleanUpCountries", "contents": "${1:CStatistics}::CleanUpCountries()$0"},
		{"trigger": "CStatistics::CleanUpEventDynamic", "contents": "${1:CStatistics}::CleanUpEventDynamic()$0"},
		{"trigger": "CStatistics::CleanUpEvents", "contents": "${1:CStatistics}::CleanUpEvents()$0"},
		{"trigger": "CStatistics::CleanUpGuests", "contents": "${1:CStatistics}::CleanUpGuests()$0"},
		{"trigger": "CStatistics::CleanUpHits", "contents": "${1:CStatistics}::CleanUpHits()$0"},
		{"trigger": "CStatistics::CleanUpPathCache", "contents": "${1:CStatistics}::CleanUpPathCache()$0"},
		{"trigger": "CStatistics::CleanUpPathDynamic", "contents": "${1:CStatistics}::CleanUpPathDynamic()$0"},
		{"trigger": "CStatistics::CleanUpPhrases", "contents": "${1:CStatistics}::CleanUpPhrases()$0"},
		{"trigger": "CStatistics::CleanUpReferer", "contents": "${1:CStatistics}::CleanUpReferer()$0"},
		{"trigger": "CStatistics::CleanUpRefererList", "contents": "${1:CStatistics}::CleanUpRefererList()$0"},
		{"trigger": "CStatistics::CleanUpSearcherDynamic", "contents": "${1:CStatistics}::CleanUpSearcherDynamic()$0"},
		{"trigger": "CStatistics::CleanUpSearcherHits", "contents": "${1:CStatistics}::CleanUpSearcherHits()$0"},
		{"trigger": "CStatistics::CleanUpSessionData", "contents": "${1:CStatistics}::CleanUpSessionData()$0"},
		{"trigger": "CStatistics::CleanUpSessions", "contents": "${1:CStatistics}::CleanUpSessions()$0"},
		{"trigger": "CStatistics::CleanUpStatistics_1", "contents": "${1:CStatistics}::CleanUpStatistics_1()$0"},
		{"trigger": "CStatistics::CleanUpStatistics_2", "contents": "${1:CStatistics}::CleanUpStatistics_2()$0"},
		{"trigger": "CStatistics::CleanUpTableByDate", "contents": "${1:CStatistics}::CleanUpTableByDate(${2:\\$cleanup_date}, ${2:\\$table_name}, ${4:\\$date_name})$0"},
		{"trigger": "CStatistics::CleanUpVisits", "contents": "${1:CStatistics}::CleanUpVisits()$0"},
		{"trigger": "CStatistics::DBDateAdd", "contents": "${1:CStatistics}::DBDateAdd(${2:\\$date}, ${2:\\$days=1})$0"},
		{"trigger": "CStatistics::DBDateCompare", "contents": "${1:CStatistics}::DBDateCompare(${2:\\$FIELD_NAME}, ${2:\\$DATE=false}, ${4:\\$DATE_FORMAT='SHORT'})$0"},
		{"trigger": "CStatistics::DBDateDiff", "contents": "${1:CStatistics}::DBDateDiff(${2:\\$date1}, ${2:\\$date2})$0"},
		{"trigger": "CStatistics::DBFirstDate", "contents": "${1:CStatistics}::DBFirstDate(${2:\\$strSql})$0"},
		{"trigger": "CStatistics::DBTopSql", "contents": "${1:CStatistics}::DBTopSql(${2:\\$strSql}, ${2:\\$nTopCount=false})$0"},
		{"trigger": "CStatistics::EndBuffer", "contents": "${1:CStatistics}::EndBuffer()$0"},
		{"trigger": "CStatistics::ExecuteDDL", "contents": "${1:CStatistics}::ExecuteDDL(${2:\\$ID})$0"},
		{"trigger": "CStatistics::GetAdvGuestHost", "contents": "${1:CStatistics}::GetAdvGuestHost(${2:\\$ADV_ID}, ${2:\\$GUEST_ID}, ${4:\\$IP_NUMBER}, ${4:\\$BACK=''})$0"},
		{"trigger": "CStatistics::GetAuditTypes", "contents": "${1:CStatistics}::GetAuditTypes()$0"},
		{"trigger": "CStatistics::GetDDL", "contents": "${1:CStatistics}::GetDDL()$0"},
		{"trigger": "CStatistics::GetEventParam", "contents": "${1:CStatistics}::GetEventParam(${2:\\$site_id=false) { return CStatEvent::GetGID(\\$site_id})$0"},
		{"trigger": "CStatistics::GetSessionDataByMD5", "contents": "${1:CStatistics}::GetSessionDataByMD5(${2:\\$GUEST_MD5})$0"},
		{"trigger": "CStatistics::OnSearch", "contents": "${1:CStatistics}::OnSearch(${2:\\$search_phrase})$0"},
		{"trigger": "CStatistics::RecountBaseCurrency", "contents": "${1:CStatistics}::RecountBaseCurrency(${2:\\$new_base_currency})$0"},
		{"trigger": "CStatistics::Set404", "contents": "${1:CStatistics}::Set404(${2:\\$table = false}, ${2:\\$where = false}, ${4:\\$arrUpdate = false})$0"},
		{"trigger": "CStatistics::SetNewDay", "contents": "${1:CStatistics}::SetNewDay(${2:\\$HOSTS=0}, ${2:\\$TOTAL_HOSTS=0}, ${4:\\$SESSIONS=0}, ${4:\\$HITS=0}, ${6:\\$NEW_GUESTS=0}, ${6:\\$GUESTS=0}, ${8:\\$FAVORITES=0})$0"},
		{"trigger": "CStatistics::SetNewDayForSite", "contents": "${1:CStatistics}::SetNewDayForSite(${2:\\$SITE_ID=false}, ${2:\\$HOSTS=0}, ${4:\\$TOTAL_HOSTS=0}, ${4:\\$SESSIONS=0}, ${6:\\$HITS=0})$0"},
		{"trigger": "CStatistics::Set_Adv", "contents": "${1:CStatistics}::Set_Adv()$0"},
		{"trigger": "CStatistics::Set_Event", "contents": "${1:CStatistics}::Set_Event(${2:\\$event1}, ${2:\\$event2=''}, ${4:\\$event3=''}, ${4:\\$goto=''}, ${6:\\$money=''}, ${6:\\$currency=''}, ${8:\\$chargeback='N'}, ${8:\\$site_id=false) { return CStatEvent::AddCurrent(\\$event1}, ${10:\\$event2}, ${20:\\$event3}, ${22:\\$money}, ${22:\\$currency}, ${24:\\$goto}, ${24:\\$chargeback}, ${26:\\$site_id})$0"},
		{"trigger": "CStatistics::Set_Guest", "contents": "${1:CStatistics}::Set_Guest()$0"},
		{"trigger": "CStatistics::StartBuffer", "contents": "${1:CStatistics}::StartBuffer()$0"},
		{"trigger": "CStatistics::Update_Adv", "contents": "${1:CStatistics}::Update_Adv()$0"},
		{"trigger": "CStopList::Add", "contents": "${1:CStopList}::Add(${2:\\$arFields})$0"},
		{"trigger": "CStopList::CheckFields", "contents": "${1:CStopList}::CheckFields(${2:\\$ID}, ${2:&\\$arFields})$0"},
		{"trigger": "CStopList::CleanCache", "contents": "${1:CStopList}::CleanCache()$0"},
		{"trigger": "CStopList::Delete", "contents": "${1:CStopList}::Delete(${2:\\$ID})$0"},
		{"trigger": "CStopList::GetByID", "contents": "${1:CStopList}::GetByID(${2:\\$STOPLIST_ID})$0"},
		{"trigger": "CStopList::SetActive", "contents": "${1:CStopList}::SetActive(${2:\\$ID}, ${2:\\$active = 'N'})$0"},
		{"trigger": "CStopList::Update", "contents": "${1:CStopList}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CStoplist::Check", "contents": "${1:CStoplist}::Check(${2:\\$test='N'}, ${2:\\$arParams = false})$0"},
		{"trigger": "CStoplist::GetList", "contents": "${1:CStoplist}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CTraffic::DecParam", "contents": "${1:CTraffic}::DecParam(${2:\\$arParam}, ${2:\\$arParamSite=false}, ${4:\\$SITE_ID=false}, ${4:\\$DATE=false}, ${6:\\$DATE_FORMAT='FULL'})$0"},
		{"trigger": "CTraffic::DynamicDays", "contents": "${1:CTraffic}::DynamicDays(${2:\\$date1=''}, ${2:\\$date2=''}, ${4:\\$site_id=''})$0"},
		{"trigger": "CTraffic::GetCommonValues", "contents": "${1:CTraffic}::GetCommonValues(${2:\\$arFilter=array()}, ${2:\\$bIgnoreErrors=false})$0"},
		{"trigger": "CTraffic::GetDailyList", "contents": "${1:CTraffic}::GetDailyList(${2:&\\$by}, ${2:&\\$order}, ${4:&\\$arMaxMin}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered}, ${6:\\$get_maxmin='Y'})$0"},
		{"trigger": "CTraffic::GetPhraseList", "contents": "${1:CTraffic}::GetPhraseList(${2:&\\$s_by}, ${2:&\\$s_order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$limit=10})$0"},
		{"trigger": "CTraffic::GetRefererList", "contents": "${1:CTraffic}::GetRefererList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$limit=10})$0"},
		{"trigger": "CTraffic::GetSumList", "contents": "${1:CTraffic}::GetSumList(${2:\\$DATA_TYPE}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CTraffic::IncParam", "contents": "${1:CTraffic}::IncParam(${2:\\$arParam}, ${2:\\$arParamSite=false}, ${4:\\$SITE_ID=false}, ${4:\\$DATE=false}, ${6:\\$DATE_FORMAT='FULL'}, ${6:\\$SIGN='+'})$0"},
		{"trigger": "CUserOnline::GetGuestCount", "contents": "${1:CUserOnline}::GetGuestCount()$0"},
		{"trigger": "CUserOnline::GetList", "contents": "${1:CUserOnline}::GetList(${2:&\\$guest_count}, ${2:&\\$session_count}, ${4:\\$arOrder=array()}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CMailTools::EncodeHeaderFrom", "contents": "${1:CMailTools}::EncodeHeaderFrom(${2:\\$text}, ${2:\\$charset})$0"},
		{"trigger": "CMailTools::EncodeMimeString", "contents": "${1:CMailTools}::EncodeMimeString(${2:\\$text}, ${2:\\$charset})$0"},
		{"trigger": "CMailTools::EncodeSubject", "contents": "${1:CMailTools}::EncodeSubject(${2:\\$text}, ${2:\\$charset})$0"},
		{"trigger": "CMailTools::ImageTypeToMimeType", "contents": "${1:CMailTools}::ImageTypeToMimeType(${2:\\$type})$0"},
		{"trigger": "CMailTools::IsEightBit", "contents": "${1:CMailTools}::IsEightBit(${2:\\$str})$0"},
		{"trigger": "CMailTools::ReplaceHrefs", "contents": "${1:CMailTools}::ReplaceHrefs(${2:\\$text})$0"},
		{"trigger": "CMailTools::ReplaceImages", "contents": "${1:CMailTools}::ReplaceImages(${2:\\$text})$0"},
		{"trigger": "CMailTools::__replace_img", "contents": "${1:CMailTools}::__replace_img(${2:\\$matches})$0"},
		{"trigger": "CPosting::GetList", "contents": "${1:CPosting}::GetList(${2:\\$aSort=array()}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CPosting::Lock", "contents": "${1:CPosting}::Lock(${2:\\$ID=0})$0"},
		{"trigger": "CPosting::UnLock", "contents": "${1:CPosting}::UnLock(${2:\\$ID=0})$0"},
		{"trigger": "CPostingGeneral::Add", "contents": "${1:CPostingGeneral}::Add(${2:\\$arFields})$0"},
		{"trigger": "CPostingGeneral::AutoSend", "contents": "${1:CPostingGeneral}::AutoSend(${2:\\$ID=false}, ${2:\\$limit=false}, ${4:\\$site_id=false})$0"},
		{"trigger": "CPostingGeneral::ChangeStatus", "contents": "${1:CPostingGeneral}::ChangeStatus(${2:\\$ID}, ${2:\\$status})$0"},
		{"trigger": "CPostingGeneral::CheckFields", "contents": "${1:CPostingGeneral}::CheckFields(${2:\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CPostingGeneral::Delete", "contents": "${1:CPostingGeneral}::Delete(${2:\\$ID})$0"},
		{"trigger": "CPostingGeneral::DeleteFile", "contents": "${1:CPostingGeneral}::DeleteFile(${2:\\$ID}, ${2:\\$file_id=false})$0"},
		{"trigger": "CPostingGeneral::GetByID", "contents": "${1:CPostingGeneral}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CPostingGeneral::GetEmailStatuses", "contents": "${1:CPostingGeneral}::GetEmailStatuses(${2:\\$ID})$0"},
		{"trigger": "CPostingGeneral::GetEmails", "contents": "${1:CPostingGeneral}::GetEmails(${2:\\$post_arr})$0"},
		{"trigger": "CPostingGeneral::GetEmailsByStatus", "contents": "${1:CPostingGeneral}::GetEmailsByStatus(${2:\\$ID}, ${2:\\$STATUS})$0"},
		{"trigger": "CPostingGeneral::GetFileList", "contents": "${1:CPostingGeneral}::GetFileList(${2:\\$ID}, ${2:\\$file_id=false})$0"},
		{"trigger": "CPostingGeneral::GetGroupList", "contents": "${1:CPostingGeneral}::GetGroupList(${2:\\$ID})$0"},
		{"trigger": "CPostingGeneral::GetRubricList", "contents": "${1:CPostingGeneral}::GetRubricList(${2:\\$ID})$0"},
		{"trigger": "CPostingGeneral::OnGroupDelete", "contents": "${1:CPostingGeneral}::OnGroupDelete(${2:\\$group_id})$0"},
		{"trigger": "CPostingGeneral::SaveFile", "contents": "${1:CPostingGeneral}::SaveFile(${2:\\$ID}, ${2:\\$file})$0"},
		{"trigger": "CPostingGeneral::SendMessage", "contents": "${1:CPostingGeneral}::SendMessage(${2:\\$ID}, ${2:\\$timeout=0}, ${4:\\$maxcount=0}, ${4:\\$check_charset=false})$0"},
		{"trigger": "CPostingGeneral::SplitFileName", "contents": "${1:CPostingGeneral}::SplitFileName(${2:\\$file_name})$0"},
		{"trigger": "CPostingGeneral::Update", "contents": "${1:CPostingGeneral}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CPostingGeneral::UpdateGroups", "contents": "${1:CPostingGeneral}::UpdateGroups(${2:\\$ID}, ${2:\\$aGroup})$0"},
		{"trigger": "CPostingGeneral::UpdateRubrics", "contents": "${1:CPostingGeneral}::UpdateRubrics(${2:\\$ID}, ${2:\\$aRubric})$0"},
		{"trigger": "CPostingTemplate::AddPosting", "contents": "${1:CPostingTemplate}::AddPosting(${2:\\$arRubric})$0"},
		{"trigger": "CPostingTemplate::Execute", "contents": "${1:CPostingTemplate}::Execute()$0"},
		{"trigger": "CPostingTemplate::GetByID", "contents": "${1:CPostingTemplate}::GetByID(${2:\\$path=''})$0"},
		{"trigger": "CPostingTemplate::GetList", "contents": "${1:CPostingTemplate}::GetList()$0"},
		{"trigger": "CPostingTemplate::IsExists", "contents": "${1:CPostingTemplate}::IsExists(${2:\\$path=''})$0"},
		{"trigger": "CPostingTemplate::ParseDaysOfMonth", "contents": "${1:CPostingTemplate}::ParseDaysOfMonth(${2:\\$strDaysOfMonth})$0"},
		{"trigger": "CPostingTemplate::ParseDaysOfWeek", "contents": "${1:CPostingTemplate}::ParseDaysOfWeek(${2:\\$strDaysOfWeek})$0"},
		{"trigger": "CPostingTemplate::ParseTimesOfDay", "contents": "${1:CPostingTemplate}::ParseTimesOfDay(${2:\\$strTimesOfDay})$0"},
		{"trigger": "CRubric::Add", "contents": "${1:CRubric}::Add(${2:\\$arFields})$0"},
		{"trigger": "CRubric::CheckFields", "contents": "${1:CRubric}::CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CRubric::Delete", "contents": "${1:CRubric}::Delete(${2:\\$ID})$0"},
		{"trigger": "CRubric::GetByID", "contents": "${1:CRubric}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CRubric::GetList", "contents": "${1:CRubric}::GetList(${2:\\$aSort=array()}, ${2:\\$aFilter=array()})$0"},
		{"trigger": "CRubric::GetSubscriptionCount", "contents": "${1:CRubric}::GetSubscriptionCount(${2:\\$ID})$0"},
		{"trigger": "CRubric::OnBeforeLangDelete", "contents": "${1:CRubric}::OnBeforeLangDelete(${2:\\$lang})$0"},
		{"trigger": "CRubric::Update", "contents": "${1:CRubric}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSubscription::CleanUp", "contents": "${1:CSubscription}::CleanUp()$0"},
		{"trigger": "CSubscription::GetByEmail", "contents": "${1:CSubscription}::GetByEmail(${2:\\$email})$0"},
		{"trigger": "CSubscriptionGeneral::Add", "contents": "${1:CSubscriptionGeneral}::Add(${2:\\$arFields}, ${2:\\$SITE_ID=SITE_ID})$0"},
		{"trigger": "CSubscriptionGeneral::Authorize", "contents": "${1:CSubscriptionGeneral}::Authorize(${2:\\$ID}, ${2:\\$CONFIRM_CODE=false})$0"},
		{"trigger": "CSubscriptionGeneral::CheckFields", "contents": "${1:CSubscriptionGeneral}::CheckFields(${2:\\$arFields}, ${2:\\$ID})$0"},
		{"trigger": "CSubscriptionGeneral::CleanUp", "contents": "${1:CSubscriptionGeneral}::CleanUp()$0"},
		{"trigger": "CSubscriptionGeneral::ConfirmEvent", "contents": "${1:CSubscriptionGeneral}::ConfirmEvent(${2:\\$ID}, ${2:\\$SITE_ID=SITE_ID})$0"},
		{"trigger": "CSubscriptionGeneral::Delete", "contents": "${1:CSubscriptionGeneral}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSubscriptionGeneral::GetByID", "contents": "${1:CSubscriptionGeneral}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CSubscriptionGeneral::GetList", "contents": "${1:CSubscriptionGeneral}::GetList(${2:\\$aSort=array()}, ${2:\\$arFilter=array()}, ${4:\\$arNavStartParams=false})$0"},
		{"trigger": "CSubscriptionGeneral::GetRubricarray", "contents": "${1:CSubscriptionGeneral}::GetRubricarray(${2:\\$ID})$0"},
		{"trigger": "CSubscriptionGeneral::GetRubricList", "contents": "${1:CSubscriptionGeneral}::GetRubricList(${2:\\$ID})$0"},
		{"trigger": "CSubscriptionGeneral::GetUserSubscription", "contents": "${1:CSubscriptionGeneral}::GetUserSubscription()$0"},
		{"trigger": "CSubscriptionGeneral::IsAuthorized", "contents": "${1:CSubscriptionGeneral}::IsAuthorized(${2:\\$ID})$0"},
		{"trigger": "CSubscriptionGeneral::OnUserDelete", "contents": "${1:CSubscriptionGeneral}::OnUserDelete(${2:\\$user_id})$0"},
		{"trigger": "CSubscriptionGeneral::OnUserLogout", "contents": "${1:CSubscriptionGeneral}::OnUserLogout(${2:\\$user_id})$0"},
		{"trigger": "CSubscriptionGeneral::Update", "contents": "${1:CSubscriptionGeneral}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$SITE_ID=SITE_ID})$0"},
		{"trigger": "CSubscriptionGeneral::UpdateRubrics", "contents": "${1:CSubscriptionGeneral}::UpdateRubrics(${2:\\$ID}, ${2:\\$aRubric}, ${4:\\$SITE_ID=false})$0"},
		{"trigger": "CSupportEMail::EMailMessageAdd", "contents": "${1:CSupportEMail}::EMailMessageAdd(${2:\\$arMessageFields}, ${2:\\$ACTION_VARS})$0"},
		{"trigger": "CSupportEMail::EMailMessageCheck", "contents": "${1:CSupportEMail}::EMailMessageCheck(${2:\\$arFields}, ${2:\\$ACTION_VARS})$0"},
		{"trigger": "CSupportEMail::OnGetFilterList", "contents": "${1:CSupportEMail}::OnGetFilterList()$0"},
		{"trigger": "CSupportEMail::PrepareVars", "contents": "${1:CSupportEMail}::PrepareVars()$0"},
		{"trigger": "CSupportSuperCoupon::Add", "contents": "${1:CSupportSuperCoupon}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSupportSuperCoupon::Delete", "contents": "${1:CSupportSuperCoupon}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSupportSuperCoupon::Generate", "contents": "${1:CSupportSuperCoupon}::Generate(${2:\\$arParams = array()})$0"},
		{"trigger": "CSupportSuperCoupon::GetList", "contents": "${1:CSupportSuperCoupon}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CSupportSuperCoupon::GetLogList", "contents": "${1:CSupportSuperCoupon}::GetLogList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CSupportSuperCoupon::Update", "contents": "${1:CSupportSuperCoupon}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSupportSuperCoupon::UseCoupon", "contents": "${1:CSupportSuperCoupon}::UseCoupon(${2:\\$coupon})$0"},
		{"trigger": "CSupportSuperCoupon::__CheckFields", "contents": "${1:CSupportSuperCoupon}::__CheckFields(${2:\\$arFields})$0"},
		{"trigger": "CSupportSuperCoupon::_getrandsymbol", "contents": "${1:CSupportSuperCoupon}::_getrandsymbol(${2:\\$x})$0"},
		{"trigger": "CSupportUser2UserGroup::Add", "contents": "${1:CSupportUser2UserGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSupportUser2UserGroup::CheckFields", "contents": "${1:CSupportUser2UserGroup}::CheckFields(${2:&\\$arFields}, ${2:\\$GROUP_ID = 0}, ${4:\\$USER_ID = 0})$0"},
		{"trigger": "CSupportUser2UserGroup::Delete", "contents": "${1:CSupportUser2UserGroup}::Delete(${2:\\$GROUP_ID}, ${2:\\$USER_ID})$0"},
		{"trigger": "CSupportUser2UserGroup::GetList", "contents": "${1:CSupportUser2UserGroup}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CSupportUser2UserGroup::SetGroupUsers", "contents": "${1:CSupportUser2UserGroup}::SetGroupUsers(${2:\\$GROUP_ID}, ${2:\\$arUsers})$0"},
		{"trigger": "CSupportUser2UserGroup::Update", "contents": "${1:CSupportUser2UserGroup}::Update(${2:\\$GROUP_ID}, ${2:\\$USER_ID}, ${4:\\$arFields})$0"},
		{"trigger": "CSupportUserGroup::Add", "contents": "${1:CSupportUserGroup}::Add(${2:\\$arFields})$0"},
		{"trigger": "CSupportUserGroup::AddUserGroup", "contents": "${1:CSupportUserGroup}::AddUserGroup(${2:\\$arFields})$0"},
		{"trigger": "CSupportUserGroup::CheckFields", "contents": "${1:CSupportUserGroup}::CheckFields(${2:&\\$arFields}, ${2:\\$ID = 0})$0"},
		{"trigger": "CSupportUserGroup::Delete", "contents": "${1:CSupportUserGroup}::Delete(${2:\\$ID})$0"},
		{"trigger": "CSupportUserGroup::DeleteUserGroup", "contents": "${1:CSupportUserGroup}::DeleteUserGroup(${2:\\$GROUP_ID}, ${2:\\$USER_ID})$0"},
		{"trigger": "CSupportUserGroup::GetList", "contents": "${1:CSupportUserGroup}::GetList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CSupportUserGroup::GetUserGroupList", "contents": "${1:CSupportUserGroup}::GetUserGroupList(${2:\\$arOrder = array()}, ${2:\\$arFilter = array()})$0"},
		{"trigger": "CSupportUserGroup::Update", "contents": "${1:CSupportUserGroup}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CSupportUserGroup::UpdateUserGroup", "contents": "${1:CSupportUserGroup}::UpdateUserGroup(${2:\\$GROUP_ID}, ${2:\\$USER_ID}, ${4:\\$arFields})$0"},
		{"trigger": "CTicket::AddMessage", "contents": "${1:CTicket}::AddMessage(${2:\\$TICKET_ID}, ${2:\\$arFields}, ${4:&\\$arrFILES}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::AutoClose", "contents": "${1:CTicket}::AutoClose()$0"},
		{"trigger": "CTicket::CheckFields", "contents": "${1:CTicket}::CheckFields(${2:\\$arFields}, ${2:\\$ID}, ${4:\\$arrREQUIRED})$0"},
		{"trigger": "CTicket::CheckFilter", "contents": "${1:CTicket}::CheckFilter(${2:\\$arFilter})$0"},
		{"trigger": "CTicket::CleanUpOnline", "contents": "${1:CTicket}::CleanUpOnline()$0"},
		{"trigger": "CTicket::Delete", "contents": "${1:CTicket}::Delete(${2:\\$TICKET_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::DeleteMessage", "contents": "${1:CTicket}::DeleteMessage(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::ExecuteEvents", "contents": "${1:CTicket}::ExecuteEvents(${2:\\$message}, ${2:\\$arFields}, ${4:\\$is_new})$0"},
		{"trigger": "CTicket::GetAdminEmails", "contents": "${1:CTicket}::GetAdminEmails()$0"},
		{"trigger": "CTicket::GetAdminGroups", "contents": "${1:CTicket}::GetAdminGroups()$0"},
		{"trigger": "CTicket::GetAdminRoleID", "contents": "${1:CTicket}::GetAdminRoleID()$0"},
		{"trigger": "CTicket::GetByID", "contents": "${1:CTicket}::GetByID(${2:\\$ID}, ${2:\\$lang=LANG}, ${4:\\$CHECK_RIGHTS='Y'}, ${4:\\$get_user_name='Y'}, ${6:\\$get_extra_names='Y'})$0"},
		{"trigger": "CTicket::GetDemoRoleID", "contents": "${1:CTicket}::GetDemoRoleID()$0"},
		{"trigger": "CTicket::GetDeniedRoleID", "contents": "${1:CTicket}::GetDeniedRoleID()$0"},
		{"trigger": "CTicket::GetDynamicList", "contents": "${1:CTicket}::GetDynamicList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CTicket::GetEmailsByRole", "contents": "${1:CTicket}::GetEmailsByRole(${2:\\$role})$0"},
		{"trigger": "CTicket::GetFUA", "contents": "${1:CTicket}::GetFUA(${2:\\$site_id})$0"},
		{"trigger": "CTicket::GetFileList", "contents": "${1:CTicket}::GetFileList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CTicket::GetGroupsByRole", "contents": "${1:CTicket}::GetGroupsByRole(${2:\\$role})$0"},
		{"trigger": "CTicket::GetList", "contents": "${1:CTicket}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$CHECK_RIGHTS='Y'}, ${6:\\$get_user_name='Y'}, ${8:\\$get_extra_names='Y'}, ${8:\\$site_id=false})$0"},
		{"trigger": "CTicket::GetMessageByID", "contents": "${1:CTicket}::GetMessageByID(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'}, ${4:\\$get_user_name='Y'})$0"},
		{"trigger": "CTicket::GetMessageDynamicList", "contents": "${1:CTicket}::GetMessageDynamicList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CTicket::GetMessageList", "contents": "${1:CTicket}::GetMessageList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$CHECK_RIGHTS='Y'}, ${6:\\$get_user_name='Y'})$0"},
		{"trigger": "CTicket::GetMessages", "contents": "${1:CTicket}::GetMessages(${2:\\$TICKET_ID}, ${2:\\$arFilter=array()}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::GetOnline", "contents": "${1:CTicket}::GetOnline(${2:\\$TICKET_ID})$0"},
		{"trigger": "CTicket::GetRefBookValues", "contents": "${1:CTicket}::GetRefBookValues(${2:\\$type}, ${2:\\$site_id=false})$0"},
		{"trigger": "CTicket::GetResponsible", "contents": "${1:CTicket}::GetResponsible()$0"},
		{"trigger": "CTicket::GetResponsibleList", "contents": "${1:CTicket}::GetResponsibleList(${2:\\$user_id})$0"},
		{"trigger": "CTicket::GetRoles", "contents": "${1:CTicket}::GetRoles(${2:&\\$isDemo}, ${2:&\\$isSupportClient}, ${4:&\\$isSupportTeam}, ${4:&\\$isAdmin}, ${6:&\\$isAccess}, ${6:&\\$USER_ID}, ${8:\\$CHECK_RIGHTS=true})$0"},
		{"trigger": "CTicket::GetStatus", "contents": "${1:CTicket}::GetStatus(${2:\\$TICKET_ID})$0"},
		{"trigger": "CTicket::GetSupportClientRoleID", "contents": "${1:CTicket}::GetSupportClientRoleID()$0"},
		{"trigger": "CTicket::GetSupportTeamEmails", "contents": "${1:CTicket}::GetSupportTeamEmails()$0"},
		{"trigger": "CTicket::GetSupportTeamGroups", "contents": "${1:CTicket}::GetSupportTeamGroups()$0"},
		{"trigger": "CTicket::GetSupportTeamList", "contents": "${1:CTicket}::GetSupportTeamList()$0"},
		{"trigger": "CTicket::GetSupportTeamRoleID", "contents": "${1:CTicket}::GetSupportTeamRoleID()$0"},
		{"trigger": "CTicket::HaveRole", "contents": "${1:CTicket}::HaveRole(${2:\\$role}, ${2:\\$USER_ID=false})$0"},
		{"trigger": "CTicket::IsAdmin", "contents": "${1:CTicket}::IsAdmin(${2:\\$USER_ID=false})$0"},
		{"trigger": "CTicket::IsDemo", "contents": "${1:CTicket}::IsDemo(${2:\\$USER_ID=false})$0"},
		{"trigger": "CTicket::IsOwner", "contents": "${1:CTicket}::IsOwner(${2:\\$TICKET_ID}, ${2:\\$USER_ID=false})$0"},
		{"trigger": "CTicket::IsResponsible", "contents": "${1:CTicket}::IsResponsible(${2:\\$USER_ID=false})$0"},
		{"trigger": "CTicket::IsSupportClient", "contents": "${1:CTicket}::IsSupportClient(${2:\\$USER_ID=false})$0"},
		{"trigger": "CTicket::IsSupportTeam", "contents": "${1:CTicket}::IsSupportTeam(${2:\\$USER_ID=false})$0"},
		{"trigger": "CTicket::MarkAsSpam", "contents": "${1:CTicket}::MarkAsSpam(${2:\\$TICKET_ID}, ${2:\\$EXACTLY='Y'}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::MarkMessageAsSpam", "contents": "${1:CTicket}::MarkMessageAsSpam(${2:\\$MESSAGE_ID}, ${2:\\$EXACTLY='Y'}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::PrepareFields", "contents": "${1:CTicket}::PrepareFields(${2:\\$arFields}, ${2:\\$table}, ${4:\\$ID})$0"},
		{"trigger": "CTicket::Set", "contents": "${1:CTicket}::Set(${2:\\$arFields}, ${2:&\\$MID}, ${4:\\$ID=''}, ${4:\\$CHECK_RIGHTS='Y'}, ${6:\\$SEND_EMAIL_TO_AUTHOR='Y'}, ${6:\\$SEND_EMAIL_TO_TECHSUPPORT='Y'})$0"},
		{"trigger": "CTicket::SetTicket", "contents": "${1:CTicket}::SetTicket(${2:\\$arFields}, ${2:\\$TICKET_ID=''}, ${4:\\$CHECK_RIGHTS='Y'}, ${4:\\$SEND_EMAIL_TO_AUTHOR='Y'}, ${6:\\$SEND_EMAIL_TO_TECHSUPPORT='Y'})$0"},
		{"trigger": "CTicket::SplitTicket", "contents": "${1:CTicket}::SplitTicket(${2:\\$arParam})$0"},
		{"trigger": "CTicket::UnMarkAsSpam", "contents": "${1:CTicket}::UnMarkAsSpam(${2:\\$TICKET_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::UnMarkMessageAsSpam", "contents": "${1:CTicket}::UnMarkMessageAsSpam(${2:\\$MESSAGE_ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::UpdateLastParams", "contents": "${1:CTicket}::UpdateLastParams(${2:\\$TICKET_ID}, ${2:\\$RESET_AUTO_CLOSE=false}, ${4:\\$CHANGE_LAST_MESSAGE_DATE = true}, ${4:\\$SET_REOPEN_DEFAULT = true})$0"},
		{"trigger": "CTicket::UpdateMessage", "contents": "${1:CTicket}::UpdateMessage(${2:\\$MESSAGE_ID}, ${2:\\$arFields}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicket::UpdateMessages", "contents": "${1:CTicket}::UpdateMessages(${2:\\$TICKET_ID})$0"},
		{"trigger": "CTicket::UpdateOnline", "contents": "${1:CTicket}::UpdateOnline(${2:\\$TICKET_ID}, ${2:\\$USER_ID=false}, ${4:\\$CURRENT_MODE=''})$0"},
		{"trigger": "CTicket::err_mess", "contents": "${1:CTicket}::err_mess()$0"},
		{"trigger": "CTicketDictionary::Add", "contents": "${1:CTicketDictionary}::Add(${2:\\$arFields})$0"},
		{"trigger": "CTicketDictionary::CheckFields", "contents": "${1:CTicketDictionary}::CheckFields(${2:\\$arFields}, ${2:\\$ID = false})$0"},
		{"trigger": "CTicketDictionary::Delete", "contents": "${1:CTicketDictionary}::Delete(${2:\\$ID}, ${2:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CTicketDictionary::GetByID", "contents": "${1:CTicketDictionary}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CTicketDictionary::GetBySID", "contents": "${1:CTicketDictionary}::GetBySID(${2:\\$sid}, ${2:\\$type}, ${4:\\$site_id=SITE_ID})$0"},
		{"trigger": "CTicketDictionary::GetDefault", "contents": "${1:CTicketDictionary}::GetDefault(${2:\\$type}, ${2:\\$site_id=SITE_ID})$0"},
		{"trigger": "CTicketDictionary::GetDropDown", "contents": "${1:CTicketDictionary}::GetDropDown(${2:\\$type='C'}, ${2:\\$site_id=false}, ${4:\\$sla_id=false})$0"},
		{"trigger": "CTicketDictionary::GetDropDownarray", "contents": "${1:CTicketDictionary}::GetDropDownarray(${2:\\$SITE_ID = false}, ${2:\\$SLA_ID = false}, ${4:\\$arUnsetType = array('F')})$0"},
		{"trigger": "CTicketDictionary::GetList", "contents": "${1:CTicketDictionary}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CTicketDictionary::GetNextSort", "contents": "${1:CTicketDictionary}::GetNextSort(${2:\\$TYPE_ID})$0"},
		{"trigger": "CTicketDictionary::GetSitearray", "contents": "${1:CTicketDictionary}::GetSitearray(${2:\\$DICTIONARY_ID})$0"},
		{"trigger": "CTicketDictionary::GetTypeList", "contents": "${1:CTicketDictionary}::GetTypeList()$0"},
		{"trigger": "CTicketDictionary::GetTypeNameByID", "contents": "${1:CTicketDictionary}::GetTypeNameByID(${2:\\$ID})$0"},
		{"trigger": "CTicketDictionary::Update", "contents": "${1:CTicketDictionary}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CTicketDictionary::__CleanDefault", "contents": "${1:CTicketDictionary}::__CleanDefault(${2:&\\$arFields})$0"},
		{"trigger": "CTicketDictionary::__SetSites", "contents": "${1:CTicketDictionary}::__SetSites(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CTicketDictionary::err_mess", "contents": "${1:CTicketDictionary}::err_mess()$0"},
		{"trigger": "CTicketReminder::Add", "contents": "${1:CTicketReminder}::Add(${2:\\$TICKET_ID}, ${2:\\$MESSAGE_ID}, ${4:\\$SLA_ID}, ${4:\\$DATE_START_STMP})$0"},
		{"trigger": "CTicketReminder::Delete", "contents": "${1:CTicketReminder}::Delete(${2:\\$TICKET_ID})$0"},
		{"trigger": "CTicketReminder::Expire", "contents": "${1:CTicketReminder}::Expire(${2:\\$TICKET_ID}, ${2:\\$MESSAGE_ID})$0"},
		{"trigger": "CTicketReminder::GetNextExec", "contents": "${1:CTicketReminder}::GetNextExec(${2:\\$TICKET_ID}, ${2:\\$SLA_ID}, ${4:\\$DATE_START_STMP}, ${4:\\$GET_EXPIRE_STMP=false})$0"},
		{"trigger": "CTicketReminder::GetNextPoint", "contents": "${1:CTicketReminder}::GetNextPoint(${2:&\\$WORK_TIME}, ${2:\\$INITIAL_STMP}, ${4:\\$arSHEDULE})$0"},
		{"trigger": "CTicketReminder::Notify", "contents": "${1:CTicketReminder}::Notify(${2:\\$TICKET_ID}, ${2:\\$MESSAGE_ID})$0"},
		{"trigger": "CTicketReminder::Remove", "contents": "${1:CTicketReminder}::Remove(${2:\\$TICKET_ID})$0"},
		{"trigger": "CTicketReminder::Update", "contents": "${1:CTicketReminder}::Update(${2:\\$TICKET_ID}, ${2:\\$sla_changed = false})$0"},
		{"trigger": "CTicketReminder::err_mess", "contents": "${1:CTicketReminder}::err_mess()$0"},
		{"trigger": "CTicketSLA::Delete", "contents": "${1:CTicketSLA}::Delete(${2:\\$ID}, ${2:\\$CHECK_RIGHTS=true})$0"},
		{"trigger": "CTicketSLA::GetByID", "contents": "${1:CTicketSLA}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CTicketSLA::GetCategoryarray", "contents": "${1:CTicketSLA}::GetCategoryarray(${2:\\$SLA_ID})$0"},
		{"trigger": "CTicketSLA::GetCriticalityarray", "contents": "${1:CTicketSLA}::GetCriticalityarray(${2:\\$SLA_ID})$0"},
		{"trigger": "CTicketSLA::GetDropDown", "contents": "${1:CTicketSLA}::GetDropDown(${2:\\$SITE_ID=''})$0"},
		{"trigger": "CTicketSLA::GetForUser", "contents": "${1:CTicketSLA}::GetForUser(${2:\\$SITE_ID=false}, ${2:\\$USER_ID=false})$0"},
		{"trigger": "CTicketSLA::GetGrouparray", "contents": "${1:CTicketSLA}::GetGrouparray(${2:\\$SLA_ID})$0"},
		{"trigger": "CTicketSLA::GetList", "contents": "${1:CTicketSLA}::GetList(${2:&\\$arSort}, ${2:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CTicketSLA::GetMarkarray", "contents": "${1:CTicketSLA}::GetMarkarray(${2:\\$SLA_ID})$0"},
		{"trigger": "CTicketSLA::GetShedulearray", "contents": "${1:CTicketSLA}::GetShedulearray(${2:\\$SLA_ID})$0"},
		{"trigger": "CTicketSLA::GetSitearray", "contents": "${1:CTicketSLA}::GetSitearray(${2:\\$SLA_ID})$0"},
		{"trigger": "CTicketSLA::Set", "contents": "${1:CTicketSLA}::Set(${2:\\$arFields}, ${2:\\$ID}, ${4:\\$CHECK_RIGHTS=true})$0"},
		{"trigger": "CTicketSLA::err_mess", "contents": "${1:CTicketSLA}::err_mess()$0"},
		{"trigger": "CTranslateEventHandlers::TranslatOnPanelCreate", "contents": "${1:CTranslateEventHandlers}::TranslatOnPanelCreate()$0"},
		{"trigger": "CVote::CheckFields", "contents": "${1:CVote}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0}, ${4:\\$arParams = array()})$0"},
		{"trigger": "CVote::CheckVotingIP", "contents": "${1:CVote}::CheckVotingIP(${2:\\$VOTE_ID}, ${2:\\$REMOTE_ADDR}, ${4:\\$KEEP_IP_SEC}, ${4:\\$params = array()})$0"},
		{"trigger": "CVote::Copy", "contents": "${1:CVote}::Copy(${2:\\$ID})$0"},
		{"trigger": "CVote::Delete", "contents": "${1:CVote}::Delete(${2:\\$ID})$0"},
		{"trigger": "CVote::GetByID", "contents": "${1:CVote}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CVote::GetDropDownList", "contents": "${1:CVote}::GetDropDownList()$0"},
		{"trigger": "CVote::GetList", "contents": "${1:CVote}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CVote::GetNextSort", "contents": "${1:CVote}::GetNextSort(${2:\\$CHANNEL_ID})$0"},
		{"trigger": "CVote::GetNextStartDate", "contents": "${1:CVote}::GetNextStartDate(${2:\\$CHANNEL_ID})$0"},
		{"trigger": "CVote::GetPublicList", "contents": "${1:CVote}::GetPublicList(${2:\\$arFilter=array()}, ${2:\\$strSqlOrder='ORDER BY C.C_SORT}, ${4:C.ID}, ${4:V.DATE_START desc'})$0"},
		{"trigger": "CVote::IsOldVersion", "contents": "${1:CVote}::IsOldVersion()$0"},
		{"trigger": "CVote::KeepVoting", "contents": "${1:CVote}::KeepVoting()$0"},
		{"trigger": "CVote::Reset", "contents": "${1:CVote}::Reset(${2:\\$ID})$0"},
		{"trigger": "CVote::SetVoteUserID", "contents": "${1:CVote}::SetVoteUserID()$0"},
		{"trigger": "CVote::Update", "contents": "${1:CVote}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$strUploadDir = false})$0"},
		{"trigger": "CVote::UpdateVoteUserID", "contents": "${1:CVote}::UpdateVoteUserID(${2:\\$VOTE_USER_ID})$0"},
		{"trigger": "CVote::UserAlreadyVote", "contents": "${1:CVote}::UserAlreadyVote(${2:\\$VOTE_ID}, ${2:\\$VOTE_USER_ID}, ${4:\\$UNIQUE_TYPE}, ${4:\\$KEEP_IP_SEC}, ${6:\\$USER_ID = false})$0"},
		{"trigger": "CVote::UserGroupPermission", "contents": "${1:CVote}::UserGroupPermission(${2:\\$CHANNEL_ID})$0"},
		{"trigger": "CVote::WrongDateInterval", "contents": "${1:CVote}::WrongDateInterval(${2:\\$CURRENT_VOTE_ID}, ${2:\\$DATE_START}, ${4:\\$DATE_END}, ${4:\\$CHANNEL_ID})$0"},
		{"trigger": "CVote::err_mess", "contents": "${1:CVote}::err_mess()$0"},
		{"trigger": "CVoteAnswer::Add", "contents": "${1:CVoteAnswer}::Add(${2:\\$arFields})$0"},
		{"trigger": "CVoteAnswer::CheckFields", "contents": "${1:CVoteAnswer}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CVoteAnswer::Delete", "contents": "${1:CVoteAnswer}::Delete(${2:\\$ID}, ${2:\\$QUESTION_ID = false}, ${4:\\$VOTE_ID = false})$0"},
		{"trigger": "CVoteAnswer::GetGroupAnswers", "contents": "${1:CVoteAnswer}::GetGroupAnswers(${2:\\$ANSWER_ID})$0"},
		{"trigger": "CVoteAnswer::GetList", "contents": "${1:CVoteAnswer}::GetList(${2:\\$QUESTION_ID}, ${2:\\$by='s_c_sort'}, ${4:\\$order='asc'}, ${4:\\$arFilter=array()})$0"},
		{"trigger": "CVoteAnswer::GetListEx", "contents": "${1:CVoteAnswer}::GetListEx(${2:\\$arOrder = array('ID' => 'ASC')}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CVoteAnswer::Update", "contents": "${1:CVoteAnswer}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CVoteAnswer::err_mess", "contents": "${1:CVoteAnswer}::err_mess()$0"},
		{"trigger": "CVoteChannel::Delete", "contents": "${1:CVoteChannel}::Delete(${2:\\$ID})$0"},
		{"trigger": "CVoteChannel::GetarrayGroupPermission", "contents": "${1:CVoteChannel}::GetarrayGroupPermission(${2:\\$channel_id})$0"},
		{"trigger": "CVoteChannel::GetByID", "contents": "${1:CVoteChannel}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CVoteChannel::GetDropDownList", "contents": "${1:CVoteChannel}::GetDropDownList()$0"},
		{"trigger": "CVoteChannel::GetGroupPermission", "contents": "${1:CVoteChannel}::GetGroupPermission(${2:\\$channel_id}, ${2:\\$arGroups=false}, ${4:\\$get_from_database=''})$0"},
		{"trigger": "CVoteChannel::GetList", "contents": "${1:CVoteChannel}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CVoteChannel::GetSitearray", "contents": "${1:CVoteChannel}::GetSitearray(${2:\\$CHANNEL_ID})$0"},
		{"trigger": "CVoteChannel::err_mess", "contents": "${1:CVoteChannel}::err_mess()$0"},
		{"trigger": "CVoteDiagramType::CVoteDiagramType", "contents": "${1:CVoteDiagramType}::CVoteDiagramType(${2:\\$directCall=true})$0"},
		{"trigger": "CVoteEvent::Delete", "contents": "${1:CVoteEvent}::Delete(${2:\\$EVENT_ID})$0"},
		{"trigger": "CVoteEvent::GetAnswer", "contents": "${1:CVoteEvent}::GetAnswer(${2:\\$EVENT_ID}, ${2:\\$ANSWER_ID})$0"},
		{"trigger": "CVoteEvent::GetByID", "contents": "${1:CVoteEvent}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CVoteEvent::GetList", "contents": "${1:CVoteEvent}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$get_user='N'})$0"},
		{"trigger": "CVoteEvent::GetUserAnswerStat", "contents": "${1:CVoteEvent}::GetUserAnswerStat(${2:\\$VOTE_ID})$0"},
		{"trigger": "CVoteEvent::SetValid", "contents": "${1:CVoteEvent}::SetValid(${2:\\$EVENT_ID}, ${2:\\$valid})$0"},
		{"trigger": "CVoteEvent::err_mess", "contents": "${1:CVoteEvent}::err_mess()$0"},
		{"trigger": "CVoteQuestion::Add", "contents": "${1:CVoteQuestion}::Add(${2:\\$arFields}, ${2:\\$strUploadDir = false})$0"},
		{"trigger": "CVoteQuestion::CheckFields", "contents": "${1:CVoteQuestion}::CheckFields(${2:\\$ACTION}, ${2:&\\$arFields}, ${4:\\$ID = 0})$0"},
		{"trigger": "CVoteQuestion::Copy", "contents": "${1:CVoteQuestion}::Copy(${2:\\$ID}, ${2:\\$newVoteID})$0"},
		{"trigger": "CVoteQuestion::Delete", "contents": "${1:CVoteQuestion}::Delete(${2:\\$ID}, ${2:\\$VOTE_ID = false})$0"},
		{"trigger": "CVoteQuestion::GetByID", "contents": "${1:CVoteQuestion}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CVoteQuestion::GetList", "contents": "${1:CVoteQuestion}::GetList(${2:\\$VOTE_ID}, ${2:&\\$by}, ${4:&\\$order}, ${4:\\$arFilter=array()}, ${6:&\\$is_filtered})$0"},
		{"trigger": "CVoteQuestion::GetListEx", "contents": "${1:CVoteQuestion}::GetListEx(${2:\\$arOrder = array('ID' => 'ASC')}, ${2:\\$arFilter=array()})$0"},
		{"trigger": "CVoteQuestion::GetNextSort", "contents": "${1:CVoteQuestion}::GetNextSort(${2:\\$VOTE_ID})$0"},
		{"trigger": "CVoteQuestion::Reset", "contents": "${1:CVoteQuestion}::Reset(${2:\\$ID}, ${2:\\$VOTE_ID = false})$0"},
		{"trigger": "CVoteQuestion::Update", "contents": "${1:CVoteQuestion}::Update(${2:\\$ID}, ${2:\\$arFields}, ${4:\\$strUploadDir = false})$0"},
		{"trigger": "CVoteQuestion::err_mess", "contents": "${1:CVoteQuestion}::err_mess()$0"},
		{"trigger": "CVoteUser::Delete", "contents": "${1:CVoteUser}::Delete(${2:\\$USER_ID})$0"},
		{"trigger": "CVoteUser::GetList", "contents": "${1:CVoteUser}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CVoteUser::err_mess", "contents": "${1:CVoteUser}::err_mess()$0"},
		{"trigger": "CWebService::GetComponentContext", "contents": "${1:CWebService}::GetComponentContext(${2:\\$arParams})$0"},
		{"trigger": "CWebService::GetDefaultEndpoint", "contents": "${1:CWebService}::GetDefaultEndpoint()$0"},
		{"trigger": "CWebService::GetDefaultTargetNS", "contents": "${1:CWebService}::GetDefaultTargetNS()$0"},
		{"trigger": "CWebService::GetSOAPServerRequest", "contents": "${1:CWebService}::GetSOAPServerRequest(${2:\\$wsname})$0"},
		{"trigger": "CWebService::GetSOAPServerResponse", "contents": "${1:CWebService}::GetSOAPServerResponse(${2:\\$wsname})$0"},
		{"trigger": "CWebService::GetWSDL", "contents": "${1:CWebService}::GetWSDL(${2:\\$wsname})$0"},
		{"trigger": "CWebService::MethodRequireHTTPAuth", "contents": "${1:CWebService}::MethodRequireHTTPAuth(${2:\\$class}, ${2:\\$method})$0"},
		{"trigger": "CWebService::RegisterWebService", "contents": "${1:CWebService}::RegisterWebService(${2:\\$className /*IWebService implementor*/})$0"},
		{"trigger": "CWebService::SOAPServerProcessRequest", "contents": "${1:CWebService}::SOAPServerProcessRequest(${2:\\$wsname})$0"},
		{"trigger": "CWebService::SetComponentContext", "contents": "${1:CWebService}::SetComponentContext(${2:\\$arParams})$0"},
		{"trigger": "CWebService::TestComponent", "contents": "${1:CWebService}::TestComponent(${2:\\$wsname})$0"},
		{"trigger": "CXMLCreator::CXMLCreator", "contents": "${1:CXMLCreator}::CXMLCreator(${2:\\$tag}, ${2:\\$cdata = false})$0"},
		{"trigger": "CXMLCreator::CreateFromDOM", "contents": "${1:CXMLCreator}::CreateFromDOM(${2:\\$dom})$0"},
		{"trigger": "CXMLCreator::__createFromDOM", "contents": "${1:CXMLCreator}::__createFromDOM(${2:\\$domNode})$0"},
		{"trigger": "CXMLCreator::__destruct", "contents": "${1:CXMLCreator}::__destruct()$0"},
		{"trigger": "CXMLCreator::_getAttributs", "contents": "${1:CXMLCreator}::_getAttributs()$0"},
		{"trigger": "CXMLCreator::_getChildren", "contents": "${1:CXMLCreator}::_getChildren()$0"},
		{"trigger": "CXMLCreator::addChild", "contents": "${1:CXMLCreator}::addChild(${2:\\$element})$0"},
		{"trigger": "CXMLCreator::createTagAttributed", "contents": "${1:CXMLCreator}::createTagAttributed(${2:\\$heavyTag}, ${2:\\$value = null})$0"},
		{"trigger": "CXMLCreator::encodeValueLight", "contents": "${1:CXMLCreator}::encodeValueLight(${2: \\$name}, ${2:\\$value})$0"},
		{"trigger": "CXMLCreator::getChildrenCount", "contents": "${1:CXMLCreator}::getChildrenCount()$0"},
		{"trigger": "CXMLCreator::getXML", "contents": "${1:CXMLCreator}::getXML()$0"},
		{"trigger": "CXMLCreator::getXMLHeader", "contents": "${1:CXMLCreator}::getXMLHeader()$0"},
		{"trigger": "CXMLCreator::setAttribute", "contents": "${1:CXMLCreator}::setAttribute(${2:\\$attrName}, ${2:\\$attrValue})$0"},
		{"trigger": "CXMLCreator::setCDATA", "contents": "${1:CXMLCreator}::setCDATA()$0"},
		{"trigger": "CXMLCreator::setData", "contents": "${1:CXMLCreator}::setData(${2:\\$data})$0"},
		{"trigger": "CXMLCreator::setName", "contents": "${1:CXMLCreator}::setName(${2:\\$tag})$0"},
		{"trigger": "IWebService::GetWebServiceDesc", "contents": "${1:IWebService}::GetWebServiceDesc()$0"},
		{"trigger": "CRatingsComponentsWiki::BeforeIndex", "contents": "${1:CRatingsComponentsWiki}::BeforeIndex(${2:\\$arParams})$0"},
		{"trigger": "CRatingsComponentsWiki::OnAddRatingVote", "contents": "${1:CRatingsComponentsWiki}::OnAddRatingVote(${2:\\$id}, ${2:\\$arParams})$0"},
		{"trigger": "CRatingsComponentsWiki::OnCancelRatingVote", "contents": "${1:CRatingsComponentsWiki}::OnCancelRatingVote(${2:\\$id}, ${2:\\$arParams})$0"},
		{"trigger": "CUserTypeWiki::CheckPermission", "contents": "${1:CUserTypeWiki}::CheckPermission()$0"},
		{"trigger": "CUserTypeWiki::GetUserTypeDescription", "contents": "${1:CUserTypeWiki}::GetUserTypeDescription()$0"},
		{"trigger": "CWiki::Add", "contents": "${1:CWiki}::Add(${2:\\$arFields})$0"},
		{"trigger": "CWiki::AddImage", "contents": "${1:CWiki}::AddImage(${2:\\$ID}, ${2:\\$IBLOCK_ID}, ${4:\\$arImage})$0"},
		{"trigger": "CWiki::Delete", "contents": "${1:CWiki}::Delete(${2:\\$ID}, ${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CWiki::DeleteImage", "contents": "${1:CWiki}::DeleteImage(${2:\\$IMAGE_ID}, ${2:\\$ID}, ${4:\\$IBLOCK_ID})$0"},
		{"trigger": "CWiki::GetCategory", "contents": "${1:CWiki}::GetCategory(${2:\\$NAME}, ${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CWiki::GetDefaultPage", "contents": "${1:CWiki}::GetDefaultPage(${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CWiki::GetElementById", "contents": "${1:CWiki}::GetElementById(${2:\\$ID}, ${2:\\$arFilter})$0"},
		{"trigger": "CWiki::GetElementByName", "contents": "${1:CWiki}::GetElementByName(${2:\\$NAME}, ${2:\\$arFilter})$0"},
		{"trigger": "CWiki::Recover", "contents": "${1:CWiki}::Recover(${2:\\$HISTORY_ID}, ${2:\\$ID}, ${4:\\$IBLOCK_ID})$0"},
		{"trigger": "CWiki::Rename", "contents": "${1:CWiki}::Rename(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CWiki::SetDefaultPage", "contents": "${1:CWiki}::SetDefaultPage(${2:\\$IBLOCK_ID}, ${2:\\$NAME})$0"},
		{"trigger": "CWiki::Update", "contents": "${1:CWiki}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CWiki::UpdateCategory", "contents": "${1:CWiki}::UpdateCategory(${2:\\$ID}, ${2:\\$IBLOCK_ID}, ${4:\\$arCats})$0"},
		{"trigger": "CWiki::UpdateHistory", "contents": "${1:CWiki}::UpdateHistory(${2:\\$ID}, ${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CWiki::__construct", "contents": "${1:CWiki}::__construct()$0"},
		{"trigger": "CWikiDiff::LongestCommonSubsequence", "contents": "${1:CWikiDiff}::LongestCommonSubsequence(${2:\\$X}, ${2:\\$Y})$0"},
		{"trigger": "CWikiDiff::PrintView", "contents": "${1:CWikiDiff}::PrintView(${2:\\$C,\\$X,\\$Y,\\$start=0,\\$end=1000})$0"},
		{"trigger": "CWikiDiff::getDiff", "contents": "${1:CWikiDiff}::getDiff(${2:\\$X}, ${2:\\$Y})$0"},
		{"trigger": "CWikiDiff::printDiff", "contents": "${1:CWikiDiff}::printDiff(${2:\\$C}, ${2:\\$X}, ${4:\\$Y}, ${4:\\$Xt}, ${6:\\$Yt}, ${6:\\$i}, ${8:\\$j})$0"},
		{"trigger": "CWikiDocument::CanUserOperateDocument", "contents": "${1:CWikiDocument}::CanUserOperateDocument(${2:\\$operation}, ${2:\\$userId}, ${4:\\$documentId}, ${4:\\$arParameters = array()})$0"},
		{"trigger": "CWikiParser::Clear", "contents": "${1:CWikiParser}::Clear(${2:\\$text})$0"},
		{"trigger": "CWikiParser::Parse", "contents": "${1:CWikiParser}::Parse(${2:\\$text}, ${2:\\$type = 'text'}, ${4:\\$arFile = array()}, ${4:\\$siteDir=false})$0"},
		{"trigger": "CWikiParser::__construct", "contents": "${1:CWikiParser}::__construct()$0"},
		{"trigger": "CWikiParser::_noWikiCallback", "contents": "${1:CWikiParser}::_noWikiCallback(${2:\\$matches})$0"},
		{"trigger": "CWikiParser::_noWikiReturn2Callback", "contents": "${1:CWikiParser}::_noWikiReturn2Callback(${2:\\$matches})$0"},
		{"trigger": "CWikiParser::_noWikiReturnCallback", "contents": "${1:CWikiParser}::_noWikiReturnCallback(${2:\\$matches})$0"},
		{"trigger": "CWikiParser::_processExternalLinkCallback", "contents": "${1:CWikiParser}::_processExternalLinkCallback(${2:\\$matches})$0"},
		{"trigger": "CWikiParser::_processFileCallback", "contents": "${1:CWikiParser}::_processFileCallback(${2:\\$matches})$0"},
		{"trigger": "CWikiParser::_processInternalLinkCallback", "contents": "${1:CWikiParser}::_processInternalLinkCallback(${2:\\$matches})$0"},
		{"trigger": "CWikiParser::_processInternalLinkPrepareCallback", "contents": "${1:CWikiParser}::_processInternalLinkPrepareCallback(${2:\\$matches})$0"},
		{"trigger": "CWikiParser::parseBeforeSave", "contents": "${1:CWikiParser}::parseBeforeSave(${2:\\$text}, ${2:&\\$arCat = array()})$0"},
		{"trigger": "CWikiParser::parseForSearch", "contents": "${1:CWikiParser}::parseForSearch(${2:\\$text})$0"},
		{"trigger": "CWikiParser::processInternalLink", "contents": "${1:CWikiParser}::processInternalLink(${2:\\$text})$0"},
		{"trigger": "CWikiParser::processToc", "contents": "${1:CWikiParser}::processToc(${2:\\$text})$0"},
		{"trigger": "CWikiSecurity::__construct", "contents": "${1:CWikiSecurity}::__construct(${2:\\$char = false})$0"},
		{"trigger": "CWikiSecurity::_decode", "contents": "${1:CWikiSecurity}::_decode(${2:\\$str})$0"},
		{"trigger": "CWikiSecurity::_decode_cb", "contents": "${1:CWikiSecurity}::_decode_cb(${2:\\$in})$0"},
		{"trigger": "CWikiSecurity::_decode_cb_hex", "contents": "${1:CWikiSecurity}::_decode_cb_hex(${2:\\$in})$0"},
		{"trigger": "CWikiSecurity::_dostr", "contents": "${1:CWikiSecurity}::_dostr(${2:&\\$str})$0"},
		{"trigger": "CWikiSecurity::clear", "contents": "${1:CWikiSecurity}::clear(${2:&\\$str})$0"},
		{"trigger": "CWikiSocnet::AddComment_Wiki", "contents": "${1:CWikiSocnet}::AddComment_Wiki(${2:\\$arFields})$0"},
		{"trigger": "CWikiSocnet::EnableSocnet", "contents": "${1:CWikiSocnet}::EnableSocnet(${2:\\$bActive = false})$0"},
		{"trigger": "CWikiSocnet::FormatComment_Wiki", "contents": "${1:CWikiSocnet}::FormatComment_Wiki(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false}, ${4:\\$arLog = array()})$0"},
		{"trigger": "CWikiSocnet::FormatEvent_Wiki", "contents": "${1:CWikiSocnet}::FormatEvent_Wiki(${2:\\$arFields}, ${2:\\$arParams}, ${4:\\$bMail = false})$0"},
		{"trigger": "CWikiSocnet::Init", "contents": "${1:CWikiSocnet}::Init(${2:\\$SOCNET_GROUP_ID}, ${2:\\$IBLOCK_ID})$0"},
		{"trigger": "CWikiSocnet::IsEnabledSocnet", "contents": "${1:CWikiSocnet}::IsEnabledSocnet()$0"},
		{"trigger": "CWikiSocnet::IsSocNet", "contents": "${1:CWikiSocnet}::IsSocNet()$0"},
		{"trigger": "CWikiSocnet::OnFillSocNetFeaturesList", "contents": "${1:CWikiSocnet}::OnFillSocNetFeaturesList(${2:&\\$arSocNetFeaturesSettings})$0"},
		{"trigger": "CWikiSocnet::OnFillSocNetMenu", "contents": "${1:CWikiSocnet}::OnFillSocNetMenu(${2:&\\$arResult}, ${2:\\$arParams = array()})$0"},
		{"trigger": "CWikiSocnet::OnInitSocNetComponentVariables", "contents": "${1:CWikiSocnet}::OnInitSocNetComponentVariables(${2:&\\$arVariableAliases}, ${2:&\\$arCustomPagesPath})$0"},
		{"trigger": "CWikiSocnet::OnParseSocNetComponentPath", "contents": "${1:CWikiSocnet}::OnParseSocNetComponentPath(${2:&\\$arUrlTemplates}, ${2:&\\$arCustomPagesPath}, ${4:\\$arParams})$0"},
		{"trigger": "CWikiSocnet::RecalcIBlockID", "contents": "${1:CWikiSocnet}::RecalcIBlockID(${2:\\$SocNetGroupID})$0"},
		{"trigger": "CWikiUtils::CheckAccess", "contents": "${1:CWikiUtils}::CheckAccess(${2:\\$access = 'view'})$0"},
		{"trigger": "CWikiUtils::CheckServicePage", "contents": "${1:CWikiUtils}::CheckServicePage(${2:\\$NAME}, ${2:&\\$SERVICE_NAME})$0"},
		{"trigger": "CWikiUtils::GetUserLogin", "contents": "${1:CWikiUtils}::GetUserLogin(${2:\\$arUserData = array()})$0"},
		{"trigger": "CWikiUtils::IsCategoryPage", "contents": "${1:CWikiUtils}::IsCategoryPage(${2:\\$NAME}, ${2:&\\$CATEGORY_NAME})$0"},
		{"trigger": "CWikiUtils::IsDeleteable", "contents": "${1:CWikiUtils}::IsDeleteable()$0"},
		{"trigger": "CWikiUtils::IsReadable", "contents": "${1:CWikiUtils}::IsReadable()$0"},
		{"trigger": "CWikiUtils::IsWriteable", "contents": "${1:CWikiUtils}::IsWriteable()$0"},
		{"trigger": "CWikiUtils::OnBeforeIndex", "contents": "${1:CWikiUtils}::OnBeforeIndex(${2:\\$arFields})$0"},
		{"trigger": "CWikiUtils::SetCommentPath", "contents": "${1:CWikiUtils}::SetCommentPath(${2:\\$optName}, ${2:\\$forumID}, ${4:\\$rightPath})$0"},
		{"trigger": "CWikiUtils::getRightsLinks", "contents": "${1:CWikiUtils}::getRightsLinks(${2:\\$arPage})$0"},
		{"trigger": "CWikiUtils::htmlspecialchars_decode", "contents": "${1:CWikiUtils}::htmlspecialchars_decode(${2:\\$str})$0"},
		{"trigger": "CWikiUtils::htmlspecialcharsback", "contents": "${1:CWikiUtils}::htmlspecialcharsback(${2:\\$str}, ${2:\\$end = true})$0"},
		{"trigger": "CWikiUtils::isAllowHTML", "contents": "${1:CWikiUtils}::isAllowHTML()$0"},
		{"trigger": "CWorkflow::CleanUp", "contents": "${1:CWorkflow}::CleanUp()$0"},
		{"trigger": "CWorkflow::CleanUpFiles", "contents": "${1:CWorkflow}::CleanUpFiles(${2:\\$DOCUMENT_ID=false}, ${2:\\$FILE_ID=false})$0"},
		{"trigger": "CWorkflow::CleanUpHistory", "contents": "${1:CWorkflow}::CleanUpHistory()$0"},
		{"trigger": "CWorkflow::CleanUpHistoryCopies", "contents": "${1:CWorkflow}::CleanUpHistoryCopies(${2:\\$DOCUMENT_ID=false}, ${2:\\$HISTORY_COPIES=false})$0"},
		{"trigger": "CWorkflow::CleanUpHistoryCopies_SE", "contents": "${1:CWorkflow}::CleanUpHistoryCopies_SE(${2:\\$FILENAME}, ${2:\\$HISTORY_COPIES=false})$0"},
		{"trigger": "CWorkflow::CleanUpPreview", "contents": "${1:CWorkflow}::CleanUpPreview(${2:\\$DOCUMENT_ID=false})$0"},
		{"trigger": "CWorkflow::CleanUpPublished", "contents": "${1:CWorkflow}::CleanUpPublished()$0"},
		{"trigger": "CWorkflow::Delete", "contents": "${1:CWorkflow}::Delete(${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::DeleteFile", "contents": "${1:CWorkflow}::DeleteFile(${2:\\$FILENAME})$0"},
		{"trigger": "CWorkflow::DeleteHistory", "contents": "${1:CWorkflow}::DeleteHistory(${2:\\$ID})$0"},
		{"trigger": "CWorkflow::DeletePreview", "contents": "${1:CWorkflow}::DeletePreview(${2:\\$FILENAME}, ${2:\\$site = false})$0"},
		{"trigger": "CWorkflow::GetByFilename", "contents": "${1:CWorkflow}::GetByFilename(${2:\\$FILENAME}, ${2:\\$SITE_ID}, ${4:\\$arFilter = false})$0"},
		{"trigger": "CWorkflow::GetByID", "contents": "${1:CWorkflow}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CWorkflow::GetEditLink", "contents": "${1:CWorkflow}::GetEditLink(${2:\\$FILENAME}, ${2:&\\$status_id}, ${4:&\\$status_title}, ${4:\\$template=''}, ${6:\\$lang=LANGUAGE_ID}, ${6:\\$return_url=''})$0"},
		{"trigger": "CWorkflow::GetFileByID", "contents": "${1:CWorkflow}::GetFileByID(${2:\\$DOCUMENT_ID}, ${2:\\$FILENAME})$0"},
		{"trigger": "CWorkflow::GetFileContent", "contents": "${1:CWorkflow}::GetFileContent(${2:\\$did}, ${2:\\$fname}, ${4:\\$wf_path=''}, ${4:\\$site=false})$0"},
		{"trigger": "CWorkflow::GetFileList", "contents": "${1:CWorkflow}::GetFileList(${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::GetHistoryByID", "contents": "${1:CWorkflow}::GetHistoryByID(${2:\\$ID})$0"},
		{"trigger": "CWorkflow::GetHistoryList", "contents": "${1:CWorkflow}::GetHistoryList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CWorkflow::GetList", "contents": "${1:CWorkflow}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered})$0"},
		{"trigger": "CWorkflow::GetLockStatus", "contents": "${1:CWorkflow}::GetLockStatus(${2:\\$DOCUMENT_ID}, ${2:&\\$locked_by}, ${4:&\\$date_lock})$0"},
		{"trigger": "CWorkflow::GetStatus", "contents": "${1:CWorkflow}::GetStatus(${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::GetTempDir", "contents": "${1:CWorkflow}::GetTempDir()$0"},
		{"trigger": "CWorkflow::GetUniqueFilename", "contents": "${1:CWorkflow}::GetUniqueFilename(${2:\\$filename})$0"},
		{"trigger": "CWorkflow::GetUniquePreview", "contents": "${1:CWorkflow}::GetUniquePreview(${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::Insert", "contents": "${1:CWorkflow}::Insert(${2:\\$arFields})$0"},
		{"trigger": "CWorkflow::IsAdmin", "contents": "${1:CWorkflow}::IsAdmin()$0"},
		{"trigger": "CWorkflow::IsAllowEdit", "contents": "${1:CWorkflow}::IsAllowEdit(${2:\\$DOCUMENT_ID}, ${2:&\\$locked_by}, ${4:&\\$date_lock}, ${4:\\$CHECK_RIGHTS='Y'})$0"},
		{"trigger": "CWorkflow::IsFilenameExists", "contents": "${1:CWorkflow}::IsFilenameExists(${2:\\$FILENAME})$0"},
		{"trigger": "CWorkflow::IsHaveEditRights", "contents": "${1:CWorkflow}::IsHaveEditRights(${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::IsPreviewExists", "contents": "${1:CWorkflow}::IsPreviewExists(${2:\\$FILENAME})$0"},
		{"trigger": "CWorkflow::LinkFiles2Document", "contents": "${1:CWorkflow}::LinkFiles2Document(${2:\\$arUploadedFiles,\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::Lock", "contents": "${1:CWorkflow}::Lock(${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::OnChangeFile", "contents": "${1:CWorkflow}::OnChangeFile(${2:\\$path}, ${2:\\$site})$0"},
		{"trigger": "CWorkflow::OnPanelCreate", "contents": "${1:CWorkflow}::OnPanelCreate()$0"},
		{"trigger": "CWorkflow::SetHistory", "contents": "${1:CWorkflow}::SetHistory(${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::SetMove", "contents": "${1:CWorkflow}::SetMove(${2:\\$DOCUMENT_ID}, ${2:\\$STATUS_ID}, ${4:\\$OLD_STATUS_ID}, ${4:\\$LOG_ID})$0"},
		{"trigger": "CWorkflow::SetStatus", "contents": "${1:CWorkflow}::SetStatus(${2:\\$DOCUMENT_ID}, ${2:\\$STATUS_ID}, ${4:\\$OLD_STATUS_ID}, ${4:\\$history=true})$0"},
		{"trigger": "CWorkflow::UnLock", "contents": "${1:CWorkflow}::UnLock(${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::Update", "contents": "${1:CWorkflow}::Update(${2:\\$arFields}, ${2:\\$DOCUMENT_ID})$0"},
		{"trigger": "CWorkflow::__CheckSite", "contents": "${1:CWorkflow}::__CheckSite(${2:\\$site})$0"},
		{"trigger": "CWorkflow::err_mess", "contents": "${1:CWorkflow}::err_mess()$0"},
		{"trigger": "CWorkflowStatus::Add", "contents": "${1:CWorkflowStatus}::Add(${2:\\$arFields})$0"},
		{"trigger": "CWorkflowStatus::CheckFields", "contents": "${1:CWorkflowStatus}::CheckFields(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CWorkflowStatus::GetByID", "contents": "${1:CWorkflowStatus}::GetByID(${2:\\$ID})$0"},
		{"trigger": "CWorkflowStatus::GetDropDownList", "contents": "${1:CWorkflowStatus}::GetDropDownList(${2:\\$SHOW_ALL='N'}, ${2:\\$strOrder = 'desc'}, ${4:\\$arFilter = array()})$0"},
		{"trigger": "CWorkflowStatus::GetList", "contents": "${1:CWorkflowStatus}::GetList(${2:&\\$by}, ${2:&\\$order}, ${4:\\$arFilter=array()}, ${4:&\\$is_filtered}, ${6:\\$arSelect=array()})$0"},
		{"trigger": "CWorkflowStatus::GetNextSort", "contents": "${1:CWorkflowStatus}::GetNextSort()$0"},
		{"trigger": "CWorkflowStatus::SetPermissions", "contents": "${1:CWorkflowStatus}::SetPermissions(${2:\\$STATUS_ID}, ${2:\\$arGroups}, ${4:\\$PERMISSION_TYPE = 1})$0"},
		{"trigger": "CWorkflowStatus::Update", "contents": "${1:CWorkflowStatus}::Update(${2:\\$ID}, ${2:\\$arFields})$0"},
		{"trigger": "CWorkflowStatus::err_mess", "contents": "${1:CWorkflowStatus}::err_mess()$0""}

	]
}